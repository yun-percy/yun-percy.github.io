<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Python MySQLdb的安装笔记]]></title>
      <url>http://percychen.com/2016/12/23/installmysqlbdnote/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/wklken/article/details/7271019" target="_blank" rel="external">原帖地址</a></p>
<p>[python MySQLdb在windows环境下的快速安装、问题解决方式]<br>(<a href="http://blog.csdn.NET/wklken/article/details/7253245" target="_blank" rel="external">http://blog.csdn.NET/wklken/article/details/7253245</a>)</p>
<h2 id="命令安装"><a href="#命令安装" class="headerlink" title="命令安装"></a>命令安装</h2><blockquote>
<p>机器环境需要mysql环境</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install MySQL-python</div></pre></td></tr></table></figure>
<p>可能遇到问题：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; import MySQLdb</div><div class="line">Traceback (most recent call last):</div><div class="line">  File "&lt;stdin&gt;", line 1, in ?</div><div class="line">  File "MySQLdb/__init__.py", line 22, in ?</div><div class="line">    raise ImportError("this is MySQLdb version %s, but _mysql is version %r" %</div><div class="line">ImportError: this is MySQLdb version (1, 2, 3, 'final', 0), but _mysql is version (1, 2, 1, 'final', 1)</div></pre></td></tr></table></figure>
<p>原因：之前使用编译的方法进行安装，下的是1.2.3，但是用yum目前最高1.2.1，冲突</p>
<p>解决方法：删除已经编译的文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm -rf MySQL-python-1.2.3/</div></pre></td></tr></table></figure>
<p>再进行</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> MySQLdb</div></pre></td></tr></table></figure>
<p>无错误，则表示成功了</p>
<h2 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h2><p>需要：</p>
<ul>
<li>gcc</li>
<li>setuptools   </li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -O setuptools-0.6c8.tar.gz  http://pypi.python.org/packages/<span class="built_in">source</span>/s/setuptools/setuptools-0.6c8.tar.gz</div></pre></td></tr></table></figure>
<p>解压执行 </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo easy_install.py </div><div class="line"><span class="comment">#或者 </span></div><div class="line">python setup.py build &amp;&amp; sudo python setup.py install]</div></pre></td></tr></table></figure>
<ul>
<li>python-dev    </li>
</ul>
<p>在 </p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install python-dev</div><div class="line">```   </div><div class="line"></div><div class="line">否则会报异常：</div></pre></td></tr></table></figure>
<p>fatal error: Python.h: 没有那个文件或目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### 步骤：</div><div class="line"></div><div class="line">```sh</div><div class="line">wget http://sourceforge.net/projects/mysql-python/files/latest/download</div><div class="line">$ tar xfz MySQL-python-1.2.3.tar.gz</div><div class="line">$ cd MySQL-python-1.2.3</div><div class="line">$whereis  mysql_config </div><div class="line">mysql_config: /usr/bin/mysql_config</div><div class="line">$ vim site.cfg</div></pre></td></tr></table></figure></p>
<p>修改<code>mysql_config</code>为mysql配置文件的路径 <code>/usr/bin/mysql_config</code></p>
<p>还要修改</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> threadsafe = False</div><div class="line">$ python setup.py build</div><div class="line">$ sudo python setup.py install</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MAC下的几种磨皮插件]]></title>
      <url>http://percychen.com/2016/12/23/mac_ps_plugin/</url>
      <content type="html"><![CDATA[<blockquote>
<p>今天给大家分享的是期待已久的Adobe Photoshop CC2015 磨皮降噪滤镜三套装 Imagenomic Professional Plugin Suite 2015(破解版、算号器、注册码)，支持Adobe Photoshop CC 2015 与 Adobe Photoshop Elements </p>
</blockquote>
<p>包含插件：</p>
<ul>
<li>Portraiture</li>
<li>Noiseware</li>
<li>RealGrain</li>
</ul>
<blockquote>
<p>Imagenomic滤镜外挂是一款用于人像图片润色，减少了人工选择图像区域的重复劳动。它能智能地对图像中的皮肤材质、头发、眉毛、睫毛等部位进行平滑和减少疵点处理!效果相当不错</p>
</blockquote>
<p>注册码：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Noiseware PS</span></div><div class="line">6A78470CAF326DD88F4C4E947C41F748</div><div class="line"><span class="comment">#Portraiture PS</span></div><div class="line">C059657AC5B67C881EFE3CF391D9B972</div><div class="line"><span class="comment">#Realgrain PS</span></div><div class="line">2960A66DC450ED0FAD17536DFE2EA6DD</div></pre></td></tr></table></figure>
<p><a href="https://pan.baidu.com/s/1i5FOIep" target="_blank" rel="external">点击下载</a> 密码: t8m3</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mysql 命令行语句笔记]]></title>
      <url>http://percychen.com/2016/12/07/mysqlnote/</url>
      <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/good_hans/archive/2010/03/29/1700046.html" target="_blank" rel="external">原帖地址</a></p>
<h3 id="mysql服务的启动和停止"><a href="#mysql服务的启动和停止" class="headerlink" title="mysql服务的启动和停止"></a>mysql服务的启动和停止</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">net stop mysql</div><div class="line">net start mysql</div></pre></td></tr></table></figure>
<h3 id="登陆mysql"><a href="#登陆mysql" class="headerlink" title="登陆mysql"></a>登陆mysql</h3><p>语法如下： mysql -u用户名 -p用户密码<br>键入命令mysql -uroot -p， 回车后提示你输入密码，输入12345，然后回车即可进入到mysql中了，mysql的提示符是：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;</div></pre></td></tr></table></figure>
<p>注意，如果是连接到另外的机器上，则需要加入一个参数-h机器IP</p>
<p>###增加新用户</p>
<blockquote>
<p>格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by “密码”</p>
</blockquote>
<p>   如，增加一个用户user1密码为password1，让其可以在本机上登录， 并对所有数  据库有查询、插入、修改、删除的权限。首先用以root用户连入mysql，然后键入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grant select,insert,update,delete on *.* to user1@localhost Identified by <span class="string">"password1"</span>;</div></pre></td></tr></table></figure>
<p>如果希望该用户能够在任何机器上登陆mysql，则将localhost改为”%”。</p>
<p>如果你不想user1有密码，可以再打一个命令将密码去掉。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grant select,insert,update,delete on mydb.* to user1@localhost identified by &quot;&quot;;</div></pre></td></tr></table></figure>
<h3 id="操作数据库"><a href="#操作数据库" class="headerlink" title="操作数据库"></a>操作数据库</h3><blockquote>
<p>登录到mysql中，然后在mysql的提示符下运行下列命令，每个命令以分号结束。</p>
</blockquote>
<h4 id="显示数据库列表。"><a href="#显示数据库列表。" class="headerlink" title="显示数据库列表。"></a>显示数据库列表。</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show databases;</div></pre></td></tr></table></figure>
<p>缺省有两个数据库：mysql和test。 mysql库存放着mysql的系统和用户权限信息，我们改密码和新增用户，实际上就是对这个库进行操作。</p>
<h4 id="显示库中的数据表："><a href="#显示库中的数据表：" class="headerlink" title="显示库中的数据表："></a>显示库中的数据表：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use mysql;</div><div class="line">show tables;</div></pre></td></tr></table></figure>
<h4 id="显示数据表的结构："><a href="#显示数据表的结构：" class="headerlink" title="显示数据表的结构："></a>显示数据表的结构：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">describe 表名;</div></pre></td></tr></table></figure>
<h3 id="建库与删库："><a href="#建库与删库：" class="headerlink" title="建库与删库："></a>建库与删库：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">create database 库名;</div><div class="line">drop database 库名;</div></pre></td></tr></table></figure>
<h4 id="建表："><a href="#建表：" class="headerlink" title="建表："></a>建表：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">use 库名;</div><div class="line">create table 表名(字段列表);</div><div class="line">drop table 表名;</div></pre></td></tr></table></figure>
<h4 id="清空表中记录："><a href="#清空表中记录：" class="headerlink" title="清空表中记录："></a>清空表中记录：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">delete from 表名;</div></pre></td></tr></table></figure>
<h4 id="显示表中的记录："><a href="#显示表中的记录：" class="headerlink" title="显示表中的记录："></a>显示表中的记录：</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">select * from 表名;</div></pre></td></tr></table></figure>
<h3 id="导出和导入数据"><a href="#导出和导入数据" class="headerlink" title="导出和导入数据"></a>导出和导入数据</h3><p>####导出数据：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump --opt <span class="built_in">test</span> &gt; mysql.test</div></pre></td></tr></table></figure>
<p>即将数据库test数据库导出到mysql.test文件，后者是一个文本文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u root -p123456 --databases dbname &gt; mysql.dbname</div></pre></td></tr></table></figure>
<p>就是把数据库dbname导出到文件mysql.dbname中。</p>
<h4 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据:"></a>导入数据:</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqlimport -u root -p123456 &lt; mysql.dbname。</div></pre></td></tr></table></figure>
<p>不用解释了吧。</p>
<h4 id="将文本数据导入数据库"><a href="#将文本数据导入数据库" class="headerlink" title="将文本数据导入数据库:"></a>将文本数据导入数据库:</h4><p>文本数据的字段数据之间用tab键隔开。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">use <span class="built_in">test</span>;</div><div class="line">load data <span class="built_in">local</span> infile <span class="string">"文件名"</span> into table 表名;</div></pre></td></tr></table></figure>
<h4 id="往表中加入记录"><a href="#往表中加入记录" class="headerlink" title="往表中加入记录"></a>往表中加入记录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; insert into MYTABLE values (<span class="string">"hyq"</span>,<span class="string">"M"</span>);</div></pre></td></tr></table></figure>
<h4 id="删除一条记录"><a href="#删除一条记录" class="headerlink" title="删除一条记录"></a>删除一条记录</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;delete from 表名 <span class="built_in">where</span> id=1;</div></pre></td></tr></table></figure>
<h4 id="用文本方式将数据装入数据库表中-例如D-mysql-txt"><a href="#用文本方式将数据装入数据库表中-例如D-mysql-txt" class="headerlink" title="用文本方式将数据装入数据库表中(例如D:/mysql.txt)"></a>用文本方式将数据装入数据库表中(例如D:/mysql.txt)</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt; LOAD DATA LOCAL INFILE <span class="string">"D:/mysql.txt"</span> INTO TABLE MYTABLE;</div></pre></td></tr></table></figure>
<h4 id="导入-sql文件命令-例如D-mysql-sql"><a href="#导入-sql文件命令-例如D-mysql-sql" class="headerlink" title="导入.sql文件命令(例如D:/mysql.sql)"></a>导入.sql文件命令(例如D:/mysql.sql)</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt;use database;</div><div class="line">mysql&gt;<span class="built_in">source</span> d:/mysql.sql;</div></pre></td></tr></table></figure>
<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;drop TABLE MYTABLE;</div></pre></td></tr></table></figure>
<h4 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;delete from MYTABLE;</div></pre></td></tr></table></figure>
<h4 id="更新表中数据"><a href="#更新表中数据" class="headerlink" title="更新表中数据"></a>更新表中数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql&gt;update MYTABLE <span class="built_in">set</span> sex=<span class="string">"f"</span> <span class="built_in">where</span> name=<span class="string">'hyq'</span>;</div></pre></td></tr></table></figure>
<h4 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u root 库名&gt;xxx.data</div></pre></td></tr></table></figure>
<h4 id="连接到远程主机上的MYSQL"><a href="#连接到远程主机上的MYSQL" class="headerlink" title="连接到远程主机上的MYSQL"></a>连接到远程主机上的MYSQL</h4><p>假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -h110.110.110.110 -uroot -pabcd123 <span class="comment"># 远程登录</span></div></pre></td></tr></table></figure>
<p>(注:u与root可以不用加空格，其它也一样)</p>
<h4 id="退出MYSQL命令：-exit-回车"><a href="#退出MYSQL命令：-exit-回车" class="headerlink" title="退出MYSQL命令： exit (回车)"></a>退出MYSQL命令： exit (回车)</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[pycurl的使用]]></title>
      <url>http://percychen.com/2016/11/22/pycurl/</url>
      <content type="html"><![CDATA[<blockquote>
<p>pycurl是curl的一个python版本。</p>
</blockquote>
<h2 id="pycurl的使用说明："><a href="#pycurl的使用说明：" class="headerlink" title="pycurl的使用说明："></a>pycurl的使用说明：</h2><ul>
<li>pycurl的使用主要是一些参数的设定。</li>
</ul>
<p>设定链接地址</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.URL,myurl)</div></pre></td></tr></table></figure>
<p>设置http的包头信息。注意，长度的字符传是用于put或者post等方法传参数的。</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.HTTPHEADER,[<span class="string">'Content-Type: application/json'</span>,<span class="string">'Content-Length: '</span>+str(len(remove_str))])</div></pre></td></tr></table></figure>
<p>设置封装方法，有put，post，get，delete等多种方法<br><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.CUSTOMREQUEST,<span class="string">"DELETE"</span>)</div></pre></td></tr></table></figure></p>
<p>设置psot过去的数据，注意是一个字典样式的字符串    </p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.POSTFIELDS,remove_str)</div></pre></td></tr></table></figure>
<p>设置写的回调，所有输出都定向到b.write中。</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.WRITEFUNCTION,b.write)</div></pre></td></tr></table></figure>
<p>设置重定向次数</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.MAXDEDIRS,<span class="number">5</span>)</div></pre></td></tr></table></figure>
<p>设置链接超时，设置下载超时</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.CONNECTTIMEOUT,<span class="number">60</span>)</div><div class="line">c.setopt(pycurl.TIMEOUT,<span class="number">600</span>)</div><div class="line">```	</div><div class="line"></div><div class="line">设置代理浏览器</div><div class="line"></div><div class="line">```py</div><div class="line">c.setopt(pycurl.USERAGENT,<span class="string">"xxxx"</span>)</div></pre></td></tr></table></figure>
<p>开启包头输出    </p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">c.setopt(pycurl.HEADER,<span class="number">1</span>)</div><div class="line">```	</div><div class="line"></div><div class="line">将包头输出到header_str.write流中</div><div class="line"></div><div class="line">```py</div><div class="line">c.setopt(pycurl.HEADERFUNCTION,header_str.write)</div></pre></td></tr></table></figure>
<p>执行curl命令    </p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.perform()</div></pre></td></tr></table></figure>
<p>打印消息</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> b.getvalue()//打印消息</div><div class="line"><span class="keyword">print</span> c.getinfo(c.HTTP_CODE) //答应返回值</div><div class="line">Print c.getinfo(c.CONTENT_TYPE) //打印文本类型</div><div class="line">Print c.getinfo(c.EFFECTIVE_URL) //打印重定向URL</div></pre></td></tr></table></figure>
<p>上传文件</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">c.setopt(c.HTTPPOST, [(<span class="string">"textname"</span>, (c.FORM_FILE, <span class="string">"/home/ubuntu/avatar.jpg"</span>))])</div></pre></td></tr></table></figure>
<h3 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h3><pre><code class="py"><span class="keyword">import</span> pycurl
<span class="keyword">import</span> StringIO
post_data_dic = {<span class="string">"md5"</span>:md5, <span class="string">"desc"</span>:<span class="string">"the file md5"</span>}
c = pycurl.Curl() <span class="comment">#创建一个同libcurl中的CURL处理器相对应的Curl对象</span>
fp = StringIO.StringIO()
c.setopt(pycurl.WRITEFUNCTION, fp.write)
c.setopt(pycurl.FOLLOWLOCATION, <span class="number">1</span>)    
c.setopt(pycurl.MAXREDIRS, <span class="number">5</span>)
c.setopt(pycurl.CONNECTTIMEOUT, <span class="number">60</span>)
c.setopt(pycurl.TIMEOUT, <span class="number">300</span>)    
c.setopt(c.POST, <span class="number">1</span>)    
c.setopt(c.URL, <span class="string">"http://localhost:8080/post.action"</span>) <span class="comment">#设置要访问的网址</span>
c.setopt(c.POSTFIELDS, urllib.urlencode(post_data_dic))
c.perform() <span class="comment">#执行上述访问网址的操作</span>
c.close() <span class="comment">#Curl对象无操作时，也会自动执行close操作</span>
<span class="keyword">print</span> <span class="string">"the python shell over!"</span>
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[金刚经]]></title>
      <url>http://percychen.com/2016/11/10/jingangjing/</url>
      <content type="html"><![CDATA[<blockquote>
<p>金刚经 - 王菲<br>词：鸠摩罗什<br>曲：王菲<br>编曲：王菲</p>
</blockquote>
<p>南无本师释迦牟尼佛</p>
<p>南无本师释迦牟尼佛</p>
<p>南无本师释迦牟尼佛</p>
<p>开经偈</p>
<p>无上甚深微妙法</p>
<p>百千万劫难遭遇</p>
<p>我今见闻得受持</p>
<p>愿解如来真实义</p>
<p>金刚般若波罗蜜经</p>
<p>姚秦三藏法师鸠摩罗什译</p>
<p>法会因由分第一</p>
<p>如是我闻</p>
<p>一时佛在舍卫国</p>
<p>其树给孤独园</p>
<p>与大比丘众</p>
<p>千二百五十人俱</p>
<p>尔时世尊 食时</p>
<p>著衣持钵</p>
<p>入舍卫大城乞食</p>
<p>于其城中 次第乞已</p>
<p>还至本处</p>
<p>饭食讫 收衣钵</p>
<p>洗足已 敷座而坐</p>
<p>善现启请分第二</p>
<p>时长老须菩提<br>在大众中 即从座起</p>
<p>偏袒右肩 右膝著地</p>
<p>合掌恭敬 而白佛言</p>
<p>希有世尊</p>
<p>如来善护念诸菩萨</p>
<p>善付嘱诸菩萨</p>
<p>世尊<br>善男子 善女人</p>
<p>发阿耨多罗三藐三菩提心</p>
<p>应云何住</p>
<p>云何降伏其心</p>
<p>佛言 善哉善哉</p>
<p>须菩提</p>
<p>如汝所说</p>
<p>如来善护念诸菩萨</p>
<p>善付嘱诸菩萨</p>
<p>汝今谛听 当为汝说</p>
<p>善男子 善女人</p>
<p>发阿耨多罗三藐三菩提心</p>
<p>应如是住</p>
<p>如是降伏其心</p>
<p>唯然 世尊</p>
<p>愿乐欲闻</p>
<p>大乘正宗分第三</p>
<p>佛告须菩提</p>
<p>诸菩萨摩诃萨</p>
<p>应如是降伏其心</p>
<p>所有一切众生之类</p>
<p>若卵生 若胎生</p>
<p>若湿生 若化生</p>
<p>若有色 若无色</p>
<p>若有想 若无想</p>
<p>若非有想 非无想</p>
<p>我皆令入无余涅盘而灭度之</p>
<p>如是灭度无量无数无边众生</p>
<p>实无众生得灭度者</p>
<p>何以故 须菩提</p>
<p>若菩萨有我相 人相<br>众生相 寿者相</p>
<p>即非菩萨</p>
<p>妙行无住分第四</p>
<p>复次 须菩提</p>
<p>菩萨于法<br>应无所住 行于布施</p>
<p>所谓不住色布施</p>
<p>不住声香味触法布施</p>
<p>须菩提</p>
<p>菩萨应如是布施</p>
<p>不住于相 何以故</p>
<p>若菩萨不住相布施</p>
<p>其福德不可思量</p>
<p>须菩提 于意云何</p>
<p>东方虚空 可思量不</p>
<p>不也 世尊</p>
<p>须菩提 南西北方<br>四维上下虚空<br>可思量不</p>
<p>不也 世尊</p>
<p>须菩提</p>
<p>菩萨无住相布施</p>
<p>福德亦复如是<br>不可思量</p>
<p>须菩提</p>
<p>菩萨但应如所教住</p>
<p>如理实见分第五</p>
<p>须菩提 于意云何</p>
<p>可以身相见如来不</p>
<p>不也 世尊<br>不可以身相得见如来</p>
<p>何以故 如来所说身相</p>
<p>即非身相</p>
<p>佛告须菩提</p>
<p>凡所有相 皆是虚妄</p>
<p>若见诸相非相</p>
<p>则见如来</p>
<p>正信希有分第六</p>
<p>须菩提白佛言</p>
<p>世尊 颇有众生</p>
<p>得闻如是言说章句</p>
<p>生实信不</p>
<p>佛告须菩提</p>
<p>莫作是说</p>
<p>如来灭后 后五百岁</p>
<p>有持戒修福者</p>
<p>于此章句 能生信心</p>
<p>以此为实</p>
<p>当知是人</p>
<p>不于一佛二佛 三四五佛<br>而种善根</p>
<p>已于无量千万佛所</p>
<p>种诸善根</p>
<p>闻是章句<br>乃至一念生净信者</p>
<p>须菩提 如来悉知悉见</p>
<p>是诸众生</p>
<p>得如是无量福德</p>
<p>何以故 是诸众生</p>
<p>无复我相人相众生相寿者相</p>
<p>无法相 亦无非法相</p>
<p>何以故 是诸众生<br>若心取相</p>
<p>即为著我人众生寿者</p>
<p>若取法相<br>即著我人众生寿者</p>
<p>何以故 若取非法相<br>即著我人众生寿者</p>
<p>是故不应取法</p>
<p>不应取非法 以是义故</p>
<p>如来常说 汝等比丘</p>
<p>知我说法 如筏喻者</p>
<p>法尚应舍 何况非法</p>
<p>无得无说分第七</p>
<p>须菩提 于意云何</p>
<p>如来得阿耨多罗三藐三菩提耶</p>
<p>如来有所说法耶</p>
<p>须菩提言</p>
<p>如我解佛所说义</p>
<p>无有定法<br>名阿耨多罗三藐三菩提</p>
<p>亦无有定法 如来可说</p>
<p>何以故 如来所说法<br>皆不可取 不可说</p>
<p>非法非非法 所以者何</p>
<p>一切贤圣 皆以无为法</p>
<p>而有差别</p>
<p>依法出生分第八</p>
<p>须菩提 于意云何</p>
<p>若人满三千大千世界七宝<br>以用布施</p>
<p>是人所得福德<br>宁为多不</p>
<p>须菩提言<br>甚多 世尊</p>
<p>何以故</p>
<p>是福德 即非福德性</p>
<p>是故如来说福德多</p>
<p>若复有人 于此经中受持<br>乃至四句偈等</p>
<p>为他人说 其福胜彼</p>
<p>何以故 须菩提</p>
<p>一切诸佛<br>及诸佛阿耨多罗三藐三菩提法</p>
<p>皆从此经出 须菩提</p>
<p>所谓佛法者 即非佛法</p>
<p>一相无相分第九</p>
<p>须菩提 于意云何</p>
<p>须陀洹 能作是念</p>
<p>我得须陀洹果不</p>
<p>须菩提言</p>
<p>不也 世尊</p>
<p>何以故</p>
<p>须陀洹 名为入流</p>
<p>而无所入</p>
<p>不入色声香味触法</p>
<p>是名须陀洹</p>
<p>须菩提 于意云何</p>
<p>斯陀含能作是念</p>
<p>我得斯陀含果不</p>
<p>须菩提言 不也 世尊</p>
<p>何以故</p>
<p>斯陀含 名一往来</p>
<p>而实无往来</p>
<p>是名斯陀含</p>
<p>须菩提 于意云何</p>
<p>阿那含能作是念</p>
<p>我得阿那含果不</p>
<p>须菩提言 不也 世尊</p>
<p>何以故</p>
<p>阿那含 名为不来</p>
<p>而实无不来</p>
<p>是故名阿那含</p>
<p>须菩提 于意云何</p>
<p>阿罗汉能作是念</p>
<p>我得阿罗汉道不</p>
<p>须菩提言 不也 世尊<br>何以故</p>
<p>实无有法 名阿罗汉</p>
<p>世尊<br>若阿罗汉作是念<br>我得阿罗汉道<br>即为著我人众生寿者</p>
<p>世尊</p>
<p>佛说我得无诤三昧</p>
<p>人中最为第一<br>是第一离欲阿罗汉</p>
<p>世尊 我不作是念<br>我是离欲阿罗汉</p>
<p>世尊 我若作是念<br>我得阿罗汉道</p>
<p>世尊 则不说须菩提<br>是乐阿兰那行者</p>
<p>以须菩提实无所行</p>
<p>而名须菩提<br>是乐阿兰那行</p>
<p>庄严净土分第十</p>
<p>佛告须菩提<br>于意云何</p>
<p>如来昔在然灯佛所<br>于法有所得不</p>
<p>不也 世尊</p>
<p>如来在然灯佛所</p>
<p>于法实无所得</p>
<p>须菩提 于意云何</p>
<p>菩萨庄严佛土不</p>
<p>不也 世尊</p>
<p>何以故 庄严佛土者</p>
<p>即非庄严 是名庄严</p>
<p>是故须菩提</p>
<p>诸菩萨摩诃萨</p>
<p>应如是生清净心</p>
<p>不应住色生心</p>
<p>不应住声香味触法生心</p>
<p>应无所住 而生其心<br>须菩提 譬如有人<br>身如须弥山王</p>
<p>于意云何</p>
<p>是身为大不</p>
<p>须菩提言 甚大 世尊</p>
<p>何以故</p>
<p>佛说非身 是名大身</p>
<p>无为福胜分第十一</p>
<p>须菩提</p>
<p>如恒河中所有沙数</p>
<p>如是沙等恒河<br>于意云何</p>
<p>是诸恒河沙<br>宁为多不</p>
<p>须菩提言 甚多 世尊</p>
<p>但诸恒河尚多无数</p>
<p>何况其沙</p>
<p>须菩提</p>
<p>我今实言告汝<br>若有善男子 善女人</p>
<p>以七宝满尔所<br>恒河沙数三千大千世界</p>
<p>以用布施 得福多不<br>须菩提言 甚多 世尊</p>
<p>佛告须菩提</p>
<p>若善男子 善女人<br>于此经中<br>乃至受持四句偈等</p>
<p>为他人说</p>
<p>而此福德 胜前福德</p>
<p>尊重正教分第十二</p>
<p>复次 须菩提</p>
<p>随说是经<br>乃至四句偈等</p>
<p>当知此处</p>
<p>一切世间天人阿修罗</p>
<p>皆应供养 如佛塔庙</p>
<p>何况有人<br>尽能受持读诵</p>
<p>须菩提 当知是人</p>
<p>成就最上第一希有之法</p>
<p>若是经典所在之处</p>
<p>即为有佛</p>
<p>若尊重弟子</p>
<p>如法受持分第十三</p>
<p>尔时须菩提白佛言</p>
<p>世尊 当何名此经</p>
<p>我等云何奉持</p>
<p>佛告须菩提</p>
<p>是经名为金刚般若波罗密</p>
<p>以是名字 汝当奉持</p>
<p>所以者何 须菩提</p>
<p>佛说般若波罗密</p>
<p>即非般波若波罗密<br>是名波若波罗密</p>
<p>须菩提 于意云何</p>
<p>如来有所说法不</p>
<p>须菩提白佛言</p>
<p>世尊 如来无所说</p>
<p>须菩提 于意云何</p>
<p>三千大千世界所有微尘</p>
<p>是为多不</p>
<p>须菩提言 甚多 世尊</p>
<p>须菩提 诸微尘<br>如来说非微尘</p>
<p>是名微尘</p>
<p>如来说世界</p>
<p>非世界 是名世界</p>
<p>须菩提 于意云何</p>
<p>可以三十二相见如来不</p>
<p>不也 世尊</p>
<p>不可以三十二相得见如来</p>
<p>何以故</p>
<p>如来说三十二相</p>
<p>即是非相</p>
<p>是名三十二相</p>
<p>须菩提</p>
<p>若有善男子 善女人</p>
<p>以恒河沙等身命布施</p>
<p>若复有人 于此经中</p>
<p>乃至受持四句偈等</p>
<p>为他人说 其福甚多</p>
<p>离相寂灭分第十四</p>
<p>尔时须菩提<br>闻说是经 深解义趣</p>
<p>涕泪悲泣 而白佛言</p>
<p>希有世尊</p>
<p>佛说如是甚深经典</p>
<p>我从昔来所得慧眼</p>
<p>未曾得闻如是之经</p>
<p>世尊 若复有人<br>得闻是经</p>
<p>信心清净 即生实相</p>
<p>当知是人<br>成就第一希有功德</p>
<p>世尊<br>是实相者 即是非相</p>
<p>是故如来说名实相</p>
<p>世尊</p>
<p>我今得闻如是经典<br>信解受持 不足为难</p>
<p>若当来世 后五百岁</p>
<p>其有众生<br>得闻是经 信解受持</p>
<p>是人即为第一希有</p>
<p>何以故</p>
<p>此人无我相 无人相</p>
<p>无众生相 无寿者相</p>
<p>所以者何</p>
<p>我相即是非相</p>
<p>人相众生相寿者相<br>即是非相 何以故</p>
<p>离一切诸相</p>
<p>即名诸佛</p>
<p>佛告须菩提</p>
<p>如是如是</p>
<p>若复有人 得闻是经</p>
<p>不惊不怖不畏</p>
<p>当知是人 甚为希有</p>
<p>何以故 须菩提</p>
<p>如来说第一波罗密</p>
<p>即非第一波罗密</p>
<p>是名第一波罗密</p>
<p>须菩提 忍辱波罗密</p>
<p>如来说非忍辱波罗密</p>
<p>是名忍辱波罗密</p>
<p>何以故 须菩提</p>
<p>如我昔为歌利王割截身体</p>
<p>我于尔时<br>无我相 无人相</p>
<p>无众生相 无寿者相</p>
<p>何以故</p>
<p>我于往昔节节支解时</p>
<p>若有我相人相众生相寿者相</p>
<p>应生嗔恨</p>
<p>须菩提</p>
<p>又念过去于五百世<br>作忍辱仙人</p>
<p>于尔所世</p>
<p>无我相 无人相<br>无众生相 无寿者相</p>
<p>是故须菩提</p>
<p>菩萨应离一切相</p>
<p>发阿耨多罗三藐三菩提心</p>
<p>不应住色生心</p>
<p>不应住声香味触法生心</p>
<p>应生无所住心</p>
<p>若心有住 即为非住</p>
<p>是故佛说菩萨心<br>不应住色布施</p>
<p>须菩提</p>
<p>菩萨为利益一切众生故</p>
<p>应如是布施</p>
<p>如来说一切诸相<br>即是非相</p>
<p>又说一切众生</p>
<p>即非众生</p>
<p>须菩提</p>
<p>如来是真语者</p>
<p>实语者 如语者</p>
<p>不诳语者 不异语者</p>
<p>须菩提</p>
<p>如来所得法</p>
<p>此法无实无虚</p>
<p>须菩提 若菩萨心<br>住于法而行布施</p>
<p>如人入暗 即无所见</p>
<p>若菩萨心<br>不住法而行布施</p>
<p>如人有目<br>日光明照 见种种色</p>
<p>须菩提 当来之世<br>若有善男子 善女人<br>能于此经受持读诵</p>
<p>即为如来<br>以佛智慧</p>
<p>悉知是人 悉见是人<br>皆得成就无量无边功德</p>
<p>持经功德分第十五</p>
<p>须菩提</p>
<p>若有善男子 善女人</p>
<p>初日分</p>
<p>以恒河沙等身布施</p>
<p>中日分</p>
<p>复以恒河沙等身布施</p>
<p>后日分</p>
<p>亦以恒河沙等身布施</p>
<p>如是无量百千万亿劫<br>以身布施</p>
<p>若复有人 闻此经典<br>信心不逆 其福胜彼</p>
<p>何况书写受持读诵</p>
<p>为人解说</p>
<p>须菩提 以要言之</p>
<p>是经有不可思议<br>不可称量 无边功德</p>
<p>如来为发大乘者说</p>
<p>为发最上乘者说</p>
<p>若有人能受持读诵</p>
<p>广为人说</p>
<p>如来悉知是人<br>悉见是人</p>
<p>皆得成就不可量</p>
<p>不可称 无有边<br>不可思议功德</p>
<p>如是人等</p>
<p>即为荷担如来<br>阿耨多罗三藐三菩提</p>
<p>何以故 须菩提</p>
<p>若乐小法者</p>
<p>著我见人见众生见寿者见</p>
<p>即于此经不能听受读诵</p>
<p>为人解说</p>
<p>须菩提</p>
<p>在在处处 若有此经<br>一切世间天人阿修罗</p>
<p>所应供养</p>
<p>当知此处 即为是塔</p>
<p>皆应恭敬 作礼围绕</p>
<p>以诸华香而散其处</p>
<p>能净业障分第十六</p>
<p>复次 须菩提</p>
<p>若善男子 善女人</p>
<p>受持读诵此经</p>
<p>若为人轻贱</p>
<p>是人先世罪业</p>
<p>应堕恶道</p>
<p>以今世人轻贱故</p>
<p>先世罪业 即为消灭</p>
<p>当得阿耨多罗三藐三菩提</p>
<p>须菩提</p>
<p>我念过去无量阿僧只劫<br>于然灯佛前</p>
<p>得值八百四千万亿那由他诸佛</p>
<p>悉皆供养承事</p>
<p>无空过者</p>
<p>若复有人 于后末世<br>能受持读诵此经</p>
<p>所得功德</p>
<p>于我所供养诸佛功德<br>百分不及一<br>千万亿分<br>乃至算数譬喻<br>所不能及</p>
<p>须菩提</p>
<p>若善男子 善女人<br>于后末世<br>有受持读诵此经</p>
<p>所得功德</p>
<p>我若具说者</p>
<p>或有人闻<br>心即狂乱 狐疑不信</p>
<p>须菩提</p>
<p>当知是经义 不可思议</p>
<p>果报亦不可思议</p>
<p>究竟无我分第十七</p>
<p>尔时须菩提白佛言</p>
<p>世尊</p>
<p>善男子 善女人</p>
<p>发阿耨多罗三藐三菩提心</p>
<p>云何应住</p>
<p>云何降伏其心</p>
<p>佛告须菩提</p>
<p>善男子 善女人<br>发阿耨多罗三藐三菩提心者</p>
<p>当生如是心</p>
<p>我应灭度一切众生</p>
<p>灭度一切众生已</p>
<p>而无有一众生实灭度者</p>
<p>何以故 须菩提</p>
<p>若菩萨有我相人相众生相寿者相</p>
<p>则非菩萨 所以者何<br>须菩提 实无有法<br>发阿耨多罗三藐三菩提心者</p>
<p>须菩提 于意云何</p>
<p>如来于然灯佛所<br>有法得阿耨多罗三藐三菩提不</p>
<p>不也 世尊</p>
<p>如我解佛所说义</p>
<p>佛于然灯佛所<br>无有法得阿耨多罗三藐三菩提</p>
<p>佛言 如是如是</p>
<p>须菩提 实无有法<br>如来得阿耨多罗三藐三菩提</p>
<p>须菩提 若有法</p>
<p>如来得阿耨多罗三藐三菩提者</p>
<p>然灯佛即不与我授记</p>
<p>汝于来世 当得作佛</p>
<p>号释迦牟尼</p>
<p>以实无有法<br>得阿耨多罗三藐三菩提</p>
<p>是故然灯佛<br>与我授记 作是言</p>
<p>汝于来世 当得作佛</p>
<p>号释迦牟尼 何以故</p>
<p>如来者 即诸法如义</p>
<p>若有人言<br>如来得阿耨多罗三藐三菩提</p>
<p>须菩提 实无有法<br>佛得阿耨多罗三藐三菩提</p>
<p>须菩提</p>
<p>如来所得阿耨多罗三藐三菩提</p>
<p>于是中无实无虚</p>
<p>是故如来说一切法<br>皆是佛法</p>
<p>须菩提</p>
<p>所言一切法者</p>
<p>即非一切法</p>
<p>是故名一切法</p>
<p>须菩提 譬如人身长大</p>
<p>须菩提言 世尊</p>
<p>如来说人身长大</p>
<p>即为非大身 是名大身</p>
<p>须菩提 菩萨亦如是</p>
<p>若作是言<br>我当灭度无量众生<br>即不名菩萨</p>
<p>何以故 须菩提</p>
<p>实无有法 名为菩萨</p>
<p>是故佛说一切法<br>无我无人无众生无寿者</p>
<p>须菩提</p>
<p>若菩萨作是言</p>
<p>我当庄严佛土</p>
<p>是不名菩萨 何以故</p>
<p>如来说庄严佛土者<br>即非庄严 是名庄严</p>
<p>须菩提</p>
<p>若菩萨通达无我法者<br>如来说名真是菩萨</p>
<p>一体同观分第十八</p>
<p>须菩提 于意云何</p>
<p>如来有肉眼不</p>
<p>如是 世尊</p>
<p>如来有肉眼</p>
<p>须菩提 于意云何</p>
<p>如来有天眼不</p>
<p>如是 世尊</p>
<p>如来有天眼</p>
<p>须菩提 于意云何</p>
<p>如来有慧眼不</p>
<p>如是 世尊</p>
<p>如来有慧眼</p>
<p>须菩提 于意云何</p>
<p>如来有法眼不</p>
<p>如是 世尊<br>如来有法眼</p>
<p>须菩提 于意云何</p>
<p>如来有佛眼不</p>
<p>如是 世尊</p>
<p>如来有佛眼</p>
<p>须菩提 于意云何</p>
<p>如恒河中所有沙<br>佛说是沙不</p>
<p>如是 世尊</p>
<p>如来说是沙</p>
<p>须菩提 于意云何</p>
<p>如一恒河中所有沙</p>
<p>有如是沙等恒河</p>
<p>是诸恒河所有沙数佛世界</p>
<p>如是宁为多不</p>
<p>甚多 世尊</p>
<p>佛告须菩提</p>
<p>尔所国土中<br>所有众生 若干种心</p>
<p>如来悉知 何以故</p>
<p>如来说诸心<br>皆为非心 是名为心</p>
<p>所以者何 须菩提</p>
<p>过去心不可得<br>现在心不可得</p>
<p>未来心不可得</p>
<p>法界通化分第十九</p>
<p>须菩提 于意云何</p>
<p>若有人满三千大千世界七宝<br>以用布施</p>
<p>是人以是因缘</p>
<p>得福多不</p>
<p>如是 世尊</p>
<p>此人以是因缘</p>
<p>得福甚多</p>
<p>须菩提</p>
<p>若福德有实</p>
<p>如来不说得福德多<br>以福德无故</p>
<p>如来说得福德多</p>
<p>离色离相分第二十</p>
<p>须菩提 于意云何</p>
<p>佛可以具足色身见不</p>
<p>不也 世尊</p>
<p>如来不应以具足色身见</p>
<p>何以故</p>
<p>如来说具足色身</p>
<p>即非具足色身</p>
<p>是名具足色身</p>
<p>须菩提 于意云何</p>
<p>如来可以具足诸相见不</p>
<p>不也 世尊</p>
<p>如来不应以具足诸相见</p>
<p>何以故</p>
<p>如来说诸相具足<br>即非具足</p>
<p>是名诸相具足</p>
<p>非说所说分第二十一</p>
<p>须菩提</p>
<p>汝勿谓如来作是念</p>
<p>我当有所说法</p>
<p>莫作是念 何以故</p>
<p>若人言如来有所说法</p>
<p>即为谤佛</p>
<p>不能解我所说故</p>
<p>须菩提 说法者<br>无法可说 是名说法</p>
<p>尔时慧命须菩提白佛言</p>
<p>世尊</p>
<p>颇有众生 于未来世<br>闻说是法 生信心不<br>佛言 须菩提</p>
<p>彼非众生 非不众生</p>
<p>何以故 须菩提</p>
<p>众生众生者</p>
<p>如来说非众生</p>
<p>是名众生</p>
<p>无法可得分第二十二</p>
<p>须菩提白佛言</p>
<p>世尊</p>
<p>佛得阿耨多罗三藐三菩提</p>
<p>为无所得耶</p>
<p>佛言 如是如是</p>
<p>须菩提</p>
<p>我于阿耨多罗三藐三菩提</p>
<p>乃至无有少法可得</p>
<p>是名阿耨多罗三藐三菩提</p>
<p>净心行善分第二十三</p>
<p>复次 须菩提</p>
<p>是法平等 无有高下</p>
<p>是名阿耨多罗三藐三菩提</p>
<p>以无我无人无众生无寿者<br>修一切善法</p>
<p>即得阿耨多罗三藐三菩提</p>
<p>须菩提</p>
<p>所言善法者</p>
<p>如来说即非善法</p>
<p>是名善法</p>
<p>福智无比分第二十四</p>
<p>须菩提</p>
<p>若三千大千世界中</p>
<p>所有诸须弥山王</p>
<p>如是等七宝聚</p>
<p>有人持用布施</p>
<p>若人以此般若波罗密经</p>
<p>乃至四句偈等</p>
<p>受持读诵 为他人说</p>
<p>于前福德</p>
<p>百分不及一</p>
<p>百千万亿分<br>乃至算数譬喻<br>所不能及</p>
<p>化无所化分第二十五</p>
<p>须菩提 于意云何</p>
<p>汝等勿谓如来作是念</p>
<p>我当度众生</p>
<p>须菩提 莫作是念</p>
<p>何以故</p>
<p>实无有众生如来度者</p>
<p>若有众生如来度者</p>
<p>如来即有我人众生寿者</p>
<p>须菩提</p>
<p>如来说有我者</p>
<p>即非有我</p>
<p>而凡夫之人 以为有我</p>
<p>须菩提 凡夫者<br>如来说即非凡夫</p>
<p>是名凡夫</p>
<p>法身非相分第二十六</p>
<p>须菩提 于意云何</p>
<p>可以三十二相观如来不</p>
<p>须菩提言 如是如是</p>
<p>以三十二相观如来</p>
<p>佛言 须菩提<br>若以三十二相观如来者</p>
<p>转轮圣王 即是如来</p>
<p>须菩提白佛言</p>
<p>世尊<br>如我解佛所说义</p>
<p>不应以三十二相观如来</p>
<p>尔时世尊 而说偈言</p>
<p>若以色见我 以音声求我</p>
<p>是人行邪道 不能见如来</p>
<p>无断无灭分第二十七</p>
<p>须菩提</p>
<p>汝若作是念</p>
<p>如来不以具足相故</p>
<p>得阿耨多罗三藐三菩提</p>
<p>须菩提 莫作是念</p>
<p>如来不以具足相故</p>
<p>得阿耨多罗三藐三菩提</p>
<p>须菩提 汝若作是念</p>
<p>发阿耨多罗三藐三菩提心者</p>
<p>说诸法断灭 莫作是念</p>
<p>何以故</p>
<p>发阿耨多罗三藐三菩提心者</p>
<p>于法不说断灭相</p>
<p>不受不贪分第二十八</p>
<p>须菩提</p>
<p>若菩萨以满恒河沙等世界七宝</p>
<p>持用布施</p>
<p>若复有人</p>
<p>知一切法无我</p>
<p>得成于忍</p>
<p>此菩萨<br>胜前菩萨所得功德</p>
<p>何以故 须菩提</p>
<p>以诸菩萨不受福德故</p>
<p>须菩提白佛言</p>
<p>世尊</p>
<p>云何菩萨不受福德</p>
<p>须菩提</p>
<p>菩萨所作福德</p>
<p>不应贪著<br>是故说不受福德</p>
<p>威仪寂静分第二十九</p>
<p>须菩提</p>
<p>若有人言</p>
<p>如来若来若去<br>若坐若卧<br>是人不解我所说义</p>
<p>何以故</p>
<p>如来者 无所从来</p>
<p>亦无所去 故名如来</p>
<p>一合理相分第三十</p>
<p>须菩提</p>
<p>若善男子 善女人</p>
<p>以三千大千世界<br>碎为微尘</p>
<p>于意云何</p>
<p>是微尘众 宁为多不</p>
<p>须菩提言</p>
<p>甚多 世尊</p>
<p>何以故</p>
<p>若是微尘众实有者</p>
<p>佛即不说是微尘众</p>
<p>所以者何</p>
<p>佛说微尘众</p>
<p>即非微尘众</p>
<p>是名微尘众</p>
<p>世尊</p>
<p>如来所说三千大千世界</p>
<p>即非世界<br>是名世界<br>何以故</p>
<p>若世界实有者<br>即是一合相</p>
<p>如来说一合相</p>
<p>即非一合相</p>
<p>是名一合相</p>
<p>须菩提</p>
<p>一合相者<br>即是不可说</p>
<p>但凡夫之人<br>贪著其事</p>
<p>知见不生分第三十一</p>
<p>须菩提 若人言</p>
<p>佛说我见人见众生见寿者见</p>
<p>须菩提 于意云何</p>
<p>是人解我所说义不</p>
<p>不也 世尊</p>
<p>是人不解如来所说义</p>
<p>何以故</p>
<p>世尊说我见人见众生见寿者见</p>
<p>即非我见人见众生见寿者见</p>
<p>是名我见人见众生见寿者见</p>
<p>须菩提</p>
<p>发阿耨多罗三藐三菩提心者</p>
<p>于一切法</p>
<p>应如是知 如是见</p>
<p>如是信解 不生法相</p>
<p>须菩提</p>
<p>所言法相者 如来说<br>即非法相 是名法相</p>
<p>应化非真分第三十二</p>
<p>须菩提</p>
<p>若有人以满无量阿僧只世界七宝</p>
<p>持用布施</p>
<p>若有善男子 善女人</p>
<p>发菩提心者持于此经</p>
<p>乃至四句偈等</p>
<p>受持读诵 为人演说</p>
<p>其福胜彼</p>
<p>云何为人演说</p>
<p>不取于相 如如不动</p>
<p>何以故</p>
<p>一切有为法</p>
<p>如梦幻泡影</p>
<p>如露亦如电</p>
<p>应作如是观</p>
<p>佛说是经已</p>
<p>长老须菩提<br>及诸比丘 比丘尼</p>
<p>优婆塞 优婆夷</p>
<p>一切世间天人阿修罗</p>
<p>闻佛所说</p>
<p>皆大欢喜 信受奉行</p>
<p>金刚般若波罗蜜经</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac下安装Ant]]></title>
      <url>http://percychen.com/2016/11/09/macinstallant/</url>
      <content type="html"><![CDATA[<blockquote>
<p>如果你不知道什么是ant，请不要浪费你的时间继续读下去了。或者你对ant是什么感兴趣，可以看这里：<a href="http://zh.wikipedia.org/wiki/Apache_Ant" target="_blank" rel="external">wikipedia-ant</a> 或者这里 <a href="http://baike.baidu.com/link?url=vhok9QFeg3nXU7Zk514dusV5C5IuuGWVornzYbOQS1Cc-r4BBctGm1osrXFlzZVQ#3" target="_blank" rel="external">baidu-ant</a></p>
</blockquote>
<p><a href="http://blog.csdn.net/crazybigfish/article/details/18215439" target="_blank" rel="external">原文地址</a> 在此基础上有删减和更新及改进</p>
<p>最近整理了一下ant的下载和安装方法，步骤如下：</p>
<h3 id="1-下载ant：官网下载"><a href="#1-下载ant：官网下载" class="headerlink" title="1. 下载ant：官网下载"></a>1. 下载ant：官网下载</h3><p>当前最新版是Apache Ant 1.9.7，可以下载那个zip包，如下图：</p>
<p><img src="http://img.blog.csdn.net/20140113110440437?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvY3JhenliaWdmaXNo/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ant 下载"></p>
<h3 id="2-将下载的zip包解压到一个目录下，如-usr-local"><a href="#2-将下载的zip包解压到一个目录下，如-usr-local" class="headerlink" title="2. 将下载的zip包解压到一个目录下，如/usr/local"></a>2. 将下载的zip包解压到一个目录下，如/usr/local</h3><p>这时候需要你提供修改权限，输入密码。</p>
<h3 id="3-配置环境变量："><a href="#3-配置环境变量：" class="headerlink" title="3. 配置环境变量："></a>3. 配置环境变量：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure>
<p>将下面两行加入到最后，保存就可以了</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> ANT_HOME=/usr/<span class="built_in">local</span>/apache-ant-1.9.7 </div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;PATH&#125;</span>:<span class="variable">$&#123;ANT_HOME&#125;</span>/bin</div></pre></td></tr></table></figure>
<h3 id="4-测试"><a href="#4-测试" class="headerlink" title="4. 测试"></a>4. 测试</h3><p>重新打开终端并输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ant</span> -version  </div><div class="line"><span class="comment">#配置成功则显示如下：</span></div><div class="line">Apache Ant(TM) version 1.9.3 compiled on December 23 2013</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ant笔记]]></title>
      <url>http://percychen.com/2016/11/09/antnote/</url>
      <content type="html"><![CDATA[<h2 id="condition"><a href="#condition" class="headerlink" title="condition"></a>condition</h2><h3 id="1-istrue-isfalse-断言-真-假"><a href="#1-istrue-isfalse-断言-真-假" class="headerlink" title="1. istrue isfalse:断言 真 假"></a>1. istrue isfalse:断言 真 假</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">istrue</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span>                    </div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2、逻辑运算"><a href="#2、逻辑运算" class="headerlink" title="2、逻辑运算"></a>2、逻辑运算</h3><h4 id="2-1、not-逻辑非"><a href="#2-1、not-逻辑非" class="headerlink" title="2.1、not 逻辑非"></a>2.1、not 逻辑非</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            ＜not&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">istrue</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span>                    </div><div class="line">            <span class="tag">&lt;/<span class="name">not</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="2-2、and-逻辑与"><a href="#2-2、and-逻辑与" class="headerlink" title="2.2、and 逻辑与"></a>2.2、and 逻辑与</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            ＜and&gt;</div><div class="line">                <span class="tag">&lt;<span class="name">istrue</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">istrue</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span>                    </div><div class="line">            <span class="tag">&lt;/<span class="name">and</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<blockquote>
<p>2.3、or 逻辑或 xor异或 (语法上与and类似)</p>
</blockquote>
<h3 id="3、available-是否可用"><a href="#3、available-是否可用" class="headerlink" title="3、available 是否可用"></a>3、available 是否可用</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">id</span>=<span class="string">"all.test.classes"</span>&gt;</span>         </div><div class="line">         <span class="tag">&lt;<span class="name">pathelement</span> <span class="attr">location</span>=<span class="string">"bin"</span>/&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">path</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--在指定的classpath路径下是否存在资源 TestTest.class--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">available</span> <span class="attr">resource</span>=<span class="string">"TestTest.class"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">classpath</span> <span class="attr">refid</span>=<span class="string">"all.test.classes"</span> /&gt;</span>        </div><div class="line">            <span class="tag">&lt;/<span class="name">available</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="4、isset-指定属性是否存在"><a href="#4、isset-指定属性是否存在" class="headerlink" title="4、isset 指定属性是否存在"></a>4、isset 指定属性是否存在</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--属性也可以通过ant参数-D来设置--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"this is name"</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--如果属性name不存在则返回false--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">isset</span> <span class="attr">property</span>=<span class="string">"name"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="5、equals-是否相等"><a href="#5、equals-是否相等" class="headerlink" title="5、equals 是否相等"></a>5、equals 是否相等</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--属性也可以通过ant参数-D来设置--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"this is name"</span>/&gt;</span>    </div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--如果arg1的值与arg2的值相等返回true，否则为false--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">equals</span> <span class="attr">arg1</span>=<span class="string">"$&#123;name&#125;"</span> <span class="attr">arg2</span>=<span class="string">"this is name"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="6、filesmatch-比较文件"><a href="#6、filesmatch-比较文件" class="headerlink" title="6、filesmatch 比较文件"></a>6、filesmatch 比较文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">name</span>=<span class="string">"testCondition"</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"test"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">condition</span> <span class="attr">property</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">            <span class="comment">&lt;!--如果file1所代表的文件与file2所代表的文件相等返回true，否则为false--&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">filesmatch</span> <span class="attr">file1</span>=<span class="string">"testfile1.txt"</span> <span class="attr">file2</span>=<span class="string">"testfile2.txt"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">condition</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isTrue"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"isFalse"</span>&gt;</span><span class="tag">&lt;/<span class="name">antcall</span>&gt;</span>        </div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isTrue"</span> <span class="attr">if</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is ture<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"isFalse"</span> <span class="attr">unless</span>=<span class="string">"scondition"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">echo</span>&gt;</span>is false<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">target</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><h3 id="系统自带时间"><a href="#系统自带时间" class="headerlink" title="系统自带时间"></a>系统自带时间</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tstamp</span>/&gt;</span></div><div class="line"><span class="comment">&lt;!--以下的几个属性是系统自带的,初始了tstamp之后,它们就有值了--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"System:"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"DSTAMP = $&#123;DSTAMP&#125;"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"TSTAMP = $&#123;TSTAMP&#125;"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"TODAY = $&#123;TODAY&#125;"</span>/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="自定义时间"><a href="#自定义时间" class="headerlink" title="自定义时间"></a>自定义时间</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tstamp</span> <span class="attr">prefix</span>=<span class="string">"my"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">format</span> <span class="attr">property</span>=<span class="string">"day"</span> <span class="attr">pattern</span>=<span class="string">"yyyy-MM-dd"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">format</span> <span class="attr">property</span>=<span class="string">"time"</span> <span class="attr">pattern</span>=<span class="string">"HH:mm:ss"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">format</span> <span class="attr">property</span>=<span class="string">"dt"</span> <span class="attr">pattern</span>=<span class="string">"yyyy-MM-dd HH:mm:ss.SSS"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tstamp</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">target</span> <span class="attr">name</span>=<span class="string">"show"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">antcall</span> <span class="attr">target</span>=<span class="string">"default"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"-------------------------------------"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"Mine:"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"my.time = $&#123;my.time&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"my.day = $&#123;my.day&#125;"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">echo</span> <span class="attr">message</span>=<span class="string">"my.dt = $&#123;my.dt&#125;"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">target</span>&gt;</span></div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转:使用Python的Pexpect模块执行SSH登陆]]></title>
      <url>http://percychen.com/2016/10/13/2016-10-13-pythonexpect/</url>
      <content type="html"><![CDATA[<p><a href="http://guweigang.com/blog/2012/10/25/using-python-ssh-landing-module-performs-pexpect/" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>Pexpect 的使用范围很广，可以用来实现与 ssh, ftp , telnet 等程序的自动交互；可以用来自动复制软件安装包并在不同机器自动安装；还可以用来实现软件测试中与命令行交互的自动化。</p>
</blockquote>
<h3 id="下载安装："><a href="#下载安装：" class="headerlink" title="下载安装："></a>下载安装：</h3><pre><code class="sh">download pexpect-2.3.tar.gz
tar zxvf pexpect-2.3.tar.gz
<span class="built_in">cd</span> pexpect-2.3
python setup.py install (<span class="keyword">do</span> this as root)
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt; 其实这个过程一点都不难，唯一的问题就是登陆之后终端尺寸的大小（我理解是buffer），因为Pexpect在代码里面有hardcode，把终端尺寸默认设成(24, 80)了。所以你连上后打开emacs会发现，emacs只占据了整个终端的一小部分。```# pexpect hard-codes the terminal size as (24,80) (rows,columns).# This causes problems because any line longer than 80 characters gets# completely overwrapped on the printed outptut (even though# internally the code runs fine).  We reset this to 99 rows X 200# columns (arbitrarily chosen), which should avoid problems in all# reasonable cases.c.setwinsize(24,80)</div></pre></td></tr></table></figure>


OK, 知道问题了我们可以开始解决，既然支持`child.setwinsize()`，那我们就想办法获取当前终端大小，并且在ssh目标主机之后设置终端大小。

<span class="comment">### 获取窗口大小</span>

```py
def getwinsize():
    <span class="string">""</span><span class="string">"This returns the window size of the child tty.
    The return value is a tuple of (rows, cols).
    "</span><span class="string">""</span>
    <span class="keyword">if</span> <span class="string">'TIOCGWINSZ'</span> <span class="keyword">in</span> dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    <span class="keyword">else</span>:
        TIOCGWINSZ = 1074295912L <span class="comment"># Assume</span>
    s = struct.pack(<span class="string">'HHHH'</span>, 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    <span class="built_in">return</span> struct.unpack(<span class="string">'HHHH'</span>, x)[0:2]
＃ 设置大小
    child.expect(<span class="string">'-bash-baidu-ssl.*'</span>)
    child.sendline(<span class="string">'ssh '</span> + host)
    winsize = getwinsize();
    child.setwinsize(winsize[0], winsize[1])
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">OK, 一切正常。打开emacs，感觉很幸福，但连接后我发现连接之前终端窗口本来就很小，现在想把窗终窗口最大化，一试就杯具了，窗口的确最大化了，但是emacs所占区域仍旧没有变化，也就是说连接后的子窗口尺寸和当前窗口尺雨不匹配，Signal终于要派上用场了：```pydef sigwinch_passthrough (sig, data):    winsize = getwinsize()    global child    child.setwinsize(winsize[0],winsize[1])#最后监听事件：signal.signal(signal.SIGWINCH, sigwinch_passthrough)</div></pre></td></tr></table></figure>


一切正常！

<span class="comment">## 下面贴上所有代码：</span>


```py
<span class="comment">#!/usr/bin/python</span>

import sys
import time
import pexpect
import os
import struct
import fcntl
import termios
import signal

def sigwinch_passthrough (sig, data):
    winsize = getwinsize()
    global child
    child.setwinsize(winsize[0],winsize[1])

def getwinsize():
    <span class="string">""</span><span class="string">"This returns the window size of the child tty.
    The return value is a tuple of (rows, cols).
    "</span><span class="string">""</span>
    <span class="keyword">if</span> <span class="string">'TIOCGWINSZ'</span> <span class="keyword">in</span> dir(termios):
        TIOCGWINSZ = termios.TIOCGWINSZ
    <span class="keyword">else</span>:
        TIOCGWINSZ = 1074295912L <span class="comment"># Assume</span>
    s = struct.pack(<span class="string">'HHHH'</span>, 0, 0, 0, 0)
    x = fcntl.ioctl(sys.stdout.fileno(), TIOCGWINSZ, s)
    <span class="built_in">return</span> struct.unpack(<span class="string">'HHHH'</span>, x)[0:2]

<span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:
    user   = <span class="string">'username'</span>
    passwd = <span class="string">'password'</span>
    host   = <span class="string">'example.com'</span>
    <span class="built_in">print</span> <span class="string">'ssh '</span> + user + <span class="string">'@'</span> + host + <span class="string">' ...'</span>

    time.sleep(1)

    child = pexpect.spawn(<span class="string">'ssh relay'</span>, env = {<span class="string">"TERM"</span> : <span class="string">"xterm-256color"</span>})

    signal.signal(signal.SIGWINCH, sigwinch_passthrough)

    <span class="keyword">if</span> len(sys.argv) &gt; 1:
        child.expect(<span class="string">"Enter PASSCODE:"</span>)
        child.sendline(<span class="string">"PIN-CODE"</span> + sys.argv[1])

    child.expect(<span class="string">'-bash-baidu-ssl.*'</span>)
    child.sendline(<span class="string">'ssh '</span> + host)

    winsize = getwinsize();
    child.setwinsize(winsize[0], winsize[1])

    child.expect(<span class="string">'.*password:.*'</span>)
    child.sendline(passwd)

    child.interact()
    pass
</code></pre>
<p><a href="http://pexpect.sourceforge.net/pexpect.html" target="_blank" rel="external">参考链接</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转:Linux中源码安装编译Vim]]></title>
      <url>http://percychen.com/2016/10/13/2016-10-13-viminstall/</url>
      <content type="html"><![CDATA[<p><a href="http://www.cnblogs.com/zhongcq/p/3615980.html" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>Linux下学习工作少不了编辑器，Vim能使你的工作效率成倍的提高。在Ubuntu上安装vim使用命令直接安装很简单。但有时还是需要自己手动编译安装。例如： vim中的杀手级插件——YouCompleteMe 要求Vim版本为7.3.548或者更高,自己升级成全功能的最新版,需要通过源码编译安装。</p>
</blockquote>
<p>自己在编译安装的过程中也查阅了很多资料，这里将整个编译安装的过程记录下来。</p>
<ol>
<li>下载所需工具</li>
<li>卸载老版本vim</li>
<li>下载新版</li>
<li>编译安装</li>
<li>下载所需工具</li>
</ol>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>编译Vim之前，需要下载编译的相关工具和一些库</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev libcairo2-dev libx11-dev libxpm-dev libxt-dev python-dev ruby-dev mercurial</div></pre></td></tr></table></figure>
<h3 id="卸载老版本vim"><a href="#卸载老版本vim" class="headerlink" title="卸载老版本vim"></a>卸载老版本vim</h3><p>在安装新版本的Vim之前，你需要卸载原来安装的老版本Vim，依次在终端下执行下列命令：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo apt-get remove vim  </div><div class="line">sudo apt-get remove vim-runtime  </div><div class="line">sudo apt-get remove gvim  </div><div class="line">sudo apt-get remove vim-tiny  </div><div class="line">sudo apt-get remove vim-common  </div><div class="line">sudo apt-get remove vim-gui-common</div></pre></td></tr></table></figure>
<h3 id="下载新版"><a href="#下载新版" class="headerlink" title="下载新版"></a>下载新版</h3><p><a href="ftp://ftp.vim.org/pub/vim/unix" target="_blank" rel="external">下载地址</a></p>
<p>这里以<code>vim-7.4.tar.bz2</code>为例</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -xjvf vim<span class="number">-7.4</span>.tar.bz2</div></pre></td></tr></table></figure>
<p>解压至 ~/downloads/vim74/</p>
<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd ~/downloads/vim74/</div><div class="line"></div><div class="line">#设置Vim源码的编译属性</div><div class="line"></div><div class="line">./configure --with-features=huge --enable-rubyinterp --enable-pythoninterp --with-python-config-dir=/usr/lib/python2.7/config-i386-linux-gnu/ --enable-perlinterp --enable-gui=gtk2 --enable-cscope --enable-luainterp --enable-perlinterp --enable-multibyte --prefix=/usr</div></pre></td></tr></table></figure>
<blockquote>
<p>需要重新配置可 输入 make distclean #清理一下上一次编译生成的所有文件</p>
</blockquote>
<p>其中参数说明如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">--with-features=huge：支持最大特性</div><div class="line">--enable-rubyinterp：启用Vim对ruby编写的插件的支持</div><div class="line">--enable-pythoninterp：启用Vim对python编写的插件的支持</div><div class="line">--enable-luainterp：启用Vim对lua编写的插件的支持</div><div class="line">--enable-perlinterp：启用Vim对perl编写的插件的支持</div><div class="line">--enable-multibyte：多字节支持 可以在Vim中输入中文</div><div class="line">--enable-cscope：Vim对cscope支持</div><div class="line">--enable-gui=gtk2：gtk2支持,也可以使用gnome，表示生成gvim</div><div class="line">--with-python-config-dir=/usr/lib/python2.7/config-i386-linux-gnu/ 指定 python 路径</div><div class="line">--prefix=/usr：编译安装路径</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo make VIMRUNTIMEDIR=/usr/share/vim/vim74</div><div class="line"></div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h3 id="Done"><a href="#Done" class="headerlink" title="Done!"></a>Done!</h3>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cmake的安装]]></title>
      <url>http://percychen.com/2016/10/13/2016-10-13-cmakeinstall/</url>
      <content type="html"><![CDATA[<p>cmake版本 2.8.10.2</p>
<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a><a href="https://cmake.org/download/" target="_blank" rel="external">下载地址</a></h3><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./configure</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<h3 id="检查是否安装成功："><a href="#检查是否安装成功：" class="headerlink" title="检查是否安装成功："></a>检查是否安装成功：</h3><p>输入shell命令: <code>cmake --version</code></p>
<p>给出一下信息表示安装成功</p>
<p>cmake 会默认安装在 <code>/usr/local/bin</code> 下面</p>
<p>要改变安装路径，在bootstrap命令中加入<code>--prefix=PATH</code>选项。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python mysql查询笔迹]]></title>
      <url>http://percychen.com/2016/09/26/2016-09-26-pythonmysqlnote/</url>
      <content type="html"><![CDATA[<h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db = MySQLdb.connect(host=<span class="string">"www.gyyx.com"</span>,user=<span class="string">"user"</span>,passwd=<span class="string">"xxx"</span>,db=<span class="string">"mysql"</span> )</div></pre></td></tr></table></figure>
<h2 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sql=<span class="string">"create database if not exists mysql"</span></div><div class="line">cursor.execute(sql)</div></pre></td></tr></table></figure>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sql=<span class="string">"CREATE TABLE `main_page_data` ( `id` int(11) NOT NULL DEFAULT '1' COMMENT 'id', `rdm_info` varchar(32) NOT NULL DEFAULT '' COMMENT 'rdm数据', PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=gbk COMMENT='VCI首页数据'"</span></div><div class="line">cursor.execute(sql)</div></pre></td></tr></table></figure>
<h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sql=<span class="string">"""insert into main_page_data (id,rdm_info) values (1,"7")"""</span></div><div class="line">cursor.execute(sql)</div></pre></td></tr></table></figure>
<p>更新数据</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sql="""update main_page_data set id=1,rdm_info="7" where id="1""""</div><div class="line">cursor.execute(sql)</div></pre></td></tr></table></figure>
<h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sql=<span class="string">"""select * from table where id="1534" order by number desc"""</span></div><div class="line">cursor.execute(sql)</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[mysql重置密码]]></title>
      <url>http://percychen.com/2016/09/26/2016-09-26-mysqlpasswordreset/</url>
      <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/abbuggy/article/details/8245464" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>忘了MySQL密码，从网上找到的解决方案记录在这里。</p>
</blockquote>
<ul>
<li><p>编辑mysql的配置文件<code>/etc/mysql/my.cnf</code>，在[mysqld]段下加入一行<code>skip-grant-tables</code>。</p>
</li>
<li><p>重启mysql服务</p>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mysql restart</div></pre></td></tr></table></figure>
<ul>
<li>用空密码进入mysql管理命令行，切换到mysql库。</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">~$ mysql</div><div class="line">mysql&gt; use mysql</div><div class="line"><span class="comment"># 把密码重置为new_pass。退出数据库管理。</span></div><div class="line">mysql&gt; update user <span class="built_in">set</span> password=PASSWORD(<span class="string">"new_pass"</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</div><div class="line">mysql&gt;quit</div></pre></td></tr></table></figure>
<ul>
<li>回到vim <code>/etc/mysql/my.cnf</code>，把刚才加入的那一行<code>skip-grant-tables</code>注释或删除掉。</li>
</ul>
<p>再次重启mysql服务</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service mysql restart</div></pre></td></tr></table></figure>
<p>使用新的密码登陆，修改成功。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~$ mysql -uroot -pnew_pass</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[js调用python]]></title>
      <url>http://percychen.com/2016/08/13/2016-08-13-nodejsNotes/</url>
      <content type="html"><![CDATA[<h2 id="js调用python"><a href="#js调用python" class="headerlink" title="js调用python"></a>js调用python</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</div><div class="line"><span class="keyword">var</span> arg1 = <span class="string">'hello'</span></div><div class="line">exec(<span class="string">'python test.py '</span>+arg1,<span class="function"><span class="keyword">function</span>(<span class="params">error,stdout,stderr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(stdout.length &gt;<span class="number">1</span>)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'you offer args:\n'</span>,stdout);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'you don\'t offer args'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(error) &#123;</div><div class="line">        <span class="built_in">console</span>.info(<span class="string">'stderr : '</span>+stderr);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="打印对象类型"><a href="#打印对象类型" class="headerlink" title="打印对象类型:"></a>打印对象类型:</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="keyword">typeof</span>(stdout)&#125;</span>`</span>);</div></pre></td></tr></table></figure>
<h2 id="获取当前文件路径"><a href="#获取当前文件路径" class="headerlink" title="获取当前文件路径"></a>获取当前文件路径</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">console</span>.log(<span class="string">`Current directory: <span class="subst">$&#123;process.cwd()&#125;</span>`</span>);</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Nodejs调用python,python返回json]]></title>
      <url>http://percychen.com/2016/08/08/2016-08-08-nodejsallpython/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Nodejs调用python</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</div><div class="line"><span class="keyword">var</span> arg1 = <span class="string">'arg1'</span></div><div class="line"><span class="keyword">var</span> arg2 = <span class="string">'arg2'</span></div><div class="line">exec(<span class="string">'python py_test.py '</span>+ arg1+<span class="string">' '</span>+arg2+<span class="string">' '</span>,<span class="function"><span class="keyword">function</span>(<span class="params">error,stdout,stderr</span>)</span>&#123;</div><div class="line">    <span class="keyword">if</span>(stdout.length &gt;<span class="number">1</span>)&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'you offer args:'</span>,stdout);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'you don\'t offer args'</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(error) &#123;</div><div class="line">        <span class="built_in">console</span>.info(<span class="string">'stderr : '</span>+stderr);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>python输出json格式</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> json</div><div class="line"></div><div class="line">json_dict=&#123;&#125;<span class="comment">#字典</span></div><div class="line">d1 = json.dumps(json_dict,sort_keys=<span class="keyword">True</span>,indent=<span class="number">4</span>)</div><div class="line"><span class="keyword">print</span> d1</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux 运维相关知识]]></title>
      <url>http://percychen.com/2016/07/21/2016-07-21-linuxoperationcommand/</url>
      <content type="html"><![CDATA[<h2 id="创建、删除、管理用户"><a href="#创建、删除、管理用户" class="headerlink" title="创建、删除、管理用户"></a>创建、删除、管理用户</h2><ul>
<li>创建用户</li>
</ul>
<p>创建test用户，并且指定Home目录</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo useradd <span class="_">-d</span> [userHomeDirc] -m -G root [name]</div><div class="line"><span class="comment">#ex：</span></div><div class="line">sudo useradd <span class="_">-d</span> /data/<span class="built_in">test</span> -m -G root <span class="built_in">test</span></div></pre></td></tr></table></figure>
<ul>
<li>删除用户</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo userdel -r <span class="built_in">test</span> <span class="comment">#删除用户：test</span></div></pre></td></tr></table></figure>
<ul>
<li>创建、修改用户密码</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo passwd <span class="built_in">test</span></div></pre></td></tr></table></figure>
<ul>
<li>修改用户shell</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/passwd</div><div class="line"><span class="comment">#修改 /bin/sh 为/bin/bash</span></div></pre></td></tr></table></figure>
<ul>
<li>将账户添加root权限</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">chmod u+w /etc/sudoers</div><div class="line">vim /etc/sudoers</div><div class="line"><span class="comment">#在下面仿照其他用户加上</span></div><div class="line"><span class="built_in">test</span> ALL=(ALL:ALL) ALL</div></pre></td></tr></table></figure>
<h2 id="用户监视"><a href="#用户监视" class="headerlink" title="用户监视"></a>用户监视</h2><ul>
<li>查看当前登录用户</li>
</ul>
<p><code>who</code></p>
<p>缺省输出包括用户名、终端类型、登陆日期以及远程主机。</p>
<p><code>who /var/log/wtmp</code></p>
<p>可以查看自从wtmp文件创建以来的每一次登陆情况</p>
<p>（1）-b：查看系统最近一次启动时间</p>
<p>（2）-H：打印每列的标题</p>
<p><code>last</code></p>
<p>默认打印所有用户的登陆信息。</p>
<p>如果想打印某个用户的登陆信息，可以使用</p>
<p><code>last username</code></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>选项</th>
</tr>
</thead>
<tbody>
<tr>
<td>-x</td>
<td>显示系统开关机以及执行等级信息</td>
</tr>
<tr>
<td>-a</td>
<td>将登陆ip显示在最后一行</td>
</tr>
<tr>
<td>-f</td>
<td>读取特定文件，可以选择 -f /var/log/btmp文件</td>
</tr>
<tr>
<td>-d</td>
<td>将IP地址转换为主机名</td>
</tr>
<tr>
<td>-n</td>
<td>列出名单的显示列数</td>
</tr>
<tr>
<td>-t</td>
<td>指定时间的用户登录历史</td>
</tr>
</tbody>
</table>
<p><code>lastlog</code></p>
<p>查看所有用户最近一次登录历史</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>选项</th>
<th>示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>-u</td>
<td>最后一次登陆历史</td>
<td>lastlog -u test</td>
</tr>
<tr>
<td>-t</td>
<td>最近几天之内的用户登录历史</td>
<td>lastlog -t 1</td>
</tr>
<tr>
<td>-b</td>
<td>查看指定天数之前的用户登录历史</td>
<td>lastlog -b 60</td>
</tr>
</tbody>
</table>
<p><code>ac</code></p>
<p>根据/var/log/wtmp文件中的登陆和退出时间报告用户连接的时间（小时），默认输出报告总时间</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>选项</th>
</tr>
</thead>
<tbody>
<tr>
<td>-p</td>
<td>显示每个用户的连接时间</td>
</tr>
<tr>
<td>-d</td>
<td>显示每天的连接时间</td>
</tr>
<tr>
<td>-y</td>
<td>显示年份，和-d配合使用</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[WxPython初学笔记]]></title>
      <url>http://percychen.com/2016/07/18/2016-07-18-wxpythonnote/</url>
      <content type="html"><![CDATA[<h2 id="获取屏幕分辨率"><a href="#获取屏幕分辨率" class="headerlink" title="获取屏幕分辨率"></a>获取屏幕分辨率</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">screen_size=wx.DisplaySize()</div><div class="line"><span class="keyword">print</span> screen_size[<span class="number">0</span>],screen_size[<span class="number">1</span>]</div></pre></td></tr></table></figure>
<h2 id="设置图标"><a href="#设置图标" class="headerlink" title="设置图标"></a>设置图标</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">icon=wx.EmptyIcon()</div><div class="line">icon.LoadFile(<span class="string">"loadIcon.ico"</span>,wx.BITMAP_TYPE_ICO)</div><div class="line">frame.SetIcon(icon)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python RE 正则表达式笔记]]></title>
      <url>http://percychen.com/2016/07/08/2016-07-08-pythonREnote/</url>
      <content type="html"><![CDATA[<blockquote>
<p>之前写shell的时候积累了一些正则经验，转到python上来的时候发现怎么也匹配不成功。于是花了几天时间看了下python正则表达式(RE)的部分，做了一些笔记</p>
</blockquote>
<table>
<thead>
<tr>
<th>模式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>^</td>
<td>匹配字符串的开头</td>
</tr>
<tr>
<td>$</td>
<td>匹配字符串的末尾。</td>
</tr>
<tr>
<td>.</td>
<td>匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。</td>
</tr>
<tr>
<td>[…]</td>
<td>用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’</td>
</tr>
<tr>
<td>[^…]</td>
<td>不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。</td>
</tr>
<tr>
<td>re*</td>
<td>匹配0个或多个的表达式。</td>
</tr>
<tr>
<td>re+</td>
<td>匹配1个或多个的表达式。</td>
</tr>
<tr>
<td>re?</td>
<td>匹配0个或1个由前面的正则表达式定义的片段，非贪婪方式</td>
</tr>
<tr>
<td>re{ n}</td>
<td></td>
</tr>
<tr>
<td>re{ n,}</td>
<td>精确匹配n个前面表达式。</td>
</tr>
<tr>
<td>re{ n, m}</td>
<td>匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式</td>
</tr>
<tr>
<td>a\</td>
<td>b</td>
<td>匹配a或b</td>
</tr>
<tr>
<td>(re)</td>
<td>G匹配括号内的表达式，也表示一个组</td>
</tr>
<tr>
<td>(?imx)</td>
<td>正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。</td>
</tr>
<tr>
<td>(?-imx)</td>
<td>正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。</td>
</tr>
<tr>
<td>(?: re)</td>
<td>类似 (…), 但是不表示一个组</td>
</tr>
<tr>
<td>(?imx: re)</td>
<td>在括号中使用i, m, 或 x 可选标志</td>
</tr>
<tr>
<td>(?-imx: re)</td>
<td>在括号中不使用i, m, 或 x 可选标志</td>
</tr>
<tr>
<td>(?#…)</td>
<td>注释.</td>
</tr>
<tr>
<td>(?= re)</td>
<td>前向肯定界定符。如果所含正则表达式，以 … 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。</td>
</tr>
<tr>
<td>(?! re)</td>
<td>前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功</td>
</tr>
<tr>
<td>(?&gt; re)</td>
<td>匹配的独立模式，省去回溯。</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母数字</td>
</tr>
<tr>
<td>\W</td>
<td>匹配非字母数字</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任意空白字符，等价于 [\t\n\r\f].</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意非空字符</td>
</tr>
<tr>
<td>\d</td>
<td>匹配任意数字，等价于 [0-9].</td>
</tr>
<tr>
<td>\D</td>
<td>匹配任意非数字</td>
</tr>
<tr>
<td>\A</td>
<td>匹配字符串开始</td>
</tr>
<tr>
<td>\Z</td>
<td>匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。c</td>
</tr>
<tr>
<td>\z</td>
<td>匹配字符串结束</td>
</tr>
<tr>
<td>\G</td>
<td>匹配最后匹配完成的位置。</td>
</tr>
<tr>
<td>\b</td>
<td>匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。</td>
</tr>
<tr>
<td>\B</td>
<td>匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。</td>
</tr>
<tr>
<td>\n, \t, 等.</td>
<td>匹配一个换行符。匹配一个制表符。等</td>
</tr>
<tr>
<td>\1…\9</td>
<td>匹配第n个分组的子表达式。</td>
</tr>
<tr>
<td>\10</td>
<td>匹配第n个分组的子表达式，如果它经匹配。否则指的是八进制字符码的表达式。</td>
</tr>
</tbody>
</table>
<h2 id="正则表达式实例"><a href="#正则表达式实例" class="headerlink" title="正则表达式实例"></a>正则表达式实例</h2><ul>
<li>字符类</li>
</ul>
<table>
<thead>
<tr>
<th>实例</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>[Pp]ython</td>
<td>匹配 “Python” 或 “python”</td>
</tr>
<tr>
<td>rub[ye]</td>
<td>匹配 “ruby” 或 “rube”</td>
</tr>
<tr>
<td>[aeiou]</td>
<td>匹配中括号内的任意一个字母</td>
</tr>
<tr>
<td>[0-9]</td>
<td>匹配任何数字。类似于 [0123456789]</td>
</tr>
<tr>
<td>[a-z]</td>
<td>匹配任何小写字母</td>
</tr>
<tr>
<td>[A-Z]</td>
<td>匹配任何大写字母</td>
</tr>
<tr>
<td>[a-zA-Z0-9]</td>
<td>匹配任何字母及数字</td>
</tr>
<tr>
<td>[^aeiou]</td>
<td>除了aeiou字母以外的所有字符</td>
</tr>
<tr>
<td>[^0-9]</td>
<td>匹配除了数字外的字符</td>
</tr>
</tbody>
</table>
<ul>
<li>特殊字符类</li>
</ul>
<table>
<thead>
<tr>
<th>实例</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。</td>
</tr>
<tr>
<td>\d</td>
<td>匹配一个数字字符。等价于 [0-9]。</td>
</tr>
<tr>
<td>\D</td>
<td>匹配一个非数字字符。等价于 [^0-9]。</td>
</tr>
<tr>
<td>\s</td>
<td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</td>
</tr>
<tr>
<td>\w</td>
<td>匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。</td>
</tr>
<tr>
<td>\W</td>
<td>匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]’。</td>
</tr>
</tbody>
</table>
<h2 id="正则表达式修饰符-可选标志"><a href="#正则表达式修饰符-可选标志" class="headerlink" title="正则表达式修饰符 - 可选标志"></a>正则表达式修饰符 - 可选标志</h2><blockquote>
<p>正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。多个标志可以通过按位 OR(|) 它们来指定。如 re.I | re.M 被设置成 I 和 M 标志：</p>
</blockquote>
<table>
<thead>
<tr>
<th>修饰符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>re.I</td>
<td>使匹配对大小写不敏感</td>
</tr>
<tr>
<td>re.L</td>
<td>做本地化识别（locale-aware）匹配</td>
</tr>
<tr>
<td>re.M</td>
<td>多行匹配，影响 ^ 和 $</td>
</tr>
<tr>
<td>re.S</td>
<td>使 . 匹配包括换行在内的所有字符</td>
</tr>
<tr>
<td>re.U</td>
<td>根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</td>
</tr>
<tr>
<td>re.X</td>
<td>该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。</td>
</tr>
</tbody>
</table>
<p>实例：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line">phone = <span class="string">"2004-959-559 # This is Phone Number"</span></div><div class="line"></div><div class="line"><span class="comment"># Delete Python-style comments</span></div><div class="line">num = re.sub(<span class="string">r'#.*$'</span>, <span class="string">""</span>, phone)</div><div class="line"><span class="keyword">print</span> <span class="string">"Phone Num : "</span>, num</div><div class="line"></div><div class="line"><span class="comment"># Remove anything other than digits</span></div><div class="line">num = re.sub(<span class="string">r'\D'</span>, <span class="string">""</span>, phone)</div><div class="line"><span class="keyword">print</span> <span class="string">"Phone Num : "</span>, num 以上实例执行结果如下：</div><div class="line">Phone Num :  <span class="number">2004</span><span class="number">-959</span><span class="number">-559</span></div><div class="line">Phone Num :  <span class="number">2004959559</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[7z命令行详解及示例]]></title>
      <url>http://percychen.com/2016/07/06/2016-07-06-7zipcommand/</url>
      <content type="html"><![CDATA[<h2 id="常规简单用法"><a href="#常规简单用法" class="headerlink" title="常规简单用法"></a>常规简单用法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip -p111 archive.7z txt.txt<span class="comment">#压缩 密码为111</span></div><div class="line">7z x -tzip -p111 archive.7z<span class="comment">#解压 密码为111</span></div></pre></td></tr></table></figure>
<blockquote>
<p>7z 是 7-Zip 的命令行版本。包含命令如下：</p>
</blockquote>
<p><strong>命令行选项</strong></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z [命令行] [[选项]...] [基本档案名称] [[参数变量]...]</div><div class="line">7z [<span class="built_in">command</span>] [[switch]...] [base_archive_name] [[arguments]...]</div></pre></td></tr></table></figure>
<ul>
<li>文件列表</li>
</ul>
<blockquote>
<p>您可以使用文件列表来对要操作的文件进行批量操作。在文件中的文件名必须用空格或另起一行隔开。(如使用空格，需要加引号)。</p>
</blockquote>
<p>example:</p>
<p>listfile.txt包含下列内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;My programs\*.cpp&quot;</div><div class="line">Src\*.cpp</div></pre></td></tr></table></figure>
<p>命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip @listfile.txt</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>a</td>
<td>添加</td>
</tr>
<tr>
<td>d</td>
<td>删除</td>
</tr>
<tr>
<td>e</td>
<td>释放</td>
</tr>
<tr>
<td>l</td>
<td>列表</td>
</tr>
<tr>
<td>t</td>
<td>测试</td>
</tr>
<tr>
<td>u</td>
<td>更新</td>
</tr>
<tr>
<td>x</td>
<td>完整路径释放</td>
</tr>
</tbody>
</table>
<p>可以和此命令结合使用的选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-m</td>
<td>设置压缩算法</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-t</td>
<td>设置压缩档案格式</td>
</tr>
<tr>
<td>-u</td>
<td>更新选项</td>
</tr>
<tr>
<td>-w</td>
<td>设置工作目录</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
</tbody>
</table>
<ul>
<li>a (添加) 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip subdir\*</div><div class="line"><span class="comment">#从 subdir 文件夹添加所有文件到 archive.zip 压缩档案。</span></div><div class="line">7z a -tzip Files.zip <span class="string">"Program files\*"</span> -r</div><div class="line"><span class="comment">#从 Program 文件夹添加所有文件到 Files.zip 压缩档案。</span></div></pre></td></tr></table></figure>
<ul>
<li>d (删除) 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z d archive.zip *.bak</div><div class="line"><span class="comment">#从 archive.zip 压缩档案中删除 *.bak 文件。</span></div></pre></td></tr></table></figure>
<ul>
<li>e (释放) 命令</li>
</ul>
<p>7z 冲突回应：<br>回应 |简写|描述<br>—|—|—<br>Yes(是) |y<br>No(否)| n<br>Always(总是)|a| 将所有的询问以 YES 来对待<br>Skip(跳过)| s |将所有的询问以 NO 来对待<br>Quit(退出)|q |退出程序</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">7z e archive.zip</div><div class="line"><span class="comment">#从压缩档案 archive.zip 中释放所有文件到当前文件夹。</span></div><div class="line">7z e archive.zip -oc:\soft *.cpp</div><div class="line"><span class="comment">#从压缩档案 archive.zip 中释放 *.cpp 文件到 c:\soft 文件夹。</span></div></pre></td></tr></table></figure>
<p>可以和此命令结合使用的选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-ao</td>
<td>覆盖模式</td>
</tr>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-o</td>
<td>设置输出目录</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
<tr>
<td>-y</td>
<td>全是</td>
</tr>
<tr>
<td>-n</td>
<td>全否</td>
</tr>
<tr>
<td>x</td>
<td>完整路径释放</td>
</tr>
</tbody>
</table>
<ul>
<li>l (列表) 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z l archive.zip</div><div class="line"><span class="comment">#列出压缩档案 archive.zip 的内容。</span></div></pre></td></tr></table></figure>
<p>可以和此命令结合使用的选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
</tbody>
</table>
<ul>
<li>t (测试) 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z t archive.zip *.doc</div><div class="line"><span class="comment">#在压缩档案 archive.zip 中测试 *.doc 文件的完整性。</span></div></pre></td></tr></table></figure>
<p>可以和此命令结合使用的选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
</tbody>
</table>
<ul>
<li>u(更新)命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z u archive.zip *.doc</div><div class="line"><span class="comment">#在压缩档案 archive.zip 中更新 *.doc 文件。</span></div></pre></td></tr></table></figure>
<p>可以和此命令结合使用的选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-m</td>
<td>设置压缩算法</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-t</td>
<td>设置压缩档案格式</td>
</tr>
<tr>
<td>-u</td>
<td>更新选项</td>
</tr>
<tr>
<td>-w</td>
<td>设置工作目录</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
</tbody>
</table>
<ul>
<li>x (完整路径释放) 命令</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">7z x archive.zip</div><div class="line"><span class="comment">#从压缩档案 archive.zip 中释放所有文件到当前文件夹。</span></div><div class="line">7z x archive.zip -oc:\soft *.cpp</div><div class="line"><span class="comment">#从压缩档案 archive.zip 中释放 *.cpp 文件到 c:\soft 文件夹。</span></div></pre></td></tr></table></figure>
<p>可以和此命令结合使用的选项</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-ao</td>
<td>覆盖模式</td>
</tr>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-o</td>
<td>设置输出目录</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-x</td>
<td>排除文件</td>
</tr>
<tr>
<td>-y</td>
<td>全是</td>
</tr>
</tbody>
</table>
<h2 id="命令行选项"><a href="#命令行选项" class="headerlink" title="命令行选项"></a>命令行选项</h2><p>选项要点参考</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>–-</td>
<td>阻止选项解析</td>
</tr>
<tr>
<td>-ai</td>
<td>附件档案文件名</td>
</tr>
<tr>
<td>-an</td>
<td>不解析档案名称</td>
</tr>
<tr>
<td>-ao</td>
<td>覆盖模式</td>
</tr>
<tr>
<td>-ax</td>
<td>排除档案文件名</td>
</tr>
<tr>
<td>-i</td>
<td>包括文件名</td>
</tr>
<tr>
<td>-m</td>
<td>设置压缩算法</td>
</tr>
<tr>
<td>-o</td>
<td>设置输出目录</td>
</tr>
<tr>
<td>-p</td>
<td>设置密码</td>
</tr>
<tr>
<td>-r</td>
<td>递归子目录</td>
</tr>
<tr>
<td>-sfx</td>
<td>创建自释放档案</td>
</tr>
<tr>
<td>-si</td>
<td>从StdIn 读取数据</td>
</tr>
<tr>
<td>-so</td>
<td>从StdOut 写入数据</td>
</tr>
<tr>
<td>-t</td>
<td>设置档案类型</td>
</tr>
<tr>
<td>-u</td>
<td>更新选项</td>
</tr>
<tr>
<td>-v</td>
<td>创建分卷</td>
</tr>
<tr>
<td>-w</td>
<td>设置工作目录</td>
</tr>
<tr>
<td>-x</td>
<td>文件名排除</td>
</tr>
<tr>
<td>-y</td>
<td>全是</td>
</tr>
</tbody>
</table>
<ul>
<li>– (阻止选项解析) 选项</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z t -- -ArchiveName.7z</div><div class="line">测试 -ArchiveName.7z 压缩档案.</div></pre></td></tr></table></figure>
<ul>
<li>-ai (附件档案文件名) 开关</li>
</ul>
<blockquote>
<p>指定附加文件，包括压缩档案文件名及通配符。此选项可同时附加多个类型。</p>
</blockquote>
<p>语法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-ai[[recurse_type]][file_ref]</div><div class="line">[recurse_type] ::= r[- | 0]</div><div class="line">[file_ref] ::= @&#123;listfile&#125; | !&#123;wildcard&#125;</div></pre></td></tr></table></figure>
<ul>
<li>-an (不解析档案名称) 选项</li>
</ul>
<blockquote>
<p>不解析命令行中的 archive_name 区域。此选项必须和 -i (附加文件) 开关一起使用。比如您为压缩档案使用列表文件，您就需要指定 -ai 选项，所以您需要禁止解析命令行中的 archive_name 区域。</p>
</blockquote>
<p>语法</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z t -an -ai!*.7z -ax!a*.7z</div><div class="line">测试除 a*.7z 之外的 *.7z 压缩档案。</div></pre></td></tr></table></figure>
<ul>
<li>-ao (覆盖模式) 选项</li>
</ul>
<blockquote>
<p>指定在释放期间如何覆盖硬盘上现有的同名文件。</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>-aoa</td>
<td>直接覆盖现有文件，而没有任何提示。</td>
</tr>
<tr>
<td>-aos</td>
<td>跳过现有文件，其不会被覆盖。</td>
</tr>
<tr>
<td>-aou</td>
<td>如果相同文件名的文件已存在，将自动重命名被释放的文件。例如，文件 file.txt 将被自动重命名为 file_1.txt。</td>
</tr>
<tr>
<td>-aot</td>
<td>如果相同文件名的文件已存在，将自动重命名现有的文件。例如，文件 file.txt 将被自动重命名为 file_1.txt。</td>
</tr>
</tbody>
</table>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z x test.zip -aoa</div><div class="line"><span class="comment">#从压缩档案 test.zip 中释放所有文件并却不做提示直接覆盖现有文件。</span></div></pre></td></tr></table></figure>
<ul>
<li>-ax (排除档案文件名) 选项</li>
</ul>
<blockquote>
<p>指定必须从操作中排除的压缩档案，此选项可同时排除多个类型。<br>语法</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z t -an -ai!*.7z -ax!a*.7z</div><div class="line"><span class="comment">#测试除 a*.7z 之外的 *.7z 压缩档案</span></div></pre></td></tr></table></figure>
<ul>
<li>-an (不解析档案名称)</li>
</ul>
<blockquote>
<p>指定通配符及文件名，此选项在这里必须使用。如果此选项未被指定，那么将自动使用递归。</p>
</blockquote>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>{listfile}</td>
<td>指定文件列表的文件名。参见 列表文件 的说明。</td>
</tr>
<tr>
<td>{wildcard}</td>
<td>指定通配符或文件名。</td>
</tr>
</tbody>
</table>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z t -an -air!*.7z</div><div class="line"><span class="comment">#在当前目录及子目录下测试 *.7z 压缩档案</span></div></pre></td></tr></table></figure>
<ul>
<li>-i (附加文件) 选项</li>
</ul>
<blockquote>
<p>指定附加文件或一类文件，此选项可附件添加多个类型。</p>
</blockquote>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>{listfile}</td>
<td>指定文件列表。请参考 文件列表 相关信息。</td>
</tr>
<tr>
<td>{wildcard}</td>
<td>指定文件名或通配符。</td>
</tr>
</tbody>
</table>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip src.zip *.txt -ir!DIR1\*.cpp</div><div class="line"><span class="comment">#从当前目录中添加 *.txt 文件，和 DIR1 目录及其子目录中的 *.cpp 文件到 src.zip 压缩档案。</span></div></pre></td></tr></table></figure>
<ul>
<li>-m (设置压缩算法) 选项</li>
</ul>
<blockquote>
<p>指定压缩算法。此选项的格式依压缩档案的类型而定。</p>
</blockquote>
<table>
<thead>
<tr>
<th>Zip参数</th>
<th>默认值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>x=[0 \</td>
<td>5\</td>
<td>9 ]</td>
<td>5</td>
<td>设置压缩等级。</td>
</tr>
<tr>
<td>m={MethodID}</td>
<td>Deflate</td>
<td>设置压缩算法：Copy、Deflate、Deflate64、BZip2。</td>
</tr>
<tr>
<td>fb={NumFastBytes}</td>
<td>32</td>
<td>设置 Deflate 编码器的单词大小。</td>
</tr>
<tr>
<td>pass={NumPasses}</td>
<td>1</td>
<td>设置 Deflate 编码器的传送大小。</td>
</tr>
</tbody>
</table>
<ul>
<li>X=[0 | 5 | 9 ]</li>
</ul>
<blockquote>
<p>设置压缩等级</p>
</blockquote>
<table>
<thead>
<tr>
<th>压缩等级</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>不压缩。</td>
</tr>
<tr>
<td>5</td>
<td>默认的压缩等级。</td>
</tr>
<tr>
<td>9</td>
<td>最大压缩等级。压缩后的文件会更小。但是在压缩的时候会比较慢而且需要较多的物理内存。</td>
</tr>
</tbody>
</table>
<ul>
<li>fb={NumFastBytes}</li>
</ul>
<blockquote>
<p>设置 Deflate 编码器的单词大小。您可以在3到 255 范围之内更改。在 <code>Deflate</code> 算法下，它的默认值是 <code>32</code>；在 <code>Deflate 64</code> 算法下，它的默认值是<code>64</code>。</p>
</blockquote>
<ul>
<li>pass={NumPasses}</li>
</ul>
<blockquote>
<p>设置 Deflate 编码器的传送大小。</p>
</blockquote>
<p>您可以在 1 到 4 范围之内更改。在 <code>Deflate</code> 算法下，它的默认值是 <code>1</code>；在 Deflate 64 算法下，它的默认值是 3。此项可略微提升压缩比，但并不明显。</p>
<h2 id="7z默认参数"><a href="#7z默认参数" class="headerlink" title="7z默认参数"></a>7z默认参数</h2><table>
<thead>
<tr>
<th>参数</th>
<th>默认</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>x=[0 \</td>
<td>1 \</td>
<td>5 \</td>
<td>7 \</td>
<td>9 ]</td>
<td>5</td>
<td>设置压缩等级。</td>
</tr>
<tr>
<td>s=[off \</td>
<td>on \</td>
<td>[e] [{N}f] [{N}b \</td>
<td>{N}k \</td>
<td>{N}m \</td>
<td>{N}g]</td>
<td>on</td>
<td>设置固实模式。</td>
</tr>
<tr>
<td>f=[off \</td>
<td>on]</td>
<td>on</td>
<td>开启或关闭可执行文件压缩过滤器。</td>
</tr>
<tr>
<td>hc=[off \</td>
<td>on]</td>
<td>on</td>
<td>开启或关闭档案文件头压缩。</td>
</tr>
<tr>
<td>hcf=[off \</td>
<td>on]</td>
<td>on</td>
<td>开启或关闭档案文件头完全压缩。</td>
</tr>
<tr>
<td>he=[off \</td>
<td>on]</td>
<td>off</td>
<td>开启或关闭档案文件头加密。</td>
</tr>
<tr>
<td>b{C1}[s{S1}]:{C2}[s{S2}]</td>
<td></td>
<td>设置编码器之间绑定。</td>
</tr>
<tr>
<td>{N}={MethodID}[:param1][:param2][..]</td>
<td></td>
<td>LZMA设置压缩算法：LZMA、PPMd、BZip2、Deflate、BCJ、BCJ2、Copy。</td>
</tr>
<tr>
<td>mt=[off \</td>
<td>on]</td>
<td>off</td>
<td>设置多线程模式。</td>
</tr>
</tbody>
</table>
<p>支持的压缩算法：</p>
<table>
<thead>
<tr>
<th>MethodID</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>LZMA</td>
<td>基于 LZ 之上的压缩算法。</td>
</tr>
<tr>
<td>PPMd</td>
<td>基于 Dmitry Shkarin 之上的算法 PPMdH 并加以优化。通常能对纯文本提供高压缩比及较快的解压缩速度。</td>
</tr>
<tr>
<td>Bzip2</td>
<td>基于 BWT 的标准压缩算法。通常能对纯文本提供较高压缩比及相当不错的解压缩速度。</td>
</tr>
<tr>
<td>Deflate</td>
<td>ZIP 及 GZip 格式的标准压缩算法。没有很高的压缩比。但是它拥有十分快的压缩及解压缩速度。Deflate 压缩算法只支持 32 KB 字典大小。</td>
</tr>
<tr>
<td>BCJ</td>
<td>(CALL、JUMP)32 位 x86 可执行文件转换器。</td>
</tr>
<tr>
<td>BCJ2</td>
<td>(CALL、JUMP、JCC)32 位 x86 可执行文件转换器(第二版)。</td>
</tr>
<tr>
<td>Copy</td>
<td>不压缩。</td>
</tr>
</tbody>
</table>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip *.jpg -m0</div><div class="line"><span class="comment">#不压缩而直接将 *.jpg 文件添加到 archive.zip 档案。</span></div><div class="line">7z a -t7z archive.7z *.exe *.dll -m0=BCJ -m1=LZMA:d=21 -ms -mmt</div><div class="line"><span class="comment">#添加 *.exe 及 *.dll 文件到固实压缩档案 archive.7z。使用 LZMA 压缩算法、2 MB 字典大小及 BCJ 转换器。压缩将开启多线程优化(如果可用)。</span></div><div class="line">7z a -t7z archive.7z *.exe *.dll -m0=BCJ2 -m1=LZMA:d23 -m2=LZMA:d19 -m3=LZMA:d19 -mb0:1 -mb0s1:2 -mb0s2:3</div><div class="line"><span class="comment">#添加 *.exe 及 *.dll 文件到压缩档案 archive.7z。使用 LZMA 压缩算法、BCJ2 转换器、为主输出流(s0)使用 8 MB 字典大小、LZMA 算法为 BCJ2 转换器的 s1 及 s2 输出流使用 512 KB 字典大小。</span></div><div class="line">7z a -t7z archive.7z *.txt -m0=PPMd</div><div class="line"><span class="comment">#添加 *.txt 文件到压缩档案 archive.7z。 使用 PPMd 压缩算法。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z x archive.zip -psecret</div><div class="line"><span class="comment">#将设有密码“secret”的压缩档案 archive.zip 中所有文件释放。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip -r src\*.cpp src\*.h</div><div class="line">将 src 目录及其子目录中的 *.cpp 及 *.h 文件添加到 archive.zip 压缩档案。</div></pre></td></tr></table></figure>
<h2 id="sfx-创建自释放档案-选项"><a href="#sfx-创建自释放档案-选项" class="headerlink" title="-sfx (创建自释放档案) 选项"></a>-sfx (创建自释放档案) 选项</h2><blockquote>
<p>创建自释放档案。</p>
</blockquote>
<table>
<thead>
<tr>
<th>SFX_Module</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>7zC.sfx</td>
<td>Windows 版本。</td>
</tr>
<tr>
<td>7zCon.sfx</td>
<td>命令行(DOS)版本。</td>
</tr>
<tr>
<td>7zS.sfx</td>
<td>Windows 安装版本。</td>
</tr>
<tr>
<td>7zSD.sfx</td>
<td>Windows 安装版本(需调用 MSVCRT.dll)。</td>
</tr>
</tbody>
</table>
<ul>
<li>自释放安装模块</li>
</ul>
<p>自释放安装模块(7zS.sfx 和 7zSD.sfx)可让您创建软件的安装程序。这类模块将释放文件到一临时文件夹，然后运行指定的程序来进行安装。安装之后再自动删除临时文件。 要创建自释放档案必须有三个文件：自释放模块、安装程序配置、7z 压缩档案。其中安装程序配置文件是可选的。您可以使用下列命令来创建安装程序：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">copy /b 7zS.sfx + config.txt + archive.7z archive.exe</div></pre></td></tr></table></figure>
<p>请注意上述文件的输入顺序：<em>.sfx、</em>.txt、*.7z。最后的 archive.exe 即为生成的安装程序。<br>选项 -y 使用在自释放安装模块中可设置释放时是否为安静模式。</p>
<p>安装程序配置文件格式</p>
<p>配置文件包括安装程序的命令行。文件要以字串 ;!@Install@!UTF-8! 开头，以 ;!@InstallEnd@! 结尾。且文件必须使用 UTF-8 编码。文件中还需包含下列变量：</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ID_String</td>
<td>说明</td>
</tr>
<tr>
<td>Title</td>
<td>对话框信息标题。</td>
</tr>
<tr>
<td>BeginPrompt</td>
<td>安装前提示信息。</td>
</tr>
<tr>
<td>RunProgram</td>
<td>欲执行命令。若添加子命令 %%T 则会把文件释放到系统的临时目录。</td>
</tr>
</tbody>
</table>
<p>您可以省略上述任何一部分。</p>
<p>配置文件示例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">;!@Install@!UTF-8!</div><div class="line">Title=&quot;7-Zip 1.00&quot;</div><div class="line">BeginPrompt=&quot;应用程序将安装 7-Zip 1.00，是否继续？&quot;</div><div class="line">RunProgram=&quot;Setup.exe /T:%%T&quot;</div><div class="line">;!@InstallEnd@!</div></pre></td></tr></table></figure>
<p>程序将以 BeginPrompt 中的信息提示用户，再执行 RunProgram 中的命令。然后程序将使用 .inf 文件的内容并调用压缩包中的 advpack.dll 文件进行安装。</p>
<p>示例:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">7z a -sfx a.exe *.txt</div><div class="line">添加 *.txt 文件到自释放档案 a.exe 并使用默认的命令行自释放模块。</div><div class="line">7z a -sfx7zC.sfx a.exe * -r</div><div class="line">添加所有文件到自释放档案 a.exe 并使用 7zC.sfx Windows 版本的自释放模块。</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a archive.gz -tgzip -siDoc2.txt [ Doc.txt</div><div class="line"><span class="comment">#使用 Doc2.txt 文件名压缩输入流从文件 Doc.txt 到压缩档案 archive.gz。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">7z x archive.gz -so ] Doc.txt</div><div class="line"><span class="comment">#解压缩 archive.gz 输出流并将该输出流写入到 Doc.txt 文件。</span></div><div class="line">7z a dummy -tgzip -so Doc.txt ] archive.gz</div><div class="line"><span class="comment">#压缩 Doc.txt 输出流并将该输出流写入到 archive.gz 压缩档案。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip *.txt</div><div class="line"><span class="comment">#使用 zip 格式从当前目录中添加所有 *.txt 文件到压缩档案 archive.zip。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z u c:\1\exist.7z -u- -up0q3x2z0!c:\1\update.7z * -r</div><div class="line"><span class="comment">#创建新压缩档案 update.7z 并将当前目录中的 exist.7z 压缩档案里所有不同文件写入此压缩档案。并不更改 exist.7z 压缩档案的内容。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a a.7z *.txt -v10k -v15k -v2m</div><div class="line"><span class="comment">#创建 a.7z 分卷压缩档案。第一个分卷为 10 KB，第二个为 15 KB，剩下全部为 2 MB。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip *.cpp -wc:\temp</div><div class="line"><span class="comment">#添加 *.cpp 文件到 archive.zip 压缩档案，并将临时压缩档案创建到 c:\temp 文件夹。</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">7z a -tzip archive.zip *.txt -x!temp.*</div><div class="line"><span class="comment">#添加除 temp.* 文件之外的所有 *.txt 文件到压缩档案 archive.zip。</span></div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux装逼命令行，瞬间黑客范]]></title>
      <url>http://percychen.com/2016/07/05/2016-07-05-linuxcommandshowb/</url>
      <content type="html"><![CDATA[<p>最简单的往往是最好的，先看看我的装逼截图</p>
<p><img src="/img/article1.png" alt="终端图"></p>
<h2 id="1-busy命令："><a href="#1-busy命令：" class="headerlink" title="1. busy命令："></a>1. busy命令：</h2><p><code>cat /dev/urandom | hexdump -C | grep &#39;ca fe&#39;</code></p>
<p>可以在 .bashrc里面配置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> busy=cat /dev/urandom | hexdump -C | grep <span class="string">'ca fe'</span></div></pre></td></tr></table></figure>
<h2 id="2-dstat命令"><a href="#2-dstat命令" class="headerlink" title="2.dstat命令"></a>2.dstat命令</h2><p>安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install dstat</div></pre></td></tr></table></figure>
<p>可以在 .bashrc里面配置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> dstat=<span class="string">'dstat -cdlmnpsy'</span></div></pre></td></tr></table></figure>
<h2 id="3-slurm命令"><a href="#3-slurm命令" class="headerlink" title="3.slurm命令"></a>3.slurm命令</h2><p>安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install slurm</div></pre></td></tr></table></figure>
<p>可以在 .bashrc里面配置：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">alias</span> slurm=<span class="string">'slurm -i eth0'</span></div></pre></td></tr></table></figure>
<h2 id="4-htop-amp-iotop命令"><a href="#4-htop-amp-iotop命令" class="headerlink" title="4.htop &amp; iotop命令"></a>4.htop &amp; iotop命令</h2><p>htop 和 iotop  用来查看进程，内存和IO负载</p>
<p>安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install htop iotop</div></pre></td></tr></table></figure>
<p>使用： 直接打<code>htop</code>和<code>iotop</code>就可以了</p>
<h2 id="5-黑客帝国字幕"><a href="#5-黑客帝国字幕" class="headerlink" title="5.黑客帝国字幕"></a>5.黑客帝国字幕</h2><p>安装：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install cmatrix</div></pre></td></tr></table></figure>
<p>使用： 直接打<code>cmatrix</code>就可以了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python 函数中可变长度的参数args]]></title>
      <url>http://percychen.com/2016/07/04/2016-07-04-pythondefargs/</url>
      <content type="html"><![CDATA[<p><a href="http://www.pythoner.com/4.html" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>在编程的过程中，我们可能会遇到函数参数个数不固定的情况。这时就需要使用可变长度的函数参数来实现我们的功能。<br>在Python中，有两种变长参数，分别是元组（非关键字参数）和字典（关键字参数）。其调用方式是：</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">func( *tuple_args, **dict_args )</div></pre></td></tr></table></figure>
<h2 id="非关键字可变长参数（元组）"><a href="#非关键字可变长参数（元组）" class="headerlink" title="非关键字可变长参数（元组）"></a>非关键字可变长参数（元组）</h2><blockquote>
<p>当函数调用中包括一个元组变长参数<code>*tuple_args</code>时，除去前面固定位置参数和关键字参数的其余参数将按顺序插入一个元组进行访问，这和C语言中的varargs的功能相同。</p>
</blockquote>
<p>假设有这样一个函数（其中，<code>positional_arg</code>是位置固定的标准调用参数，<code>keyword_arg</code>是关键字参数）：</p>
<p>元组变长参数示例:</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">( positional_arg, keyword_arg=<span class="string">'default'</span>, *tuple_arg )</span>:</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"positional arg: "</span>, positional_arg</div><div class="line">    <span class="keyword">print</span> <span class="string">"keyword_arg: "</span>, keyword_arg</div><div class="line">    <span class="keyword">for</span> each_additional_arg <span class="keyword">in</span> tuple_arg:</div><div class="line">        <span class="keyword">print</span> <span class="string">"additional_arg: "</span>, each_additional_arg</div></pre></td></tr></table></figure>
<p>我们使用一些示例来了解它是怎么工作的：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>foo(<span class="number">1</span>)</div><div class="line">positional arg:  <span class="number">1</span></div><div class="line">keyword_arg:  default</div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>foo(<span class="number">1</span>, <span class="number">2</span>)</div><div class="line">positional arg:  <span class="number">1</span></div><div class="line">keyword_arg:  <span class="number">2</span></div><div class="line"></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>foo(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</div><div class="line">positional arg:  <span class="number">1</span></div><div class="line">keyword_arg:  <span class="number">2</span></div><div class="line">additional_arg:  <span class="number">3</span></div></pre></td></tr></table></figure>
<h2 id="2-字典变长参数"><a href="#2-字典变长参数" class="headerlink" title="2.字典变长参数"></a>2.字典变长参数</h2><p>既然Python中允许关键字参数，那么也应该有一种方式实现关键字的变长参数，这就是字典变长参数。</p>
<blockquote>
<p>字典变长参数中，额外的关键字参数被放入了一个字典进行使用。字典中，键为参数名，值为相应的参数值。其表示方式是放在函数参数最后的<strong>开头的参数，如`</strong>dict_grp_kw_args`。（需要注意的是，**被重载以不与幂运算混淆。）</p>
</blockquote>
<p>以下是一个字典变长参数的示例函数：</p>
<p>字典变长参数的示例函数:</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">( positional_arg, keyword_arg=<span class="string">'default'</span>, **dict_arg )</span>:</span></div><div class="line">    <span class="keyword">print</span> <span class="string">"positional arg: "</span>, positional_arg</div><div class="line">    <span class="keyword">print</span> <span class="string">"keyword_arg: "</span>, keyword_arg</div><div class="line">    <span class="keyword">for</span> each_dict_arg <span class="keyword">in</span> dict_arg.keys():</div><div class="line">        <span class="keyword">print</span> <span class="string">"dict_arg: %s=&gt;%s"</span> % ( each_dict_arg, str( dict_arg[each_dict_arg] ) )</div></pre></td></tr></table></figure>
<p>下面是一段演示结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; foo(1, 2, a=&quot;b&quot;)</div><div class="line">positional arg:  1</div><div class="line">keyword_arg:  2</div><div class="line">dict_arg: a=&gt;b</div></pre></td></tr></table></figure>
<h2 id="调用脚本传入的参数"><a href="#调用脚本传入的参数" class="headerlink" title="调用脚本传入的参数"></a>调用脚本传入的参数</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(*test)</span>:</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> test:</div><div class="line">        <span class="keyword">print</span> <span class="string">"The First args is"</span>，i</div><div class="line">foo(*sys.argv)</div></pre></td></tr></table></figure>
<p>字典类似上面方法，关键在于<code>*</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python exception异常处理]]></title>
      <url>http://percychen.com/2016/06/16/2016-06-16-pythonexception/</url>
      <content type="html"><![CDATA[<p><a href="http://www.runoob.com/python/python-exceptions.html" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>python提供了两个非常重要(exception和Assertions)的功能来处理python程序在运行中出现的异常和错误。</p>
</blockquote>
<table>
<thead>
<tr>
<th>异常名称</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>BaseException</td>
<td>所有异常的基类</td>
</tr>
<tr>
<td>SystemExit</td>
<td>解释器请求退出</td>
</tr>
<tr>
<td>KeyboardInterrupt</td>
<td>用户中断执行(通常是输入^C)</td>
</tr>
<tr>
<td>Exception</td>
<td>常规错误的基类</td>
</tr>
<tr>
<td>StopIteration</td>
<td>迭代器没有更多的值</td>
</tr>
<tr>
<td>GeneratorExit</td>
<td>生成器(generator)发生异常来通知退出</td>
</tr>
<tr>
<td>StandardError</td>
<td>所有的内建标准异常的基类</td>
</tr>
<tr>
<td>ArithmeticError</td>
<td>所有数值计算错误的基类</td>
</tr>
<tr>
<td>FloatingPointError</td>
<td>浮点计算错误</td>
</tr>
<tr>
<td>OverflowError</td>
<td>数值运算超出最大限制</td>
</tr>
<tr>
<td>ZeroDivisionError</td>
<td>除(或取模)零(所有数据类型)</td>
</tr>
<tr>
<td>AssertionError</td>
<td>断言语句失败</td>
</tr>
<tr>
<td>AttributeError</td>
<td>对象没有这个属性</td>
</tr>
<tr>
<td>EOFError</td>
<td>没有内建输入,到达EOF标记</td>
</tr>
<tr>
<td>EnvironmentError</td>
<td>操作系统错误的基类</td>
</tr>
<tr>
<td>IOError</td>
<td>输入/输出操作失败</td>
</tr>
<tr>
<td>OSError</td>
<td>操作系统错误</td>
</tr>
<tr>
<td>WindowsError</td>
<td>系统调用失败</td>
</tr>
<tr>
<td>ImportError</td>
<td>导入模块/对象失败</td>
</tr>
<tr>
<td>LookupError</td>
<td>无效数据查询的基类</td>
</tr>
<tr>
<td>IndexError</td>
<td>序列中没有此索引(index)</td>
</tr>
<tr>
<td>KeyError</td>
<td>映射中没有这个键</td>
</tr>
<tr>
<td>MemoryError</td>
<td>内存溢出错误(对于Python解释器不是致命的)</td>
</tr>
<tr>
<td>NameError</td>
<td>未声明/初始化对象(没有属性)</td>
</tr>
<tr>
<td>UnboundLocalError</td>
<td>访问未初始化的本地变量</td>
</tr>
<tr>
<td>ReferenceError</td>
<td>弱引用(Weakreference)试图访问已经垃圾回收了的对象</td>
</tr>
<tr>
<td>RuntimeError</td>
<td>一般的运行时错误</td>
</tr>
<tr>
<td>NotImplementedError</td>
<td>尚未实现的方法</td>
</tr>
<tr>
<td>SyntaxError</td>
<td>Python语法错误</td>
</tr>
<tr>
<td>IndentationError</td>
<td>缩进错误</td>
</tr>
<tr>
<td>TabError</td>
<td>Tab和空格混用</td>
</tr>
<tr>
<td>SystemError</td>
<td>一般的解释器系统错误</td>
</tr>
<tr>
<td>TypeError</td>
<td>对类型无效的操作</td>
</tr>
<tr>
<td>ValueError</td>
<td>传入无效的参数</td>
</tr>
<tr>
<td>UnicodeError</td>
<td>Unicode相关的错误</td>
</tr>
<tr>
<td>UnicodeDecodeError</td>
<td>Unicode解码时的错误</td>
</tr>
<tr>
<td>UnicodeEncodeError</td>
<td>Unicode编码时错误</td>
</tr>
<tr>
<td>UnicodeTranslateError</td>
<td>Unicode转换时错误</td>
</tr>
<tr>
<td>Warning</td>
<td>警告的基类</td>
</tr>
<tr>
<td>DeprecationWarning</td>
<td>关于被弃用的特征的警告</td>
</tr>
<tr>
<td>FutureWarning</td>
<td>关于构造将来语义会有改变的警告</td>
</tr>
<tr>
<td>OverflowWarning</td>
<td>旧的关于自动提升为长整型(long)的警告</td>
</tr>
<tr>
<td>PendingDeprecationWarning</td>
<td>关于特性将会被废弃的警告</td>
</tr>
<tr>
<td>RuntimeWarning</td>
<td>可疑的运行时行为(runtime behavior)的警告</td>
</tr>
<tr>
<td>SyntaxWarning</td>
<td>可疑的语法的警告</td>
</tr>
<tr>
<td>UserWarning</td>
<td>用户代码生成的警告</td>
</tr>
</tbody>
</table>
<h2 id="什么是异常？"><a href="#什么是异常？" class="headerlink" title="什么是异常？"></a>什么是异常？</h2><blockquote>
<p>异常即是一个事件，该事件会在程序执行过程中发生，影响了程序的正常执行。<br>一般情况下，在Python无法正常处理程序时就会发生一个异常。</p>
<p>异常是Python对象，表示一个错误。<br>当Python脚本发生异常时我们需要捕获处理它，否则程序会终止执行。</p>
</blockquote>
<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><blockquote>
<p>捕捉异常可以使用try/except语句。<br>try/except语句用来检测try语句块中的错误，从而让except语句捕获异常信息并处理。<br>如果你不想在异常发生时结束你的程序，只需在try里捕获它。</p>
</blockquote>
<p>try….except…else的语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line"><span class="comment">#&lt;语句&gt;        #运行别的代码</span></div><div class="line"><span class="keyword">except</span> &lt;名字&gt;：</div><div class="line"><span class="comment">#&lt;语句&gt;        #如果在try部份引发了'name'异常</span></div><div class="line"><span class="keyword">except</span> &lt;名字&gt;，&lt;数据&gt;:</div><div class="line"><span class="comment">#&lt;语句&gt;        #如果引发了'name'异常，获得附加的数据</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line"><span class="comment">#&lt;语句&gt;        #如果没有异常发生</span></div></pre></td></tr></table></figure>
<p>try的工作原理是，当开始一个try语句后，python就在当前程序的上下文中作标记，这样当异常出现时就可以回到这里，try子句先执行，接下来会发生什么依赖于执行时是否出现异常。</p>
<p>如果当try后的语句执行时发生异常，python就跳回到try并执行第一个匹配该异常的except子句，异常处理完毕，控制流就通过整个try语句（除非在处理异常时又引发新的异常）。</p>
<p>如果在try后的语句里发生了异常，却没有匹配的except子句，异常将被递交到上层的try，或者到程序的最上层（这样将结束程序，并打印缺省的出错信息）。</p>
<p>如果在try子句执行时没有发生异常，python将执行else语句后的语句（如果有else的话），然后控制流通过整个try语句。</p>
<p><strong>实例</strong></p>
<blockquote>
<p>下面是简单的例子，它打开一个文件，在该文件中的内容写入内容，且并未发生异常：</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    fh = open(<span class="string">"testfile"</span>, <span class="string">"w"</span>)</div><div class="line">    fh.write(<span class="string">"这是一个测试文件，用于测试异常!!"</span>)</div><div class="line"><span class="keyword">except</span> IOError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error: 没有找到文件或读取文件失败"</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"内容写入文件成功"</span></div><div class="line">    fh.close()</div></pre></td></tr></table></figure>
<p>以上程序输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ python test.py</div></pre></td></tr></table></figure>
<p>内容写入文件成功</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cat testfile       <span class="comment"># 查看写入的内容</span></div><div class="line">这是一个测试文件，用于测试异常!!</div></pre></td></tr></table></figure>
<blockquote>
<p>下面是简单的例子，它打开一个文件，在该文件中的内容写入内容，但文件没有写入权限，发生了异常：</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    fh = open(<span class="string">"testfile"</span>, <span class="string">"w"</span>)</div><div class="line">    fh.write(<span class="string">"这是一个测试文件，用于测试异常!!"</span>)</div><div class="line"><span class="keyword">except</span> IOError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error: 没有找到文件或读取文件失败"</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"内容写入文件成功"</span></div><div class="line">    fh.close()</div></pre></td></tr></table></figure>
<p>在执行代码前为了测试方便，我们可以先去掉 testfile 文件的写权限，命令如下：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod -w testfile</div></pre></td></tr></table></figure>
<p>再执行以上代码：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ python test.py</div><div class="line">Error: 没有找到文件或读取文件失败</div></pre></td></tr></table></figure>
<p>使用except而不带任何异常类型<br>你可以不带任何异常类型使用except，如下实例：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="comment">#正常的操作</span></div><div class="line">    <span class="comment">#......................</span></div><div class="line"><span class="keyword">except</span>:</div><div class="line">    <span class="comment">#发生异常，执行这块代码</span></div><div class="line">    <span class="comment">#......................</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment">#如果没有异常执行这块代码</span></div></pre></td></tr></table></figure>
<p>以上方式try-except语句捕获所有发生的异常。<br>但这不是一个很好的方式，我们不能通过该程序识别出具体的异常信息。因为它捕获所有的异常。<br>使用except而带多种异常类型<br>你也可以使用相同的except语句来处理多个异常信息，如下所示：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="comment">#正常的操作</span></div><div class="line">    <span class="comment">#......................</span></div><div class="line"><span class="keyword">except</span>(Exception1[, Exception2[,...ExceptionN]]]):</div><div class="line">    <span class="comment">#发生以上多个异常中的一个，执行这块代码</span></div><div class="line">    <span class="comment">#......................</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment">#如果没有异常执行这块代码</span></div></pre></td></tr></table></figure>
<h2 id="try-finally-语句"><a href="#try-finally-语句" class="headerlink" title="try-finally 语句"></a>try-finally 语句</h2><blockquote>
<p>try-finally 语句无论是否发生异常都将执行最后的代码。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="comment">#&lt;语句&gt;</span></div><div class="line"><span class="keyword">finally</span>:</div><div class="line">    <span class="comment">#&lt;语句&gt;    #退出try时总会执行</span></div><div class="line"><span class="keyword">raise</span></div></pre></td></tr></table></figure>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    fh = open(<span class="string">"testfile"</span>, <span class="string">"w"</span>)</div><div class="line">    fh.write(<span class="string">"这是一个测试文件，用于测试异常!!"</span>)</div><div class="line"><span class="keyword">finally</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error: 没有找到文件或读取文件失败"</span></div></pre></td></tr></table></figure>
<p>如果打开的文件没有可写权限，输出如下所示：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ python test.py</div><div class="line">Error: 没有找到文件或读取文件失败</div></pre></td></tr></table></figure>
<p>同样的例子也可以写成如下方式：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    fh = open(<span class="string">"testfile"</span>, <span class="string">"w"</span>)</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        fh.write(<span class="string">"这是一个测试文件，用于测试异常!!"</span>)</div><div class="line">    <span class="keyword">finally</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"关闭文件"</span></div><div class="line">        fh.close()</div><div class="line"><span class="keyword">except</span> IOError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"Error: 没有找到文件或读取文件失败"</span></div></pre></td></tr></table></figure>
<p>当在try块中抛出一个异常，立即执行finally块代码。<br>finally块中的所有语句执行后，异常被再次触发，并执行except块代码。<br>参数的内容不同于异常。<br>异常的参数<br>一个异常可以带上参数，可作为输出的异常信息参数。<br>你可以通过except语句来捕获异常的参数，如下所示：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="comment">#正常的操作</span></div><div class="line">    <span class="comment">#......................</span></div><div class="line"><span class="keyword">except</span> ExceptionType, Argument:</div><div class="line">    <span class="comment">#你可以在这输出 Argument 的值...</span></div></pre></td></tr></table></figure>
<blockquote>
<p>变量接收的异常值通常包含在异常的语句中。在元组的表单中变量可以接收一个或者多个值。<br>元组通常包含错误字符串，错误数字，错误位置。</p>
</blockquote>
<p>以下为单个异常的实例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">```py</div><div class="line">#!/usr/bin/python</div><div class="line"># -*- coding: UTF-8 -*-</div><div class="line"></div><div class="line"># 定义函数</div><div class="line">def temp_convert(var):</div><div class="line">    try:</div><div class="line">        return int(var)</div><div class="line">    except ValueError, Argument:</div><div class="line">        print &quot;参数没有包含数字\n&quot;, Argument</div><div class="line">temp_convert(&quot;xyz&quot;);</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ python test.py</div><div class="line">参数没有包含数字</div><div class="line">invalid literal <span class="keyword">for</span> int() with base 10: <span class="string">'xyz'</span></div></pre></td></tr></table></figure>
<h2 id="触发异常"><a href="#触发异常" class="headerlink" title="触发异常"></a>触发异常</h2><blockquote>
<p>我们可以使用raise语句自己触发异常</p>
</blockquote>
<p>raise语法格式如下：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">raise</span> [Exception [, args [, traceback]]]</div></pre></td></tr></table></figure>
<p>语句中Exception是异常的类型（例如，NameError）参数是一个异常参数值。该参数是可选的，如果不提供，异常的参数是”None”。<br>最后一个参数是可选的（在实践中很少使用），如果存在，是跟踪异常对象。</p>
<p><strong>实例</strong></p>
<p>一个异常可以是一个字符串，类或对象。 Python的内核提供的异常，大多数都是实例化的类，这是一个类的实例的参数。<br>定义一个异常非常简单，如下所示：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">functionName</span><span class="params">( level )</span>:</span></div><div class="line">    <span class="keyword">if</span> level &lt; <span class="number">1</span>:</div><div class="line">        <span class="keyword">raise</span> Exception(<span class="string">"Invalid level!"</span>, level)</div><div class="line">        <span class="comment"># 触发异常后，后面的代码就不会再执行</span></div></pre></td></tr></table></figure>
<ul>
<li>注意：为了能够捕获异常，”except”语句必须有用相同的异常来抛出类对象或者字符串。<br>例如我们捕获以上异常，”except”语句如下所示：</li>
</ul>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="comment">#正常逻辑</span></div><div class="line"><span class="keyword">except</span> <span class="string">"Invalid level!"</span>:</div><div class="line">    <span class="comment">#触发自定义异常</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment">#其余代码</span></div></pre></td></tr></table></figure>
<p><strong>实例</strong></p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line"></div><div class="line"><span class="comment"># 定义函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mye</span><span class="params">( level )</span>:</span></div><div class="line">    <span class="keyword">if</span> level &lt; <span class="number">1</span>:</div><div class="line">        <span class="keyword">raise</span> Exception(<span class="string">"Invalid level!"</span>, level)</div><div class="line">        <span class="comment"># 触发异常后，后面的代码就不会再执行</span></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    mye(<span class="number">0</span>)                // 触发异常</div><div class="line"><span class="keyword">except</span> <span class="string">"Invalid level!"</span>:</div><div class="line">    <span class="keyword">print</span> <span class="number">1</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="number">2</span></div></pre></td></tr></table></figure>
<p>执行以上代码，输出结果为：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ python test.py</div><div class="line">Traceback (most recent call last):</div><div class="line">  File <span class="string">"test.py"</span>, line 11, <span class="keyword">in</span> &lt;module&gt;</div><div class="line">    mye(0)</div><div class="line">  File <span class="string">"test.py"</span>, line 7, <span class="keyword">in</span> mye</div><div class="line">    raise Exception(<span class="string">"Invalid level!"</span>, level)</div><div class="line">Exception: (<span class="string">'Invalid level!'</span>, 0)</div></pre></td></tr></table></figure>
<h2 id="用户自定义异常"><a href="#用户自定义异常" class="headerlink" title="用户自定义异常"></a>用户自定义异常</h2><blockquote>
<p>通过创建一个新的异常类，程序可以命名它们自己的异常。异常应该是典型的继承自Exception类，通过直接或间接的方式。<br>以下为与RuntimeError相关的实例,实例中创建了一个类，基类为RuntimeError，用于在异常触发时输出更多的信息。<br>在try语句块中，用户自定义的异常后执行except块语句，变量 e 是用于创建Networkerror类的实例。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Networkerror</span><span class="params">(RuntimeError)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, arg)</span>:</span></div><div class="line">        self.args = arg</div></pre></td></tr></table></figure>
<p>在你定义以上类后，你可以触发该异常，如下所示：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">raise</span> Networkerror(<span class="string">"Bad hostname"</span>)</div><div class="line"><span class="keyword">except</span> Networkerror,e:</div><div class="line">    <span class="keyword">print</span> e.args</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python中的time]]></title>
      <url>http://percychen.com/2016/06/08/2016-06-08-pythontime/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Python 程序能用很多方式处理日期和时间，转换日期格式是一个常见的功能。Python 提供了一个 time 和 calendar 模块可以用于格式化日期和时间。时间间隔是以秒为单位的浮点小数。每个时间戳都以自从1970年1月1日午夜（历元）经过了多长时间来表示。</p>
</blockquote>
<h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p>头:<code>import time</code></p>
<table>
<thead>
<tr>
<th>常用表达式</th>
<th>输出</th>
</tr>
</thead>
<tbody>
<tr>
<td>time.time()</td>
<td>1459994552.51</td>
</tr>
<tr>
<td>time.localtime(time.time())</td>
<td>time.struct_time(tm_year=2016, tm_mon=4, tm_mday=7, tm_hour=10, tm_min=3, tm_sec=27, tm_wday=3, tm_yday=98, tm_isdst=0)</td>
</tr>
<tr>
<td>time.asctime( time.localtime(time.time()) )</td>
<td>Thu Apr  7 10:05:21 2016</td>
</tr>
<tr>
<td>time.strftime(“%Y-%m-%d %H:%M:%S”, time.localtime())</td>
<td>2016-04-07 10:25:09</td>
</tr>
<tr>
<td>print time.strftime(“%a %b %d %H:%M:%S %Y”, time.localtime())</td>
<td>Thu Apr 07 10:25:09 2016</td>
</tr>
<tr>
<td>print time.mktime(time.strptime(a,”%a %b %d %H:%M:%S %Y”))</td>
<td>1459175064.0</td>
</tr>
</tbody>
</table>
<h2 id="日历"><a href="#日历" class="headerlink" title="日历"></a>日历</h2><p>头：<code>import calendar</code></p>
<p>常用表达式：</p>
<p><code>calendar.month(2016, 1)</code></p>
<p>输出</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">    January 2016</div><div class="line">Mo Tu We Th Fr Sa Su</div><div class="line">             1  2  3</div><div class="line"> 4  5  6  7  8  9 10</div><div class="line">11 12 13 14 15 16 17</div><div class="line">18 19 20 21 22 23 24</div><div class="line">25 26 27 28 29 30 31</div></pre></td></tr></table></figure>
<h2 id="time常用函数"><a href="#time常用函数" class="headerlink" title="time常用函数"></a>time常用函数</h2><blockquote>
<p>Time 模块包含了以下内置函数，既有时间处理相的，也有转换时间格式的：</p>
</blockquote>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>time.altzone</td>
<td>返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。</td>
</tr>
<tr>
<td>time.asctime([tupletime])</td>
<td>接受时间元组并返回一个可读的形式为”Tue Dec 11 18:07:14 2008”（2008年12月11日 周二18时07分14秒）的24个字符的字符串。</td>
</tr>
<tr>
<td>time.clock( )</td>
<td>用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。</td>
</tr>
<tr>
<td>time.ctime([secs])</td>
<td>作用相当于asctime(localtime(secs))，未给参数相当于asctime()</td>
</tr>
<tr>
<td>time.gmtime([secs])</td>
<td>接收时间辍（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0</td>
</tr>
<tr>
<td>time.localtime([secs])</td>
<td>接收时间辍（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。</td>
</tr>
<tr>
<td>time.mktime(tupletime)</td>
<td>接受时间元组并返回时间辍（1970纪元后经过的浮点秒数）。</td>
</tr>
<tr>
<td>time.sleep(secs)</td>
<td>推迟调用线程的运行，secs指秒数。</td>
</tr>
<tr>
<td>time.strftime(fmt[,tupletime])</td>
<td>接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。</td>
</tr>
<tr>
<td>time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)</td>
<td>根据fmt的格式把一个时间字符串解析为时间元组。</td>
</tr>
<tr>
<td>time.time( )</td>
<td>返回当前时间的时间戳（1970纪元后经过的浮点秒数）。</td>
</tr>
<tr>
<td>time.tzset()</td>
<td>根据环境变量TZ重新初始化时间相关设置。</td>
</tr>
<tr>
<td>time.timezone</td>
<td>属性time.timezone是当地时区（未启动夏令时）距离格林威治的偏移秒数（&gt;0，美洲;&lt;=0大部分欧洲，亚洲，非洲）。</td>
</tr>
<tr>
<td>time.tzname</td>
<td>属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。</td>
</tr>
</tbody>
</table>
<h2 id="日历（Calendar）模块"><a href="#日历（Calendar）模块" class="headerlink" title="日历（Calendar）模块"></a>日历（Calendar）模块</h2><blockquote>
<p>此模块的函数都是日历相关的，例如打印某月的字符月历。<br>星期一是默认的每周第一天，星期天是默认的最后一天。更改设置需调用calendar.setfirstweekday()函数。模块包含了以下内置函数：</p>
</blockquote>
<table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>calendar.calendar(year,w=2,l=1,c=6)</td>
<td>返回一个多行字符串格式的year年年历，3个月一行，间隔距离为c。 每日宽度间隔为w字符。每行长度为21<em> W+18+2</em> C。l是每星期行数。</td>
</tr>
<tr>
<td>calendar.firstweekday( )</td>
<td>返回当前每周起始日期的设置。默认情况下，首次载入caendar模块时返回0，即星期一。</td>
</tr>
<tr>
<td>calendar.isleap(year)</td>
<td>是闰年返回True，否则为false。</td>
</tr>
<tr>
<td>calendar.leapdays(y1,y2)</td>
<td>返回在Y1，Y2两年之间的闰年总数。</td>
</tr>
<tr>
<td>calendar.month(year,month,w=2,l=1)</td>
<td>返回一个多行字符串格式的year年month月日历，两行标题，一周一行。每日宽度间隔为w字符。每行的长度为7* w+6。l是每星期的行数。</td>
</tr>
<tr>
<td>calendar.monthcalendar(year,month)</td>
<td>返回一个整数的单层嵌套列表。每个子列表装载代表一个星期的整数。Year年month月外的日期都设为0;范围内的日子都由该月第几日表示，从1开始。</td>
</tr>
<tr>
<td>calendar.monthrange(year,month)</td>
<td>返回两个整数。第一个是该月的星期几的日期码，第二个是该月的日期码。日从0（星期一）到6（星期日）;月从1到12。</td>
</tr>
<tr>
<td>calendar.prcal(year,w=2,l=1,c=6)</td>
<td>相当于 print calendar.calendar(year,w,l,c).</td>
</tr>
<tr>
<td>calendar.prmonth(year,month,w=2,l=1)</td>
<td>相当于 print calendar.calendar（year，w，l，c）。</td>
</tr>
<tr>
<td>calendar.setfirstweekday(weekday)</td>
<td>设置每周的起始日期码。0（星期一）到6（星期日）。</td>
</tr>
<tr>
<td>calendar.timegm(tupletime)</td>
<td>和time.gmtime相反：接受一个时间元组形式，返回该时刻的时间辍（1970纪元后经过的浮点秒数）。</td>
</tr>
<tr>
<td>calendar.weekday(year,month,day)</td>
<td>返回给定日期的日期码。0（星期一）到6（星期日）。月份为 1（一月） 到 12（12月）。</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[keytool命令笔记]]></title>
      <url>http://percychen.com/2016/06/07/2016-06-07-keytoolCommandNote/</url>
      <content type="html"><![CDATA[<h2 id="查看密钥"><a href="#查看密钥" class="headerlink" title="查看密钥"></a>查看密钥</h2><ul>
<li>针对RSA/x509.pem型密钥:</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -printcert -file test.RSA</div></pre></td></tr></table></figure>
<ul>
<li>针对keystore型密钥</li>
</ul>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -list -v -keystore test.keystore</div></pre></td></tr></table></figure>
<h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias <span class="built_in">test</span> -keyalg RSA -validity 20000 -keystore test.keystore</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-genkey</td>
<td>生成密钥</td>
</tr>
<tr>
<td>-alias</td>
<td>指定别名</td>
</tr>
<tr>
<td>-keyalg</td>
<td>签名证书的算法</td>
</tr>
<tr>
<td>-validity</td>
<td>签名证书的有效期</td>
</tr>
<tr>
<td>-keystore</td>
<td>输出名</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[dos2unix：一条命令搞定换行符问题]]></title>
      <url>http://percychen.com/2016/06/06/2016-06-06-dos2unix/</url>
      <content type="html"><![CDATA[<blockquote>
<p>项目伊始，开始拿着代码搭构建,刚开始无疑是痛苦的，各种编译出错。只能一个个解决，今天解掉了换行符问题，于是记录一下。</p>
</blockquote>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul>
<li>windows中的换行符是\r\n，</li>
<li>linux/unix下的换行符是\n。</li>
</ul>
<p>其中:<br>回车符：\r=0x0d  (13)          return； #回车（carriage return）<br>换行符：\n=0x0a (10)           newline。#换行（newline）</p>
<p>文本文件的行结束符,windows 用 CRLF，mac用CR，unix 用 LF。【CR – 回车符，c语言’\r’】。【LF – 换行符， c语言’\n’】。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>整个项目开发环境比较复杂，大多数是用windows进行开发。但是一些公共组件是采用的mac，还有一些脚本类是采用的linux开发。所以，所有的文本都有可能换行符不会。</p>
<p>首先，我们要找出所有的文件</p>
<p><code>find . -type f</code></p>
<p>找到之后，我们要对每个文件进行检测，是什么换行符</p>
<p><code>file $file &gt; file.txt</code></p>
<p>然后过滤出windows的换行符出来，既过滤带有 <code>CRLF</code>关键字的输出</p>
<p><code>cat file.txt| grep CRLF &gt;output.txt</code></p>
<p>分离出文件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$line</span> |awk -F : <span class="string">'&#123;print $1&#125;'</span>&gt;output2.txt</div><div class="line"><span class="keyword">done</span>&lt; output.txt</div></pre></td></tr></table></figure>
<p>最后进行转换处理</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="built_in">read</span> line;<span class="keyword">do</span></div><div class="line">    dos2unix <span class="variable">$line</span></div><div class="line"><span class="keyword">done</span>&lt; output2.txt</div></pre></td></tr></table></figure>
<p>整个过程就搞定了</p>
<h2 id="写代码"><a href="#写代码" class="headerlink" title="写代码"></a>写代码</h2><p><code>find . -type f| xargs file | grep CRLF| awk -F : &#39;{print $1}&#39;|xargs dos2unix</code></p>
<p>就完成了上面第二步中所有的代码</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python argparse笔记]]></title>
      <url>http://percychen.com/2016/05/31/2016-05-31-pythonargparse/</url>
      <content type="html"><![CDATA[<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#demo.py</span></div><div class="line"><span class="keyword">import</span> argparse</div><div class="line">op=argparse.ArgumentParser(descripttion=<span class="string">"script description"</span>);</div><div class="line">op.add_argument(<span class="string">"-a"</span>,help=<span class="string">"a option"</span>)</div><div class="line">option=op.parse_args()</div></pre></td></tr></table></figure>
<p>上面我们初始化了一个 选项化脚本，随后使用<code>demo.py -a test</code>即可测试</p>
<h2 id="add-argument内建参数"><a href="#add-argument内建参数" class="headerlink" title="add_argument内建参数"></a>add_argument内建参数</h2><ul>
<li>action</li>
</ul>
<table>
<thead>
<tr>
<th>action动作</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>action=’store_const’</td>
<td>默认返回值为None</td>
</tr>
<tr>
<td>action=’store_true’</td>
<td>空值返回为False</td>
</tr>
<tr>
<td>action=’store_false’</td>
<td>空值返回True</td>
</tr>
</tbody>
</table>
<ul>
<li>指定输入选项类型</li>
</ul>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">type=int</div><div class="line">type=str</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux,wc命令详解]]></title>
      <url>http://percychen.com/2016/05/10/2016-05-10-shellwccommand/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Linux系统中的wc(Word Count)命令的功能为统计指定文件中的字节数、字数、行数，并将统计结果显示输出。</p>
</blockquote>
<ul>
<li>命令功能：</li>
</ul>
<p>统计指定文件中的字节数、字数、行数，并将统计结果显示输出。该命令统计指定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所指定文件的总统计数。</p>
<ul>
<li>命令参数：</li>
</ul>
<table>
<thead>
<tr>
<th>参数</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c</td>
<td>统计字节数。</td>
</tr>
<tr>
<td>-l</td>
<td>统计行数。</td>
</tr>
<tr>
<td>-m</td>
<td>统计字符数。这个标志不能与 -c 标志一起使用。</td>
</tr>
<tr>
<td>-w</td>
<td>统计字数。一个字被定义为由空白、跳格或换行字符分隔的字符串。</td>
</tr>
<tr>
<td>-L</td>
<td>打印最长行的长度。</td>
</tr>
<tr>
<td>-help</td>
<td>显示帮助信息</td>
</tr>
<tr>
<td>–version</td>
<td>显示版本信息</td>
</tr>
</tbody>
</table>
<ul>
<li>使用实例：</li>
</ul>
<p>实例1：查看文件的字节数、字数、行数</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc test.txt</span></div><div class="line"> 7  8 70 test.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc -l test.txt</span></div><div class="line">7 test.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc -c test.txt</span></div><div class="line">70 test.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc -w test.txt</span></div><div class="line">8 test.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc -m test.txt</span></div><div class="line">70 test.txt</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># wc -L test.txt</span></div><div class="line">17 test.txt</div><div class="line">```sh</div><div class="line"></div><div class="line">说明：</div><div class="line"></div><div class="line">7     8     70     test.txt</div><div class="line"></div><div class="line">行数 单词数 字节数 文件名</div><div class="line"></div><div class="line"></div><div class="line">实例2：用wc命令怎么做到只打印统计数字不打印文件名</div><div class="line"></div><div class="line">```sh</div><div class="line">[root@localhost <span class="built_in">test</span>]<span class="comment"># cat test.txt |wc -l</span></div><div class="line">7</div></pre></td></tr></table></figure>
<p>实例3：用来统计当前目录下的文件数</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@localhost <span class="built_in">test</span>6]<span class="comment"># ls -l | wc -l</span></div><div class="line">8</div></pre></td></tr></table></figure>
<p>说明：<br>数量中包含当前目录</p>
<h2 id="计算字符串长度"><a href="#计算字符串长度" class="headerlink" title="计算字符串长度"></a>计算字符串长度</h2><ol>
<li>字节长度</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">expr length <span class="string">"统计"</span></div></pre></td></tr></table></figure>
<ol>
<li>字符数</li>
</ol>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">"统计"</span> | wc -m</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[keytool生成密钥/keytool查看密钥]]></title>
      <url>http://percychen.com/2016/04/07/2016-04-07-keytoolcommand/</url>
      <content type="html"><![CDATA[<h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><p>`keytool -genkey -alias 密匙别名 -keyalg 密匙类型 -validity 有效时间 -keystore  储存密匙路径/密匙名</p>
<p>然后按照提示输入密码/国家，组织etc.</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -genkey -alias percychen -keyalg RSA -validity 20000 -keystore  ./percychenReleaseKey.keystore</div></pre></td></tr></table></figure>
<h2 id="查看密匙"><a href="#查看密匙" class="headerlink" title="查看密匙"></a>查看密匙</h2><p><code>keytool -list -v -keystore 储存密匙路径/密匙名 -storepass 储存密匙密码</code></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -list -v -keystore percychenReleaseKey.keystore -storepass xxxxxxxx</div></pre></td></tr></table></figure>
<p>对于RSA和pem格式的密钥信息使用下面方式查看</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">keytool -printcert -file pem/rsa文件信息</div></pre></td></tr></table></figure>
<h1 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">KEYSTORE_PATH=签名文件路径</div><div class="line">STOREPASS=密钥密码</div><div class="line">keypass=签名密码(在生成密钥文件时最后输入的那个密码，默认与STOREPASS一样)</div><div class="line">../out_<span class="variable">$&#123;TARGET_APP_DEBUG&#125;</span>=需要签名的文件</div><div class="line">Alias=别名</div><div class="line">jarsigner -keystore <span class="variable">$KEYSTORE_PATH</span> -storepass <span class="variable">$STOREPASS</span> -keypass <span class="variable">$KEYPASS</span> ../out_<span class="variable">$&#123;TARGET_APP_DEBUG&#125;</span> <span class="variable">$ALIAS</span></div></pre></td></tr></table></figure>
<p>就可以生辰签名的apk文件</p>
<h1 id="附上keytool参数以及jarsigner参数"><a href="#附上keytool参数以及jarsigner参数" class="headerlink" title="附上keytool参数以及jarsigner参数:"></a>附上keytool参数以及jarsigner参数:</h1><p>keytool用法：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">-certreq     [-v] [-protected]</div><div class="line">             [-alias &lt;别名&gt;] [-sigalg &lt;sigalg&gt;]</div><div class="line">             [-file &lt;csr_file&gt;] [-keypass &lt;密钥库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-changealias [-v] [-protected] -alias &lt;别名&gt; -destalias &lt;目标别名&gt;</div><div class="line">             [-keypass &lt;密钥库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-delete      [-v] [-protected] -alias &lt;别名&gt;</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-exportcert  [-v] [-rfc] [-protected]</div><div class="line">             [-alias &lt;别名&gt;] [-file &lt;认证文件&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-genkeypair  [-v] [-protected]</div><div class="line">             [-alias &lt;别名&gt;]</div><div class="line">             [-keyalg &lt;keyalg&gt;] [-keysize &lt;密钥大小&gt;]</div><div class="line">             [-sigalg &lt;sigalg&gt;] [-dname &lt;dname&gt;]</div><div class="line">             [-validity &lt;valDays&gt;] [-keypass &lt;密钥库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-genseckey   [-v] [-protected]</div><div class="line">             [-alias &lt;别名&gt;] [-keypass &lt;密钥库口令&gt;]</div><div class="line">             [-keyalg &lt;keyalg&gt;] [-keysize &lt;密钥大小&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-help</div><div class="line">-importcert  [-v] [-noprompt] [-trustcacerts] [-protected]</div><div class="line">             [-alias &lt;别名&gt;]</div><div class="line">             [-file &lt;认证文件&gt;] [-keypass &lt;密钥库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-importkeystore [-v]</div><div class="line">             [-srckeystore &lt;源密钥库&gt;] [-destkeystore &lt;目标密钥库&gt;]</div><div class="line">             [-srcstoretype &lt;源存储类型&gt;] [-deststoretype &lt;目标存储类型&gt;]</div><div class="line">             [-srcstorepass &lt;源存储库口令&gt;] [-deststorepass &lt;目标存储库口令&gt;]</div><div class="line">             [-srcprotected] [-destprotected]</div><div class="line">             [-srcprovidername &lt;源提供方名称&gt;]</div><div class="line">             [-destprovidername &lt;目标提供方名称&gt;]</div><div class="line">             [-srcalias &lt;源别名&gt; [-destalias &lt;目标别名&gt;]</div><div class="line">               [-srckeypass &lt;源密钥库口令&gt;] [-destkeypass &lt;目标密钥库口令&gt;]]</div><div class="line">             [-noprompt]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-keypasswd   [-v] [-alias &lt;别名&gt;]</div><div class="line">             [-keypass &lt;旧密钥库口令&gt;] [-new &lt;新密钥库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-list        [-v | -rfc] [-protected]</div><div class="line">             [-alias &lt;别名&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">-printcert   [-v] [-file &lt;认证文件&gt;]</div><div class="line">-storepasswd [-v] [-new &lt;新存储库口令&gt;]</div><div class="line">             [-keystore &lt;密钥库&gt;] [-storepass &lt;存储库口令&gt;]</div><div class="line">             [-storetype &lt;存储类型&gt;] [-providername &lt;名称&gt;]</div><div class="line">             [-providerclass &lt;提供方类名称&gt; [-providerarg &lt;参数&gt;]] ...</div><div class="line">             [-providerpath &lt;路径列表&gt;]</div><div class="line">jarsigner用法： [选项] jar 文件别名</div><div class="line">----</div><div class="line">       jarsigner -verify [选项] jar 文件</div><div class="line">            [-keystore &lt;url&gt;]           密钥库位置</div><div class="line">            [-storepass &lt;口令&gt;]         用于密钥库完整性的口令</div><div class="line">            [-storetype &lt;类型&gt;]         密钥库类型</div><div class="line">            [-keypass &lt;口令&gt;]           专用密钥的口令（如果不同）</div><div class="line">            [-sigfile &lt;文件&gt;]           .SF/.DSA 文件的名称</div><div class="line">            [-signedjar &lt;文件&gt;]         已签名的 JAR 文件的名称</div><div class="line">            [-digestalg &lt;算法&gt;]    摘要算法的名称</div><div class="line">            [-sigalg &lt;算法&gt;]       签名算法的名称</div><div class="line">            [-verify]                   验证已签名的 JAR 文件</div><div class="line">            [-verbose]                  签名/验证时输出详细信息</div><div class="line">            [-certs]                    输出详细信息和验证时显示证书</div><div class="line">            [-tsa &lt;url&gt;]                时间戳机构的位置</div><div class="line">            [-tsacert &lt;别名&gt;]           时间戳机构的公共密钥证书</div><div class="line">            [-altsigner &lt;类&gt;]           替代的签名机制的类名</div><div class="line">            [-altsignerpath &lt;路径列表&gt;] 替代的签名机制的位置</div><div class="line">            [-internalsf]               在签名块内包含 .SF 文件</div><div class="line">            [-sectionsonly]             不计算整个清单的散列</div><div class="line">            [-protected]                密钥库已保护验证路径</div><div class="line">            [-providerName &lt;名称&gt;]      提供者名称</div><div class="line">            [-providerClass &lt;类&gt;        加密服务提供者的名称</div><div class="line">            [-providerArg &lt;参数&gt;]] ... 主类文件和构造函数参数</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python zipfile笔记]]></title>
      <url>http://percychen.com/2016/03/02/2016-03-02-pythonzipfilenote/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Android ota_from_target_file.py处理target_files.zip的时候，用的是标准的python zipfile类。进行生产FULL OTA包和增量OTA包。<br>所以找时间翻了一下zipfile的语法，接口，以此来扩展ota_from_target_file.py的功能，比如给rom包添加一个data分区的文件。</p>
</blockquote>
<p><a href="http://python.jobbole.com/81519/" target="_blank" rel="external">点击阅读原文</a></p>
<p>###笔记</p>
<p>####ZipFile方法和属性：</p>
<p><code>ZipFile.getinfo(name)</code></p>
<blockquote>
<p>获取zip文档内指定文件的信息。返回一个zipfile.ZipInfo对象，它包括文件的详细信息。将在下面 具体介绍该对象。</p>
</blockquote>
<p><code>ZipFile.infolist()</code></p>
<blockquote>
<p>获取zip文档内所有文件的信息，返回一个zipfile.ZipInfo的列表。</p>
</blockquote>
<p><code>ZipFile.namelist()</code></p>
<blockquote>
<p>获取zip文档内所有文件的名称列表。</p>
</blockquote>
<p><code>ZipFile.extract(member[, path[, pwd]])</code></p>
<blockquote>
<p>将zip文档内的指定文件解压到当前目录。参数member指定要解压的文件名称或对应的ZipInfo对象；参数path指定了解析文件保存的文件夹；参数pwd为解压密码。</p>
</blockquote>
<p>下面一个例子将保存在程序根目录下的txt.zip内的所有文件解压到D:/Work目录：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zipfile, os</div><div class="line">zipFile = zipfile.ZipFile(os.path.join(os.getcwd(), <span class="string">'txt.zip'</span>))</div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> zipFile.namelist():</div><div class="line">    zipFile.extract(file, <span class="string">r'd:/Work'</span>)</div><div class="line">zipFile.close()</div></pre></td></tr></table></figure>
<p><code>ZipFile.extractall([path[, members[, pwd]]])</code></p>
<blockquote>
<p>解压zip文档中的所有文件到当前目录。参数members的默认值为zip文档内的所有文件名称列表，也可以自己设置，选择要解压的文件名称。</p>
</blockquote>
<p><code>ZipFile.printdir()</code></p>
<blockquote>
<p>将zip文档内的信息打印到控制台上。</p>
</blockquote>
<p><code>ZipFile.setpassword(pwd)</code></p>
<blockquote>
<p>设置zip文档的密码。</p>
</blockquote>
<p><code>ZipFile.read(name[, pwd])</code></p>
<blockquote>
<p>获取zip文档内指定文件的二进制数据。</p>
</blockquote>
<p>下面的例子演示了read()的使用，zip文档内包括一个txt.txt的文本文件，使用read()方法读取其二进制数据，然后保存到D:/txt.txt。</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#coding=gbk</span></div><div class="line"><span class="keyword">import</span> zipfile, os</div><div class="line">zipFile = zipfile.ZipFile(os.path.join(os.getcwd(), <span class="string">'txt.zip'</span>))</div><div class="line">data = zipFile.read(<span class="string">'txt.txt'</span>)</div><div class="line">(<span class="keyword">lambda</span> f, d: (f.write(d), f.close()))(open(<span class="string">r'd:/txt.txt'</span>, <span class="string">'wb'</span>), data)  <span class="comment">#一行语句就完成了写文件操作。仔细琢磨哦~_~</span></div><div class="line">zipFile.close()</div></pre></td></tr></table></figure>
<p><code>ZipFile.write(filename[, arcname[, compress_type]])</code></p>
<blockquote>
<p>将指定文件添加到zip文档中。filename为文件路径，arcname为添加到zip文档之后保存的名称, 参数compress_type表示压缩方法，它的值可以是zipfile. ZIP_STORED 或zipfile. ZIP_DEFLATED。下面的例子演示了如何创建一个zip文档，并将文件D:/test.doc添加到压缩文档中。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zipfile, os</div><div class="line">zipFile = zipfile.ZipFile(<span class="string">r'D:/test.zip'</span>), <span class="string">'w'</span>)</div><div class="line">zipFile.write(<span class="string">r'D:/test.doc'</span>, <span class="string">'ok.doc'</span>, zipfile.ZIP_DEFLATED)</div><div class="line">zipFile.close()</div></pre></td></tr></table></figure>
<p><code>ZipFile.writestr(zinfo_or_arcname, bytes)</code></p>
<blockquote>
<p>writestr()支持将二进制数据直接写入到压缩文档。</p>
</blockquote>
<p>###ZipInfo类</p>
<p>ZipFile.getinfo(name) 方法返回的是一个ZipInfo对象，表示zip文档中相应文件的信息。它支持如下属性：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ZipInfo.filename</td>
<td>获取文件名称。</td>
</tr>
<tr>
<td>ZipInfo.date_time</td>
<td>获取文件最后修改时间。返回一个包含6个元素的元组：(年, 月, 日, 时, 分, 秒)</td>
</tr>
<tr>
<td>ZipInfo.compress_type</td>
<td>压缩类型。</td>
</tr>
<tr>
<td>ZipInfo.comment</td>
<td>文档说明。</td>
</tr>
<tr>
<td>ZipInfo.extr</td>
<td>扩展项数据。</td>
</tr>
<tr>
<td>ZipInfo.create_system</td>
<td>获取创建该zip文档的系统。</td>
</tr>
<tr>
<td>ZipInfo.create_version</td>
<td>获取 创建zip文档的PKZIP版本。</td>
</tr>
<tr>
<td>ZipInfo.extract_version</td>
<td>获取 解压zip文档所需的PKZIP版本。</td>
</tr>
<tr>
<td>ZipInfo.reserved</td>
<td>预留字段，当前实现总是返回0。</td>
</tr>
<tr>
<td>ZipInfo.flag_bits</td>
<td>zip标志位。</td>
</tr>
<tr>
<td>ZipInfo.volume</td>
<td>文件头的卷标。</td>
</tr>
<tr>
<td>ZipInfo.internal_attr</td>
<td>内部属性。</td>
</tr>
<tr>
<td>ZipInfo.external_attr</td>
<td>外部属性。</td>
</tr>
<tr>
<td>ZipInfo.header_offset</td>
<td>文件头偏移位。</td>
</tr>
<tr>
<td>ZipInfo.CRC</td>
<td>未压缩文件的CRC-32。</td>
</tr>
<tr>
<td>ZipInfo.compress_size</td>
<td>获取压缩后的大小。</td>
</tr>
<tr>
<td>ZipInfo.file_size</td>
<td>获取未压缩的文件大小。</td>
</tr>
</tbody>
</table>
<p>下面一个简单的例子说明这些属性的意思：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> zipfile, os</div><div class="line">zipFile = zipfile.ZipFile(os.path.join(os.getcwd(), <span class="string">'txt.zip'</span>))</div><div class="line">zipInfo = zipFile.getinfo(<span class="string">'doc.doc'</span>)</div><div class="line"><span class="keyword">print</span> <span class="string">'filename:'</span>, zipInfo.filename</div><div class="line"><span class="keyword">print</span> <span class="string">'date_time:'</span>, zipInfo.date_time</div><div class="line"><span class="keyword">print</span> <span class="string">'compress_type:'</span>, zipInfo.compress_type</div><div class="line"><span class="keyword">print</span> <span class="string">'comment:'</span>, zipInfo.comment</div><div class="line"><span class="keyword">print</span> <span class="string">'extra:'</span>, zipInfo.extra</div><div class="line"><span class="keyword">print</span> <span class="string">'create_system:'</span>, zipInfo.create_system</div><div class="line"><span class="keyword">print</span> <span class="string">'create_version:'</span>, zipInfo.create_version</div><div class="line"><span class="keyword">print</span> <span class="string">'extract_version:'</span>, zipInfo.extract_version</div><div class="line"><span class="keyword">print</span> <span class="string">'extract_version:'</span>, zipInfo.reserved</div><div class="line"><span class="keyword">print</span> <span class="string">'flag_bits:'</span>, zipInfo.flag_bits</div><div class="line"><span class="keyword">print</span> <span class="string">'volume:'</span>, zipInfo.volume</div><div class="line"><span class="keyword">print</span> <span class="string">'internal_attr:'</span>, zipInfo.internal_attr</div><div class="line"><span class="keyword">print</span> <span class="string">'external_attr:'</span>, zipInfo.external_attr</div><div class="line"><span class="keyword">print</span> <span class="string">'header_offset:'</span>, zipInfo.header_offset</div><div class="line"><span class="keyword">print</span> <span class="string">'CRC:'</span>, zipInfo.CRC</div><div class="line"><span class="keyword">print</span> <span class="string">'compress_size:'</span>, zipInfo.compress_size</div><div class="line"><span class="keyword">print</span> <span class="string">'file_size:'</span>, zipInfo.file_size</div><div class="line">zipFile.close()</div></pre></td></tr></table></figure>
<p>感觉使用zipfile模块来处理zip文件真的很简单。想当初在.NET平台下，使用sharpziplib压缩、解压一个文件，我花了N多时间，找了N多英文资源，才写出一个能压缩文件的demo。而现在使用Python，通过阅读python手册，一两个小时就掌握了zipfile模块的基本使用。哈哈，使用Python，真爽！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python 常用的demo片段]]></title>
      <url>http://percychen.com/2016/01/26/2016-01-26-python_demo_command/</url>
      <content type="html"><![CDATA[<p><a href="http://wangwei007.blog.51cto.com/68019/1131610" target="_blank" rel="external">原文地址</a></p>
<blockquote>
<p>python编程中常用的12种基础知识总结：</p>
</blockquote>
<ul>
<li>正则表达式替换</li>
<li>遍历目录方法</li>
<li>列表按列排序、去重</li>
<li>字典排序</li>
<li>字典、列表、字符串互转</li>
<li>时间对象操作</li>
<li>命令行参数解析(getopt)</li>
<li>print 格式化输出，</li>
<li>进制转换</li>
<li>Python调用系统命令或者脚本</li>
<li>Python 读写文件。</li>
</ul>
<p>###正则表达式替换</p>
<blockquote>
<p>目标: 将字符串line中的 overview.gif 替换成其他字符串</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">line = <span class="string">'&lt;IMG ALIGN="middle" SRC="overview.gif" BORDER="0" ALT=""&gt;'</span></div><div class="line">mo=re.compile(<span class="string">r'(?&lt;=SRC=)"([\w+\.]+)"'</span>,re.I)</div><div class="line">mo.sub(<span class="string">r'"\1****"'</span>,line)</div><div class="line"><span class="comment">#输出： &lt;IMG ALIGN="middle" SRC="cdn_overview.gif****" BORDER="0" ALT=""&gt;'</span></div><div class="line">mo.sub(<span class="string">r'replace_str_\1'</span>,line)</div><div class="line"><span class="comment">#输出：&lt;IMG ALIGN="middle" replace_str_overview.gif BORDER="0" ALT=""&gt;'&lt; /span&gt;</span></div><div class="line">mo.sub(<span class="string">r'"testetstset"'</span>,line)</div><div class="line"><span class="comment">#输出：&lt;IMG ALIGN="middle" SRC="testetstset" BORDER="0" ALT=""&gt;'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>注意: 其中 \1 是匹配到的数据，可以通过这样的方式直接引用</p>
</blockquote>
<p>###遍历目录方法</p>
<blockquote>
<p>在某些时候，我们需要遍历某个目录找出特定的文件列表，可以通过os.walk方法来遍历,非常方便</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">fileList = []</div><div class="line">rootdir = <span class="string">"/data"</span></div><div class="line"><span class="keyword">for</span> root, subFolders, files <span class="keyword">in</span> os.walk(rootdir):</div><div class="line"><span class="keyword">if</span> <span class="string">'.svn'</span> <span class="keyword">in</span> subFolders: subFolders.remove(<span class="string">'.svn'</span>)  <span class="comment"># 排除特定目录</span></div><div class="line"><span class="keyword">for</span> file <span class="keyword">in</span> files:</div><div class="line">  <span class="keyword">if</span> file.find(<span class="string">".t2t"</span>) != <span class="number">-1</span>:<span class="comment"># 查找特定扩展名的文件</span></div><div class="line">      file_dir_path = os.path.join(root,file)</div><div class="line">      fileList.append(file_dir_path)</div><div class="line"></div><div class="line"><span class="keyword">print</span> fileList</div></pre></td></tr></table></figure>
<p>###列表按列排序(list sort)</p>
<blockquote>
<p>如果列表的每个元素都是一个元组(tuple),我们要根据元组的某列来排序的化，可参考如下方法<br>下面例子我们是根据元组的第2列和第3列数据来排序的,而且是倒序(reverse=True)</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">a = [(<span class="string">'2011-03-17'</span>, <span class="string">'2.26'</span>, <span class="number">6429600</span>, <span class="string">'0.0'</span>), (<span class="string">'2011-03-16'</span>, <span class="string">'2.26'</span>, <span class="number">12036900</span>, <span class="string">'-3.0'</span>), (<span class="string">'2011-03-15'</span>, <span class="string">'2.33'</span>, <span class="number">15615500</span>,<span class="string">'-19.1'</span>)]</div><div class="line"><span class="keyword">print</span> a[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line"><span class="comment">#输出：2011-03-17</span></div><div class="line">b = sorted(a, key=<span class="keyword">lambda</span> result: result[<span class="number">1</span>],reverse=<span class="keyword">True</span>)</div><div class="line"><span class="keyword">print</span> b</div><div class="line"><span class="comment">#输出：[('2011-03-15', '2.33', 15615500, '-19.1'), ('2011-03-17', '2.26', 6429600, '0.0'), ('2011-03-16', '2.26', 12036900, '-3.0')]</span></div><div class="line">c = sorted(a, key=<span class="keyword">lambda</span> result: result[<span class="number">2</span>],reverse=<span class="keyword">True</span>)</div><div class="line"><span class="keyword">print</span> c</div><div class="line"><span class="comment">#输出：[('2011-03-15', '2.33', 15615500, '-19.1'), ('2011-03-16', '2.26', 12036900, '-3.0'), ('2011-03-17', '2.26', 6429600, '0.0')]</span></div></pre></td></tr></table></figure>
<p>###列表去重(list uniq)</p>
<blockquote>
<p>有时候需要将list中重复的元素删除，就要使用如下方法</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">lst= [(<span class="number">1</span>,<span class="string">'sss'</span>),(<span class="number">2</span>,<span class="string">'fsdf'</span>),(<span class="number">1</span>,<span class="string">'sss'</span>),(<span class="number">3</span>,<span class="string">'fd'</span>)]</div><div class="line">set(lst)</div><div class="line"><span class="comment">#输出：set([(2, 'fsdf'), (3, 'fd'), (1, 'sss')])</span></div><div class="line">lst = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">6</span>]</div><div class="line">set(lst)</div><div class="line"><span class="comment">#输出：set([1, 3, 4, 5, 6, 7])</span></div></pre></td></tr></table></figure>
<p>###字典排序(dict sort)</p>
<blockquote>
<p>一般来说，我们都是根据字典的key来进行排序，但是我们如果想根据字典的value值来排序，就使用如下方法</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> operator <span class="keyword">import</span> itemgetter</div><div class="line">aa = &#123;<span class="string">"a"</span>:<span class="string">"1"</span>,<span class="string">"sss"</span>:<span class="string">"2"</span>,<span class="string">"ffdf"</span>:<span class="string">'5'</span>,<span class="string">"ffff2"</span>:<span class="string">'3'</span>&#125;</div><div class="line">sort_aa = sorted(aa.items(),key=itemgetter(<span class="number">1</span>))</div><div class="line">sort_aa</div><div class="line"><span class="comment">#输出：[('a', '1'), ('sss', '2'), ('ffff2', '3'), ('ffdf', '5')]</span></div></pre></td></tr></table></figure>
<blockquote>
<p>从上面的运行结果看到，按照字典的value值进行排序的</p>
</blockquote>
<p>###字典,列表,字符串互转</p>
<blockquote>
<p>以下是生成数据库连接字符串,从字典转换到字符串</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">params = &#123;<span class="string">"server"</span>:<span class="string">"mpilgrim"</span>, <span class="string">"database"</span>:<span class="string">"master"</span>, <span class="string">"uid"</span>:<span class="string">"sa"</span>, <span class="string">"pwd"</span>:<span class="string">"secret"</span>&#125;</div><div class="line">[<span class="string">"%s=%s"</span> % (k, v) <span class="keyword">for</span> k, v <span class="keyword">in</span> params.items()]</div><div class="line"><span class="comment">#输出：['server=mpilgrim', 'uid=sa', 'database=master', 'pwd=secret']</span></div><div class="line"><span class="string">";"</span>.join([<span class="string">"%s=%s"</span> % (k, v) <span class="keyword">for</span> k, v <span class="keyword">in</span> params.items()])</div><div class="line"><span class="comment">#输出：'server=mpilgrim;uid=sa;database=master;pwd=secret'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>下面的例子 是将字符串转化为字典</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">a = <span class="string">'server=mpilgrim;uid=sa;database=master;pwd=secret'</span></div><div class="line">aa = &#123;&#125;</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a.split(<span class="string">';'</span>):aa[i.split(<span class="string">'='</span>,<span class="number">1</span>)[<span class="number">0</span>]] = i.split(<span class="string">'='</span>,<span class="number">1</span>)[<span class="number">1</span>]</div><div class="line">aa</div><div class="line"><span class="comment">#输出：&#123;'pwd': 'secret', 'database': 'master', 'uid': 'sa', 'server': 'mpilgrim'&#125;</span></div></pre></td></tr></table></figure>
<p>###时间对象操作</p>
<blockquote>
<p>将时间对象转换成字符串</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> datetime</div><div class="line">datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M"</span>)</div><div class="line"><span class="comment">#输出：'2011-01-20 14:05'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>时间大小比较</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line">t1 = time.strptime(<span class="string">'2011-01-20 14:05'</span>,<span class="string">"%Y-%m-%d %H:%M"</span>)</div><div class="line">t2 = time.strptime(<span class="string">'2011-01-20 16:05'</span>,<span class="string">"%Y-%m-%d %H:%M"</span>)</div><div class="line">t1 &gt; t2</div><div class="line"><span class="comment">#输出：False</span></div><div class="line">t1 &lt; t2</div><div class="line"><span class="comment">#输出：True</span></div></pre></td></tr></table></figure>
<blockquote>
<p>时间差值计算,计算8小时前的时间</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">datetime.datetime.now().strftime(<span class="string">"%Y-%m-%d %H:%M"</span>)</div><div class="line"><span class="comment">#输出：  '2011-01-20 15:02'</span></div><div class="line">(datetime.datetime.now() - datetime.timedelta(hours=<span class="number">8</span>)).strftime(<span class="string">"%Y-%m-%d %H:%M"</span>)</div><div class="line"><span class="comment">#输出：'2011-01-20 07:03'</span></div></pre></td></tr></table></figure>
<blockquote>
<p>将字符串转换成时间对象</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">endtime=datetime.datetime.strptime(<span class="string">'20100701'</span>,<span class="string">"%Y%m%d"</span>)</div><div class="line">type(endtime)</div><div class="line"><span class="comment">#输出：&lt;type 'datetime.datetime'&gt;</span></div><div class="line"><span class="keyword">print</span> endtime</div><div class="line"><span class="comment">#输出：2010-07-01 00:00:00</span></div></pre></td></tr></table></figure>
<blockquote>
<p>将从 1970-01-01 00:00:00 UTC 到现在的秒数，格式化输出</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line">a = <span class="number">1302153828</span></div><div class="line">time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>,time.localtime(a))</div><div class="line"><span class="comment">#输出：'2011-04-07 13:23:48'</span></div></pre></td></tr></table></figure>
<h3 id="命令行参数解析-getopt"><a href="#命令行参数解析-getopt" class="headerlink" title="命令行参数解析(getopt)"></a>命令行参数解析(getopt)</h3><blockquote>
<p>通常在编写一些日运维脚本时，需要根据不同的条件，输入不同的命令行选项来实现不同的功能<br>在Python中提供了getopt模块很好的实现了命令行参数的解析,下面距离说明。请看如下程序:</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys,os,getopt</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></div><div class="line"><span class="keyword">print</span> <span class="string">'''''</span></div><div class="line">Usage: analyse_stock.py [options...]</div><div class="line">Options:</div><div class="line">-e : Exchange Name</div><div class="line">-c : User-Defined Category Name</div><div class="line">-f : Read stock info from file and save to db</div><div class="line">-d : delete from db by stock code</div><div class="line">-n : stock name</div><div class="line">-s : stock code</div><div class="line">-h : this help info</div><div class="line">test.py -s haha -n "HA Ha"</div><div class="line">'''</div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">opts, args = getopt.getopt(sys.argv[<span class="number">1</span>:],<span class="string">'he:c:f:d:n:s:'</span>)</div><div class="line"><span class="keyword">except</span> getopt.GetoptError:</div><div class="line">usage()</div><div class="line">sys.exit()</div><div class="line"><span class="keyword">if</span> len(opts) == <span class="number">0</span>:</div><div class="line">usage()</div><div class="line">sys.exit()</div><div class="line"></div><div class="line"><span class="keyword">for</span> opt, arg <span class="keyword">in</span> opts:</div><div class="line"><span class="keyword">if</span> opt <span class="keyword">in</span> (<span class="string">'-h'</span>, <span class="string">'--help'</span>):</div><div class="line">  usage()</div><div class="line">  sys.exit()</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-d'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"del stock %s"</span> % arg</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-f'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"read file %s"</span> % arg</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-c'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"user-defined %s "</span> % arg</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-e'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"Exchange Name %s"</span> % arg</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-s'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"Stock code %s"</span> % arg</div><div class="line"><span class="keyword">elif</span> opt == <span class="string">'-n'</span>:</div><div class="line">  <span class="keyword">print</span> <span class="string">"Stock name %s"</span> % arg</div><div class="line"></div><div class="line">sys.exit()</div></pre></td></tr></table></figure>
<p>###print 格式化输出</p>
<p><strong>格式化输出字符串</strong></p>
<blockquote>
<p>截取字符串输出,下面例子将只输出字符串的前3个字母</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str=<span class="string">"abcdefg"</span></div><div class="line"><span class="keyword">print</span> <span class="string">"%.3s"</span> % str</div><div class="line"><span class="comment">#输出：  abc</span></div></pre></td></tr></table></figure>
<blockquote>
<p>按固定宽度输出，不足使用空格补全,下面例子输出宽度为10</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str=<span class="string">"abcdefg"</span></div><div class="line"><span class="keyword">print</span> <span class="string">"%10s"</span> % str</div><div class="line"><span class="comment">#输出：     abcdefg</span></div></pre></td></tr></table></figure>
<blockquote>
<p>截取字符串，按照固定宽度输出</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">str=<span class="string">"abcdefg"</span></div><div class="line"><span class="keyword">print</span> <span class="string">"%10.3s"</span> % str</div><div class="line"><span class="comment">#输出：         abc</span></div></pre></td></tr></table></figure>
<blockquote>
<p>浮点类型数据位数保留</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> fpformat</div><div class="line">a= <span class="number">0.0030000000005</span></div><div class="line">b=fpformat.fix(a,<span class="number">6</span>)</div><div class="line"><span class="keyword">print</span> b</div><div class="line"><span class="comment">#输出：  0.003000</span></div></pre></td></tr></table></figure>
<blockquote>
<p>对浮点数四舍五入,主要使用到round函数</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</div><div class="line">a =<span class="string">"2.26"</span></div><div class="line">b =<span class="string">"2.29"</span></div><div class="line">c = Decimal(a) - Decimal(b)</div><div class="line"><span class="keyword">print</span> c</div><div class="line"><span class="comment">#输出：  -0.03</span></div><div class="line">c / Decimal(a) * <span class="number">100</span></div><div class="line"><span class="comment">#输出：  Decimal('-1.327433628318584070796460177')</span></div><div class="line">Decimal(str(round(c / Decimal(a) * <span class="number">100</span>, <span class="number">2</span>)))</div><div class="line"><span class="comment">#输出：  Decimal('-1.33')</span></div></pre></td></tr></table></figure>
<p>###进制转换</p>
<blockquote>
<p>有些时候需要作不同进制转换，可以参考下面的例子(%x 十六进制,%d 十进制,%o 八进制)</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">num = <span class="number">10</span></div><div class="line"><span class="keyword">print</span> <span class="string">"Hex = %x,Dec = %d,Oct = %o"</span> %(num,num,num)</div><div class="line"><span class="comment">#输出：  Hex = a,Dec = 10,Oct = 12</span></div></pre></td></tr></table></figure>
<p>###Python调用系统命令或者脚本</p>
<blockquote>
<p>使用 os.system() 调用系统命令 , 程序中无法获得到输出和返回值</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line">os.system(<span class="string">'ls -l /proc/cpuinfo'</span>)</div><div class="line"><span class="comment">#输出：  -r--r--r-- 1 root root 0  3月 29 16:53 /proc/cpuinfo  0</span></div></pre></td></tr></table></figure>
<blockquote>
<p>使用 os.popen() 调用系统命令, 程序中可以获得命令输出，但是不能得到执行的返回值</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">out = os.popen(<span class="string">"ls -l /proc/cpuinfo"</span>)</div><div class="line"><span class="keyword">print</span> out.read()</div><div class="line"><span class="comment">#输出：  -r--r--r-- 1 root root 0  3月 29 16:59 /proc/cpuinfo</span></div></pre></td></tr></table></figure>
<blockquote>
<p>使用 commands.getstatusoutput() 调用系统命令, 程序中可以获得命令输出和执行的返回值</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> commands</div><div class="line">commands.getstatusoutput(<span class="string">'ls /bin/ls'</span>)</div><div class="line"><span class="comment">#输出：  (0, '/bin/ls')</span></div></pre></td></tr></table></figure>
<p>###Python 捕获用户 Ctrl+C ,Ctrl+D 事件</p>
<blockquote>
<p>有些时候，需要在程序中捕获用户键盘事件，比如ctrl+c退出，这样可以更好的安全退出程序</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span>:</div><div class="line">    do_some_func()</div><div class="line"><span class="keyword">except</span> KeyboardInterrupt:</div><div class="line">    <span class="keyword">print</span> <span class="string">"User Press Ctrl+C,Exit"</span></div><div class="line"><span class="keyword">except</span> EOFError:</div><div class="line">    <span class="keyword">print</span> <span class="string">"User Press Ctrl+D,Exit"</span></div></pre></td></tr></table></figure>
<p>###Python 读写文件</p>
<blockquote>
<p>一次性读入文件到列表，速度较快，适用文件比较小的情况下</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">track_file = <span class="string">"track_stock.conf"</span></div><div class="line">fd = open(track_file)</div><div class="line">content_list = fd.readlines()</div><div class="line">fd.close()</div><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> content_list:</div><div class="line">    <span class="keyword">print</span> line</div></pre></td></tr></table></figure>
<blockquote>
<p>逐行读入，速度较慢,适用没有足够内存读取整个文件(文件太大)</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">fd = open(file_path)</div><div class="line">fd.seek(<span class="number">0</span>)</div><div class="line">title = fd.readline()</div><div class="line">keyword = fd.readline()</div><div class="line">uuid = fd.readline()</div><div class="line">fd.close()</div></pre></td></tr></table></figure>
<blockquote>
<p>写文件 write 与 writelines 的区别</p>
</blockquote>
<p><code>Fd.write(str)</code> : 把str写到文件中，write()并不会在str后加上一个换行符<br><code>Fd.writelines(content)</code> : 把content的内容全部写到文件中,原样写入，不会在每行后面加上任何东西</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux,shell,find拾遗]]></title>
      <url>http://percychen.com/2016/01/25/2016-01-25-shell_find_command/</url>
      <content type="html"><![CDATA[<blockquote>
<p>指定递归层数为1</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find . -maxdepth 1 -type f</div></pre></td></tr></table></figure>
<blockquote>
<p>只列出常规文件</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find ./ -type f</div></pre></td></tr></table></figure>
<blockquote>
<p>只列出文件夹</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find ./ -type d</div></pre></td></tr></table></figure>
<blockquote>
<p>找出空文件，然后删掉</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find /urpath -type f -size 0 -exec rm <span class="_">-f</span> &#123;&#125; \;</div></pre></td></tr></table></figure>
<blockquote>
<p>多命令匹配</p>
</blockquote>
<p>表达式之间默认是与的关系，如<code>-name *.c -name path*</code>,符合条件的应该是<code>path*.c</code>的文件。<br>有时候可能会遇到一条命令想查找两个格式的文件，这个时候就需要用到或关系了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find -name *.c -or -name *.h</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python 数组list笔记]]></title>
      <url>http://percychen.com/2016/01/19/2016-01-19-python_list_command/</url>
      <content type="html"><![CDATA[<p>###P数组类型：</p>
<ol>
<li><p>list 数组，初始化后可以通过特定方法动态增加元素。<br><br>定义方式：<code>arr = [元素]</code></p>
</li>
<li><p>Tuple 元组，一旦定义后，其元素个数是不能再改变的。<br><br>定义方式：<code>arr = (元素)</code></p>
</li>
<li><p>Dictionary 字典， 即是Hash数组。<br><br>定义方式：<code>arr = {元素k:v}</code></p>
</li>
</ol>
<p>###使用方法和技巧：</p>
<p>####list</p>
<blockquote>
<p>初始化</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = [<span class="number">1</span>,<span class="number">2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</div><div class="line">arr = []</div></pre></td></tr></table></figure>
<blockquote>
<p>删除数组元素</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">del</span> arr[<span class="number">0</span>]</div><div class="line"><span class="keyword">del</span> arr[<span class="number">0</span>, <span class="number">2</span>]</div><div class="line">newarr = arr[<span class="number">0</span>, <span class="number">2</span>]</div></pre></td></tr></table></figure>
<blockquote>
<p>遍历数组：</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> enumerate(arr):</div><div class="line"><span class="keyword">print</span> k, v</div></pre></td></tr></table></figure>
<blockquote>
<p>增加元素：</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">arr.append(<span class="string">'aaa'</span>)</div><div class="line">arr[<span class="number">0</span>].append(<span class="string">'aaa'</span>)<span class="comment">#二维</span></div><div class="line">arr.insert(n, 值)<span class="comment">#插入</span></div><div class="line">arr += [数组元素]</div></pre></td></tr></table></figure>
<blockquote>
<p>数组转字符串</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test=<span class="string">' '</span>.join(list)</div></pre></td></tr></table></figure>
<blockquote>
<p>数组去重，并排序</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">test=list(set(list))</div></pre></td></tr></table></figure>
<p>###Tuple 元组</p>
<blockquote>
<p>Tuple 是不可变 list，一旦创建了一个 tuple 就不能以任何方式改变它。</p>
</blockquote>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">t = (<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>, <span class="string">"d"</span>, <span class="string">"e"</span>) <span class="comment">#[1] 用小括号包围来定义</span></div><div class="line">t[<span class="number">0</span>] <span class="comment">#[2] 直接列出某下标的元素</span></div><div class="line"><span class="string">'a'</span></div><div class="line">t[<span class="number">-1</span>] <span class="comment">#[3] 负数表示，从后面倒数的索引 -1 为倒数第一个， 0是顺数第一个</span></div><div class="line"><span class="string">'example'</span></div><div class="line">t[<span class="number">1</span>:<span class="number">3</span>] <span class="comment">#[4] 这里 1:3 是 i&gt;=1 and i&lt;3 的区间</span></div><div class="line">(<span class="string">'b'</span>, <span class="string">'mpilgrim'</span>)</div></pre></td></tr></table></figure>
<p>####Tuple 没有的方法：</p>
<ul>
<li>不能向 tuple 增加元素，没有 append 、 extend 、insert 等方法。</li>
<li>不能从 tuple 删除元素，没有 remove 或 pop 方法。</li>
<li>不能在 tuple 中查找元素，没有 index 方法（index是查找而不是索引，索引直接用下标即可，如：t[0]）。</li>
</ul>
<p>####使用 tuple 的好处：</p>
<ul>
<li>Tuple 比 list 操作速度快。如果您定义了一个值的常量集, 并且唯一要用它做的是不断地遍历它, 请使用 tuple 代替 list。</li>
<li>如果对不需要修改的数据进行 “写保护”, 可以使代码更安全。使用 tuple 而不是 list 如同拥有一个隐含的 assert 语句, 说明这一数据是常量。如果必须要改变这些值, 则需要执行 tuple 到 list 的转换 (需要使用一个特殊的函数)。</li>
<li>还记得我说过 dictionary keys 可以是字符串, 整数和 “其它几种类型”吗? Tuples 就是这些类型之一。 Tuples 可以在 dictionary 中被用做 key, 但是 list 不行。实际上, 事情要比这更复杂。Dictionary key 必须是不可变的。Tuple 本身是不可改变的, 但是如果您有一个 list 的 tuple, 那就认为是可变的了， 用做 dictionary key 就是不安全的。只有字符串, 整数或其它对 dictionary 安全的 tuple 才可以用作 dictionary key。</li>
</ul>
<p><strong>Tuple 可以转换成 list， 反之亦然。</strong></p>
<p>互相转换方式为：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">t = list( t )</div><div class="line">arr = tuple( arr )</div></pre></td></tr></table></figure>
<p>###Dictionary (哈希数组)词典数组</p>
<blockquote>
<p>Dictionary 的用法比较简单，它可以存储任意值，并允许是不同类型的值，下面实例来说明：</p>
</blockquote>
<p>下面例子中 a 是整数， b 是字符串, c 是数组，这个例子充分说明哈希数组的适用性。</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">dict_arr = &#123;<span class="string">'a'</span>: <span class="number">100</span>, <span class="string">'b'</span>:<span class="string">'boy'</span>, <span class="string">'c'</span>:[<span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>]&#125;</div><div class="line"><span class="comment">#可以直接增加一个元素，如果同名，则会改变原来的key的元素的值</span></div><div class="line">dict_arr[<span class="string">'d'</span>] = <span class="string">'dog'</span></div><div class="line"><span class="comment">#输出所有的key</span></div><div class="line"><span class="keyword">print</span> dict_arr.keys()</div><div class="line"><span class="comment">#输出所有的value</span></div><div class="line"><span class="keyword">print</span> dict_arr.values()</div><div class="line"><span class="comment">#遍历数组</span></div><div class="line"><span class="keyword">import</span> types</div><div class="line"><span class="keyword">for</span> k <span class="keyword">in</span> dict_arr:</div><div class="line">v = dict_arr.get(k)</div><div class="line"><span class="keyword">if</span> type(v) <span class="keyword">is</span> types.ListType: <span class="comment">#如果数据是list类型，继续遍历</span></div><div class="line"><span class="keyword">print</span> k, <span class="string">'---'</span></div><div class="line"><span class="keyword">for</span> kk, vv <span class="keyword">in</span> enumerate(v):</div><div class="line"><span class="keyword">print</span> kk, vv</div><div class="line"><span class="keyword">print</span> <span class="string">'---'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line"><span class="keyword">print</span> dict_arr.get(k)</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git 常见操作笔记]]></title>
      <url>http://percychen.com/2016/01/09/2016-01-09-git_command/</url>
      <content type="html"><![CDATA[<p>问题：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote add origin xxxxxxx</div><div class="line">fatal: remote origin already exists.</div></pre></td></tr></table></figure>
<p>解决:</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote remove origin</div></pre></td></tr></table></figure>
<p>问题：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git push -u origin master</div><div class="line">fatal: <span class="string">'origin'</span> does not appear to be a git repository</div><div class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</div></pre></td></tr></table></figure>
<h2 id="同步master修改："><a href="#同步master修改：" class="headerlink" title="同步master修改："></a>同步master修改：</h2><ol>
<li>master修改后， 使用 <code>git log</code> 记下<code>commit id</code></li>
<li>切换到dev分支:<code>git checkout dev</code></li>
<li><code>git merge [id]</code> 即可</li>
</ol>
<h2 id="去掉-git-push时输入账号密码"><a href="#去掉-git-push时输入账号密码" class="headerlink" title="去掉 git push时输入账号密码"></a>去掉 git push时输入账号密码</h2><blockquote>
<p><strong>linux</strong></p>
<ul>
<li>在~/下， touch创建文件 .git-credentials</li>
</ul>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch .git-credentials</div></pre></td></tr></table></figure>
<blockquote>
<p>用vim编辑此文件</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim .git-credentials</div></pre></td></tr></table></figure>
<blockquote>
<p>输入内容格式：</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">https://&#123;username&#125;:&#123;password&#125;@github.com</div><div class="line">example: 比如 https://aoeddklj:1233ds@github.com</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li><p>在终端下执行  git config –global credential.helper store</p>
</li>
<li><p>可以看到~/.gitconfig文件，会多了一项：</p>
</li>
</ul>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[credential]</div><div class="line">helper = store</div></pre></td></tr></table></figure>
<blockquote>
<p>这个时候你就不需要输入密码了</p>
</blockquote>
<h2 id="撤销git-add"><a href="#撤销git-add" class="headerlink" title="撤销git add"></a>撤销git add</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes to be committed:</div><div class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</div><div class="line"></div><div class="line">        modified:   README.md</div><div class="line">        modified    test.cpp</div></pre></td></tr></table></figure>
<p>就在 “Changes to be committed” 下面，括号中有提示，可以使用 git reset HEAD <file>… 的方式取消暂存</file></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ git reset HEAD test.cpp</div><div class="line">Unstaged changes after reset:</div><div class="line">M       test.cpp</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes to be committed:</div><div class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</div><div class="line"></div><div class="line">        modified:   README.md</div><div class="line"></div><div class="line">Changes not staged <span class="keyword">for</span> commit:</div><div class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</div><div class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</div><div class="line"></div><div class="line">        modified:   test.cpp</div></pre></td></tr></table></figure>
<h2 id="代码回滚到上个版本，并提交git"><a href="#代码回滚到上个版本，并提交git" class="headerlink" title="代码回滚到上个版本，并提交git"></a>代码回滚到上个版本，并提交git</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git revert HEAD</div><div class="line">git push origin master</div></pre></td></tr></table></figure>
<ul>
<li>取消对文件的修改。还原到最近的版本，废弃本地做的修改。</li>
</ul>
<p><code>git checkout -- &lt;file&gt;</code></p>
<ul>
<li>取消已经暂存的文件。即，撤销先前”git add”的操作</li>
</ul>
<p><code>git reset HEAD &lt;file&gt;...</code></p>
<ul>
<li>修改最后一次提交。用于修改上一次的提交信息，或漏提交文件等情况。</li>
</ul>
<p><code>git commit --amend</code></p>
<ul>
<li>回退所有内容到上一个版本</li>
</ul>
<p><code>git reset HEAD^</code></p>
<ul>
<li>回退a.py这个文件的版本到上一个版本</li>
</ul>
<p><code>git reset HEAD^ a.py</code></p>
<ul>
<li>向前回退到第3个版本</li>
</ul>
<p><code>git reset –soft HEAD~3</code></p>
<ul>
<li>将本地的状态回退到和远程的一样</li>
</ul>
<p><code>git reset –hard origin/master</code></p>
<ul>
<li>回退到某个版本</li>
</ul>
<p><code>git reset 057d</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell 数组操作]]></title>
      <url>http://percychen.com/2016/01/08/2016-01-08-shellarrary/</url>
      <content type="html"><![CDATA[<p>将一个字符串赋值给数组</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">str1=<span class="string">'test1 test2 test3 test4'</span></div><div class="line">array=(<span class="variable">$str1</span>)    <span class="comment">#数组赋值</span></div><div class="line">length=<span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment">#数组长度</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]&#125;</span> <span class="comment">#输出数组全部元素</span></div><div class="line">array[1]=5      <span class="comment">#向数组的某个元素赋值和标c的语法一样</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]:1:2&#125;</span>        <span class="comment">#输出的是array[0]和array[1]的值</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]:2&#125;</span>      <span class="comment">#输出数组第三个元素以后的值</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]::2&#125;</span>     <span class="comment">#输出数组下标小于2的值</span></div><div class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;#array[3]&#125;</span>     <span class="comment">#取得元素3的长度</span></div><div class="line"><span class="built_in">unset</span> array     <span class="comment">#清除array</span></div><div class="line">array=      <span class="comment">#清空array，赋给array空值</span></div></pre></td></tr></table></figure>
<p>###遍历数组</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> ((i=0;i&lt;<span class="variable">$&#123;#array[@]&#125;</span>;i++))</div><div class="line"><span class="keyword">do</span></div><div class="line">   <span class="built_in">echo</span> <span class="variable">$&#123;array[$i]&#125;</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>###利用数组切割字符串</p>
<p>数组默认的分隔符是空格，如果想改变默认的分隔符，用下面的方法</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">str=<span class="string">"abd#ddd#ff"</span></div><div class="line">str2=($(<span class="built_in">echo</span> <span class="variable">$str</span>|tr <span class="string">'#'</span> <span class="string">' '</span>))</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python的文件操作]]></title>
      <url>http://percychen.com/2016/01/08/2016-01-08-pythonfileio/</url>
      <content type="html"><![CDATA[<p>Python提供了必要的函数和方法进行默认情况下的文件基本操作。你可以用file对象做大部分的文件操作。</p>
<p>####open()</p>
<blockquote>
<p>你必须先用Python内置的open()函数打开一个文件，创建一个file对象，相关的辅助方法才可以调用它进行读写。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file object = open(file_name [, access_mode][, buffering])</div></pre></td></tr></table></figure>
<p>各个参数的细节如下：</p>
<p><code>file_name</code>：file_name变量是一个包含了你要访问的文件名称的字符串值。</p>
<p><code>access_mode</code>：access_mode决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</p>
<p><code>buffering</code>:如果buffering的值被设为0，就不会有寄存。如果buffering的值取1，访问文件时会寄存行。如果将buffering的值设为大于1的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。</p>
<p>不同模式打开文件的完全列表：</p>
<table>
<thead>
<tr>
<th>模式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>r</td>
<td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>
</tr>
<tr>
<td>rb</td>
<td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td>
</tr>
<tr>
<td>r+</td>
<td>打开一个文件用于读写。文件指针将会放在文件的开头。</td>
</tr>
<tr>
<td>rb+</td>
<td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td>
</tr>
<tr>
<td>w</td>
<td>打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>wb</td>
<td>以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>w+</td>
<td>打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>wb+</td>
<td>以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>a</td>
<td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>
</tr>
<tr>
<td>ab</td>
<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>
</tr>
<tr>
<td>a+</td>
<td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>
</tr>
<tr>
<td>ab+</td>
<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>
</tr>
</tbody>
</table>
<p>####File对象的属性</p>
<p>以下是和file对象相关的所有属性的列表：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>file.closed</td>
<td>true如果文件已被关闭，否则返回false。</td>
</tr>
<tr>
<td>file.mode</td>
<td>被打开文件的访问模式。</td>
</tr>
<tr>
<td>file.name</td>
<td>文件的名称。</td>
</tr>
<tr>
<td>file.softspace</td>
<td>如果用print输出后，必须跟一个空格符，则返回false。否则返回true。</td>
</tr>
</tbody>
</table>
<p>实例：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line">fo = open(<span class="string">"foo.txt"</span>, <span class="string">"wb"</span>)</div><div class="line"><span class="keyword">print</span> <span class="string">"Name of the file: "</span>, fo.name</div><div class="line"><span class="keyword">print</span> <span class="string">"Closed or not : "</span>, fo.closed</div><div class="line"><span class="keyword">print</span> <span class="string">"Opening mode : "</span>, fo.mode</div><div class="line"><span class="keyword">print</span> <span class="string">"Softspace flag : "</span>, fo.softspace</div></pre></td></tr></table></figure>
<p>以上实例输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Name of the file:  foo.txt</div><div class="line">Closed or not :  False</div><div class="line">Opening mode :  wb</div><div class="line">Softspace flag :  0</div></pre></td></tr></table></figure>
<p>####Close()方法</p>
<blockquote>
<p>File对象的close（）方法刷新缓冲区里任何还没写入的信息，并关闭该文件，这之后便不能再进行写入。<br>当一个文件对象的引用被重新指定给另一个文件时，Python会关闭之前的文件。用close（）方法关闭文件是一个很好的习惯。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fileObject.close();</div></pre></td></tr></table></figure>
<p>###读写文件：</p>
<blockquote>
<p>file对象提供了一系列方法，能让我们的文件访问更轻松。来看看如何使用read()和write()方法来读取和写入文件。</p>
</blockquote>
<p>####Write()方法</p>
<blockquote>
<p>Write()方法可将任何字符串写入一个打开的文件。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。</p>
</blockquote>
<p><strong>Write()方法不在字符串的结尾不添加换行符(‘\n’)：</strong></p>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fileObject.write(string);</div></pre></td></tr></table></figure>
<p>####read()方法</p>
<blockquote>
<p>read（）方法从一个打开的文件中读取一个字符串。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fileObject.read([count]);</div></pre></td></tr></table></figure>
<p>###文件位置：</p>
<p>####tell()</p>
<blockquote>
<p>告诉你文件内的当前位置；换句话说，下一次的读写会发生在文件开头这么多字节之后：</p>
</blockquote>
<p>####seek（offset [,from]）</p>
<blockquote>
<p>方法改变当前文件的位置。Offset变量表示要移动的字节数。From变量指定开始移动字节的参考位置。</p>
</blockquote>
<p>如果from被设为0，这意味着将文件的开头作为移动字节的参考位置。如果设为1，则使用当前的位置作为参考位置。如果它被设为2，那么该文件的末尾将作为参考位置。</p>
<p>例子：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></div><div class="line">fo = open(<span class="string">"/tmp/foo.txt"</span>, <span class="string">"r+"</span>)</div><div class="line">str = fo.read(<span class="number">10</span>);</div><div class="line"><span class="keyword">print</span> <span class="string">"Read String is : "</span>, str</div><div class="line">position = fo.tell();</div><div class="line"><span class="keyword">print</span> <span class="string">"Current file position : "</span>, position</div><div class="line">position = fo.seek(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">str = fo.read(<span class="number">10</span>);</div><div class="line"><span class="keyword">print</span> <span class="string">"Again read String is : "</span>, str</div><div class="line">fo.close()</div></pre></td></tr></table></figure>
<p>以上实例输出结果：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Read String is :  Python is</div><div class="line">Current file position :  10</div><div class="line">Again <span class="built_in">read</span> String is :  Python is</div></pre></td></tr></table></figure>
<p>###重命名和删除文件</p>
<blockquote>
<p>Python的os模块提供了帮你执行文件处理操作的方法，比如重命名和删除文件。<br>要使用这个模块，你必须先导入它，然后可以调用相关的各种功能。</p>
</blockquote>
<p>####rename()方法：</p>
<p>rename()方法需要两个参数，当前的文件名和新文件名。<br>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.rename(current_file_name, new_file_name)</div></pre></td></tr></table></figure>
<p>####remove()方法</p>
<p>你可以用remove()方法删除文件，需要提供要删除的文件名作为参数。<br>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.remove(file_name)</div></pre></td></tr></table></figure>
<p>###Python里的目录：</p>
<blockquote>
<p>所有文件都包含在各个不同的目录下，不过Python也能轻松处理。os模块有许多方法能帮你创建，删除和更改目录。</p>
</blockquote>
<p>####mkdir()方法</p>
<blockquote>
<p>可以使用os模块的mkdir()方法在当前目录下创建新的目录们。你需要提供一个包含了要创建的目录名称的参数。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.mkdir(<span class="string">"newdir"</span>)</div></pre></td></tr></table></figure>
<h4 id="chdir-方法"><a href="#chdir-方法" class="headerlink" title="chdir()方法"></a>chdir()方法</h4><p>可以用chdir()方法来改变当前的目录。chdir()方法需要的一个参数是你想设成当前目录的目录名称。<br>语法：<br>os.chdir(“newdir”)</p>
<p>####getcwd()方法：</p>
<p>getcwd()方法显示当前的工作目录。<br>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.getcwd()</div></pre></td></tr></table></figure>
<h4 id="rmdir-方法"><a href="#rmdir-方法" class="headerlink" title="rmdir()方法"></a>rmdir()方法</h4><blockquote>
<p>rmdir()方法删除目录，目录名称以参数传递。<br>在删除这个目录之前，它的所有内容应该先被清除。</p>
</blockquote>
<p>语法：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.rmdir(<span class="string">'dirname'</span>)</div></pre></td></tr></table></figure>
<p>###读取文件内容</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">f = open(<span class="string">"foo.txt"</span>)</div><div class="line">line = f.readline()</div><div class="line"><span class="keyword">while</span> line:</div><div class="line">    <span class="keyword">print</span> line</div><div class="line">    line = f.readline()</div><div class="line">f.close()</div></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> line <span class="keyword">in</span> open(<span class="string">"foo.txt"</span>):</div><div class="line">    <span class="keyword">print</span> line</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[test页面]]></title>
      <url>http://percychen.com/2015/12/31/2015-12-31-testmd/</url>
      <content type="html"><![CDATA[<h1 id="代码分行"><a href="#代码分行" class="headerlink" title="代码分行"></a>代码分行</h1><p>测试 表格</p>
<table>
<thead>
<tr>
<th>test</th>
<th>test</th>
</tr>
</thead>
<tbody>
<tr>
<td>ddd</td>
<td>ddd</td>
</tr>
<tr>
<td>sss</td>
<td>sss</td>
</tr>
<tr>
<td>aaa</td>
<td>sss</td>
</tr>
</tbody>
</table>
<p>测试代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">d0  fd55fc8dfda0fa57  d1  0181ffdfff23004b</div><div class="line">d2  7e37e43c8800759c  d3  7e37e43c8800759c</div><div class="line">d4  4078100000000000  d5  3fe62e42fefa39ef</div><div class="line">d6  3fe999999999999a  d7  bfd269621134db92</div><div class="line">d8  7ff0000000000000  d9  40f7700000000000</div><div class="line">d10 0000000000000000  d11 0000000000000000</div><div class="line">d12 0000000000000000  d13 0000000000000000</div><div class="line">d14 0000000000000000  d15 0000000000000000</div><div class="line">d16 4035000000000000  d17 407b900000000000</div><div class="line">d18 3e66376972bea4d0  d19 bf92e336b6f84800</div><div class="line">d20 400bb5c66d6df090  d21 3ea8000000000000</div></pre></td></tr></table></figure>
<p>文章分行 代码分行</p>
<p>hhhhh<br>ddddd<br><br>dddd</p>
<p>cccc</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[python备忘笔记]]></title>
      <url>http://percychen.com/2015/12/30/2015-12-30-python_note/</url>
      <content type="html"><![CDATA[<h2 id="python的文件操作"><a href="#python的文件操作" class="headerlink" title="python的文件操作"></a>python的文件操作</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>os.environ[‘HOME’]</td>
<td>获取home目录</td>
</tr>
<tr>
<td>os.rename(oldname,newname)</td>
<td>重命名文件</td>
</tr>
<tr>
<td>os.remove()</td>
<td>删除文件</td>
</tr>
<tr>
<td>os.unlink()</td>
<td>删除link文件</td>
</tr>
<tr>
<td>os.symlink()</td>
<td>创建符号链接</td>
</tr>
<tr>
<td>os.utime()</td>
<td>更新时间戳</td>
</tr>
<tr>
<td>os.tmpfile()</td>
<td>创建并打(‘w’+’b’)一个新的临时文件</td>
</tr>
<tr>
<td>os.walk()</td>
<td>生成一个目录树下所有文件名</td>
</tr>
<tr>
<td>os.chdir()</td>
<td>修改当前工作目录</td>
</tr>
<tr>
<td>os.chroot()</td>
<td>修改当前进程的根目录</td>
</tr>
<tr>
<td>os.listdir()</td>
<td>列出指定目录的文件</td>
</tr>
<tr>
<td>os.getcwd()</td>
<td>返回一个unicode对象的当前工作目录</td>
</tr>
<tr>
<td>os.mkdir()</td>
<td>创建目录</td>
</tr>
<tr>
<td>os.makedirs(path)</td>
<td>递归创建目录</td>
</tr>
<tr>
<td>os.rmdir()</td>
<td>删除空目录</td>
</tr>
<tr>
<td>os.removedirs()</td>
<td>递归删除空目录</td>
</tr>
<tr>
<td>os.access()</td>
<td>校验权限模式</td>
</tr>
<tr>
<td>os.chmod()</td>
<td>改变权限模式</td>
</tr>
<tr>
<td>os.chown()</td>
<td>改变拥有者</td>
</tr>
<tr>
<td>os.umask()</td>
<td>设置默认权限模式</td>
</tr>
</tbody>
</table>
<h2 id="shutil类"><a href="#shutil类" class="headerlink" title="shutil类"></a>shutil类</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>shutil.rmtree()</td>
<td>删除目录树</td>
</tr>
<tr>
<td>shutil.copyfile(src, dst)</td>
<td>文件到文件的拷贝，其中dst必须是一个文件</td>
</tr>
<tr>
<td>shutil.copy(src, dst)</td>
<td>文件拷贝，src必须是一个文件，dst可以是一个文件或者目录</td>
</tr>
<tr>
<td>shutil.copy2(src, dst)</td>
<td>同上，但是拷贝的文件带着原有属性，类似于Linux系统里的cp -p命令</td>
</tr>
<tr>
<td>shutil.move(src, dst)</td>
<td>移动一个文件或者目录到指定的位置，src和dst都可以是文件或者目录</td>
</tr>
<tr>
<td>shutil.copytree(src, dst, symlinks=False, ignore=None)</td>
<td>目录的复制</td>
</tr>
</tbody>
</table>
<h2 id="os-path类"><a href="#os-path类" class="headerlink" title="os.path类"></a>os.path类</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>os.path.isfile(‘test.txt’)</td>
<td>如果不存在就返回False</td>
</tr>
<tr>
<td>os.path.exists(directory)</td>
<td>如果目录不存在就返回False</td>
</tr>
<tr>
<td>os.path.basename()</td>
<td>去掉路径，返回文件名</td>
</tr>
<tr>
<td>os.path.dirname()</td>
<td>去掉文件名，返回目录路径</td>
</tr>
<tr>
<td>os.path.join()</td>
<td>将参数组成路径</td>
</tr>
<tr>
<td>os.path.split()</td>
<td>将路径转换成元组</td>
</tr>
<tr>
<td>os.path.getsize()</td>
<td>返回文件大小</td>
</tr>
<tr>
<td>os.path.isabs()</td>
<td>路径是否为绝对路径</td>
</tr>
<tr>
<td>os.path.islink()</td>
<td>是否为链接文件</td>
</tr>
<tr>
<td>os.path.abspath()</td>
<td>获取对象的绝对路径</td>
</tr>
</tbody>
</table>
<h2 id="sys类函数"><a href="#sys类函数" class="headerlink" title="sys类函数"></a>sys类函数</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>sys.exit(0)</td>
<td>退出</td>
</tr>
<tr>
<td>sys.path[0]</td>
<td>当前路劲</td>
</tr>
<tr>
<td>sys.path</td>
<td>系统环境变量</td>
</tr>
</tbody>
</table>
<h2 id="platform类"><a href="#platform类" class="headerlink" title="platform类"></a>platform类</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>platform.python_version()</td>
<td>获取Python版本</td>
</tr>
<tr>
<td>print platform.architecture()</td>
<td>获取操作系统可执行程序的结构，，(’32bit’, ‘WindowsPE’)</td>
</tr>
<tr>
<td>print platform.node()</td>
<td>计算机的网络名称，’acer-PC’</td>
</tr>
<tr>
<td>print platform.platform()</td>
<td>获取操作系统名称及版本号，’Windows-7-6.1.7601-SP1′</td>
</tr>
<tr>
<td>print platform.processor()</td>
<td>计算机处理器信息，’Intel64 Family 6 Model 42 Stepping 7, GenuineIntel’</td>
</tr>
<tr>
<td>print platform.python_build()</td>
<td>获取操作系统中Python的构建日期</td>
</tr>
<tr>
<td>print platform.python_compiler()</td>
<td>获取系统中python解释器的信息</td>
</tr>
<tr>
<td>print platform.version()</td>
<td>获取操作系统的版本</td>
</tr>
<tr>
<td>print platform.uname()</td>
<td>包含上面所有的信息汇总</td>
</tr>
</tbody>
</table>
<h2 id="python类型转换"><a href="#python类型转换" class="headerlink" title="python类型转换"></a>python类型转换</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>int(x [,base ])</td>
<td>将x转换为一个整数</td>
</tr>
<tr>
<td>long(x [,base ])</td>
<td>将x转换为一个长整数</td>
</tr>
<tr>
<td>float(x )</td>
<td>将x转换到一个浮点数</td>
</tr>
<tr>
<td>complex(real [,imag ])</td>
<td>创建一个复数</td>
</tr>
<tr>
<td>str(x )</td>
<td>将对象 x 转换为字符串</td>
</tr>
<tr>
<td>repr(x )</td>
<td>将对象 x 转换为表达式字符串</td>
</tr>
<tr>
<td>eval(str )</td>
<td>用来计算在字符串中的有效Python表达式,并返回一个对象</td>
</tr>
<tr>
<td>tuple(s )</td>
<td>将序列 s 转换为一个元组</td>
</tr>
<tr>
<td>list(s )</td>
<td>将序列 s 转换为一个列表</td>
</tr>
<tr>
<td>chr(x )</td>
<td>将一个整数转换为一个字符</td>
</tr>
<tr>
<td>unichr(x )</td>
<td>将一个整数转换为Unicode字符</td>
</tr>
<tr>
<td>ord(x )</td>
<td>将一个字符转换为它的整数值</td>
</tr>
<tr>
<td>hex(x )</td>
<td>将一个整数转换为一个十六进制字符串</td>
</tr>
<tr>
<td>oct(x )</td>
<td>将一个整数转换为一个八进制字符串</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>操作</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>s + r</td>
<td>序列连接</td>
</tr>
<tr>
<td>s <em> n , n </em> s</td>
<td>s的 n 次拷贝,n为整数</td>
</tr>
<tr>
<td>s % d</td>
<td>字符串格式化(仅字符串)</td>
</tr>
<tr>
<td>s[i]</td>
<td>索引</td>
</tr>
<tr>
<td>s[i :j ]</td>
<td>切片</td>
</tr>
<tr>
<td>x in s , x not in s</td>
<td>从属关系</td>
</tr>
<tr>
<td>for x in s :</td>
<td>迭代</td>
</tr>
<tr>
<td>len(s)</td>
<td>长度</td>
</tr>
<tr>
<td>min(s)</td>
<td>最小元素</td>
</tr>
<tr>
<td>max(s)</td>
<td>最大元素</td>
</tr>
<tr>
<td>s[i ] = x</td>
<td>为s[i]重新赋值</td>
</tr>
<tr>
<td>s[i :j ] = r</td>
<td>将列表片段重新赋值</td>
</tr>
<tr>
<td>del s[i ]</td>
<td>删除列表中一个元素</td>
</tr>
<tr>
<td>del s[i :j ]</td>
<td>删除列表中一个片段</td>
</tr>
</tbody>
</table>
<h2 id="数值操作："><a href="#数值操作：" class="headerlink" title="数值操作："></a>数值操作：</h2><table>
<thead>
<tr>
<th>操作</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>x &lt;&lt; y</td>
<td>左移</td>
</tr>
<tr>
<td>x &gt;&gt; y</td>
<td>右移</td>
</tr>
<tr>
<td>x &amp; y</td>
<td>按位与</td>
</tr>
<tr>
<td>x</td>
<td>y</td>
<td>按位或</td>
</tr>
<tr>
<td>x ^ y</td>
<td>按位异或 (exclusive or)</td>
</tr>
<tr>
<td>~x</td>
<td>按位翻转</td>
</tr>
<tr>
<td>x + y</td>
<td>加</td>
</tr>
<tr>
<td>x - y</td>
<td>减</td>
</tr>
<tr>
<td>x * y</td>
<td>乘</td>
</tr>
<tr>
<td>x / y</td>
<td>常规除</td>
</tr>
<tr>
<td>x // y</td>
<td>地板除</td>
</tr>
<tr>
<td>x ** y</td>
<td>乘方 (xy )</td>
</tr>
<tr>
<td>x % y</td>
<td>取模 (x mod y )</td>
</tr>
<tr>
<td>-x</td>
<td>改变操作数的符号位</td>
</tr>
<tr>
<td>+x</td>
<td>什么也不做</td>
</tr>
<tr>
<td>~x</td>
<td>~x=-(x+1)</td>
</tr>
<tr>
<td>abs(x )</td>
<td>绝对值</td>
</tr>
<tr>
<td>divmod(x ,y )</td>
<td>返回 (int(x / y ), x % y )</td>
</tr>
<tr>
<td>pow(x ,y [,modulo ])</td>
<td>返回 (x ** y ) x % modulo</td>
</tr>
<tr>
<td>round(x ,[n])</td>
<td>四舍五入，n为小数点位数</td>
</tr>
<tr>
<td>x &lt; y</td>
<td>小于</td>
</tr>
<tr>
<td>x &gt; y</td>
<td>大于</td>
</tr>
<tr>
<td>x == y</td>
<td>等于</td>
</tr>
<tr>
<td>x != y</td>
<td>不等于(与&lt;&gt;相同)</td>
</tr>
<tr>
<td>x &gt;= y</td>
<td>大于等于</td>
</tr>
<tr>
<td>x &lt;= y</td>
<td>小于等于</td>
</tr>
</tbody>
</table>
<h2 id="filter函数的使用"><a href="#filter函数的使用" class="headerlink" title="filter函数的使用"></a>filter函数的使用</h2><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">testtext = ‘abcd123.;!<span class="number">4567</span>ef[.,]gh’</div><div class="line"></div><div class="line"><span class="comment">#只保留数字</span></div><div class="line">filter(str.isdigit, testtext)</div><div class="line">‘<span class="number">1234567</span>’</div><div class="line"></div><div class="line"><span class="comment">#只保留字母</span></div><div class="line">filter(str.isalpha, testtext)</div><div class="line">‘abcdefgh’</div><div class="line"></div><div class="line"><span class="comment">#只保留字母和数字</span></div><div class="line">filter(str.isalnum, testtext)</div><div class="line">‘abcd1234567efgh’</div></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre><code>import ConfigParser
import string, os, sys
</code></pre><p>初始化：</p>
<pre><code>cf = ConfigParser.ConfigParser()
cf.read(&quot;test.conf&quot;)
</code></pre><p>封装:</p>
<pre><code>print &apos;section:&apos;, cf.sections() # 返回所有的section
print &apos;options:&apos;,cf.options(&quot;db&quot;) #返回db的所有选项
print &apos;db:&apos;, cf.items(&quot;db&quot;)#返回db的所有选项和名称
</code></pre><p>可以按照类型读取出来</p>
<pre><code>db_host = cf.get(&quot;db&quot;, &quot;db_host&quot;)
db_port = cf.getint(&quot;db&quot;, &quot;db_port&quot;)
</code></pre><p>修改一个值，再写回去</p>
<pre><code>cf.set(&quot;db&quot;, &quot;db_pass&quot;, &quot;zhaowei&quot;)
cf.write(open(&quot;test.conf&quot;, &quot;w&quot;))
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[php环境搭建错误解决]]></title>
      <url>http://percychen.com/2015/12/19/2015-12-19-php_build_note/</url>
      <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题:"></a>问题:</h2><p>apr下载地址: <a href="http://archive.apache.org/dist/apr/" target="_blank" rel="external">点我下载</a></p>
<h2 id="解决apr-not-found问题"><a href="#解决apr-not-found问题" class="headerlink" title="解决apr not found问题"></a>解决apr not found问题</h2><pre><code>tar -zxf apr-1.4.5.tar.gz  
cd  apr-1.4.5  
./configure --prefix=/usr/local/apr  
make &amp;&amp; make install  
</code></pre><h2 id="解决APR-util-not-found问题"><a href="#解决APR-util-not-found问题" class="headerlink" title="解决APR-util not found问题"></a>解决APR-util not found问题</h2><pre><code>tar -zxf apr-util-1.3.12.tar.gz  
cd apr-util-1.3.12  
./configure --prefix=/usr/local/apr-util -with-apr=/usr/local/apr/bin/apr-1-config  
make &amp;&amp; make install
</code></pre><p>最后编译apache2的时候加上：</p>
<pre><code>./configure --enable-so --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util/
</code></pre><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><pre><code>sudo /usr/local/apache2/bin/apachectl start
httpd: Could not determine the server&apos;s fully qualified domain name, using 127.0.0.1 for ServerName
httpd (pid 20183) already running
</code></pre><p>解决：</p>
<pre><code>vim /usr/local/apache2/conf/httpd.conf
</code></pre><p>将 ServerName www.example.com:80 注释符号#去掉就行了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sublime text config 配置]]></title>
      <url>http://percychen.com/2015/12/03/2015-12-03-sublime_text_config/</url>
      <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;auto_find_in_selection&quot;: true,</div><div class="line">    &quot;bold_folder_labels&quot;: true,</div><div class="line">    &quot;caret_extra_bottom&quot;: 0,</div><div class="line">    &quot;caret_extra_top&quot;: 0,</div><div class="line">    &quot;caret_extra_width&quot;: 0,</div><div class="line">    &quot;caret_style&quot;: &quot;phase&quot;,</div><div class="line">    &quot;color_scheme&quot;: &quot;Packages/Theme - Spacegray/base16-ocean.dark.tmTheme&quot;,</div><div class="line">    &quot;drag_text&quot;: false,</div><div class="line">    &quot;draw_white_space&quot;: &quot;all&quot;,</div><div class="line">    &quot;font_face&quot;: &quot;Inconsolata&quot;,//字体类型,windows需要自己安装</div><div class="line">    &quot;font_size&quot;: 12,//字体大小</div><div class="line">    &quot;highlight_line&quot;: true,//高亮正在编辑的行</div><div class="line">    &quot;highlight_modified_tabs&quot;: true,//高亮正在编辑的tab</div><div class="line">    &quot;ignored_packages&quot;:</div><div class="line">    [</div><div class="line">        &quot;AndroidSnippets&quot;,</div><div class="line">        &quot;Markdown Preview&quot;,</div><div class="line">        &quot;sublime-github&quot;</div><div class="line">    ],</div><div class="line">    &quot;line_padding_bottom&quot;: 1,//行距-距底部</div><div class="line">    &quot;line_padding_top&quot;: 1,//行距-距顶部</div><div class="line">    &quot;soda_classic_tabs&quot;: true,</div><div class="line">    &quot;soda_folder_icons&quot;: true,</div><div class="line">    &quot;theme&quot;: &quot;Spacegray.sublime-theme&quot;,</div><div class="line">    &quot;trim_trailing_white_space_on_save&quot;: true,//保存的时候去除行尾的空</div><div class="line">    &quot;wide_caret&quot;: true,//加宽光标</div><div class="line">    &quot;tab_size&quot;:4,//tab键设置为4个字符</div><div class="line">    &quot;translate_tabs_to_spaces&quot;:true,//用空格代替tab键</div><div class="line">    &quot;default_encoding&quot;: &quot;UTF-8&quot;,//设置默认编码</div><div class="line">    &quot;default_line_ending&quot;: &quot;Unix&quot;,//默认换行符为unix换行符</div><div class="line">    &quot;word_wrap&quot;: true</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="常用插件以及介绍"><a href="#常用插件以及介绍" class="headerlink" title="常用插件以及介绍"></a>常用插件以及介绍</h2><p><strong>SideBarEnhancements</strong></p>
<p>SideBarEnhancements 扩展了侧边栏中菜单选项的数量，从而提升你的工作效率。诸如”New file” 和 “Duplicate” 这样的选项对于 ST3 来说实在是太重要了, 我甚至觉得 ST3 本来就应该提供这些功能。而且仅凭 “Delete” 这一个功能就让这个插件值得下载。这个功能将你会在你删除文件的时候把它放入回收站。虽然这个功能乍一看没什么用，但是当你没有使用这样的功能而彻底删除了一个文件的时候，除非你用了版本管理软件，否则你将很难恢复这个文件。</p>
<p><strong>Anaconda</strong></p>
<p>Anaconda 是一个终极 Python 插件。它为 ST3 增添了多项 IDE 类似的功能，例如：<br></p>
<p><code>Autocompletion</code> 自动完成，该选项默认开启，同时提供多种配置选项。<br><br><code>Code linting</code> 使用支持 pep8 标准的 PyLint 或者 PyFlakes。因为我个人使用的是另外的 linting 工具，所以我会在 Anaconda 的配置文件 <code>Anaconda.sublime-settings</code> 中将 linting 完全禁用。操作如下: <code>Sublime &gt; Preferences &gt; Package Settings &gt; Anaconda &gt; Settings – User： {&quot;anaconda_linting&quot;: false}</code><br><br><code>McCabe code complexity checker</code> 让你可以在特定的文件中使用 McCabe complexity checker. 如果你对软件复杂度检查工具不太熟悉的话，请务必先浏览上边的链接。<br><br><code>Goto Definitions</code> 能够在你的整个工程中查找并且显示任意一个变量，函数，或者类的定义。<br><br><code>Find Usage</code> 能够快速的查找某个变量，函数或者类在某个特定文件中的什么地方被使用了。<br><br><code>Show Documentation</code>： 能够显示一个函数或者类的说明性字符串(当然，是在定义了字符串的情况下)<br></p>
<p>你可以在这里，或者通过 ST3 的 Package Settings: Sublime Text &gt; Preferences &gt; Package Settings &gt; Anaconda &gt; README 来查看所有这些特性。<br></p>
<p>SublimeCodeIntel 是另外一个非常流行的插件，它的许多特性与 Anaconda 类似。我建议同时也试试它。<br></p>
<p><strong>SublimeREPL</strong></p>
<p>通过选项<code>Tools-&gt;SublimeREPL-&gt;Python</code>就可以看到效果了</p>
<p><strong>Jedi</strong></p>
<p>如果真需要智能补全插件的话，用这个吧。</p>
<p><strong>AutoPep8</strong></p>
<p>自动将 Python 代码按 PEP8 规范格式化，安装完添加如下配置可自动在保存文件的时候格式化：</p>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"format_on_save"</span>: true,</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>ConvertToUTF8</strong></p>
<p>解决中文乱码的好东西</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux tail命令的使用方法详解]]></title>
      <url>http://percychen.com/2015/09/21/2015-09-21-linux_tail_command/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文介绍Linux下tail命令的使用方法。</p>
<p>linux tail命令用途是依照要求将指定的文件的最后部分输出到标准设备，通常是终端，通俗讲来，就是把某个档案文件的最后几行显示到终端上，假设该档案有更新，tail会自己主动刷新，确保你看到最新的档案内容。</p>
</blockquote>
<h2 id="一、tail命令语法"><a href="#一、tail命令语法" class="headerlink" title="一、tail命令语法"></a>一、tail命令语法</h2><pre><code>tail [ -f ] [ -c Number | -n Number | -m Number | -b Number | -k Number ] [ File ]
</code></pre><p>参数解释：</p>
<pre><code>-f             该参数用于监视File文件增长。
-c Number     从 Number 字节位置读取指定文件
-n Number     从 Number 行位置读取指定文件。
-m Number     从 Number 多字节字符位置读取指定文件，比方你的文件假设包括中文字，假设指定-c参数，可能导致截断，但使用-m则会避免该问题。
-b Number     从 Number 表示的512字节块位置读取指定文件。
-k Number     从 Number 表示的1KB块位置读取指定文件。
</code></pre><p>上述命令中，都涉及到number，假设不指定，<code>默认显示10行</code>。Number前面可使用正负号，表示该偏移从顶部还是从尾部開始计算。<br>tail可运行文件一般在/usr/bin/以下。</p>
<h2 id="二、tail命令使用方法演示例子"><a href="#二、tail命令使用方法演示例子" class="headerlink" title="二、tail命令使用方法演示例子"></a>二、tail命令使用方法演示例子</h2><pre><code>tail -f filename
</code></pre><p>说明：监视filename文件的尾部内容（默认10行，相当于增加参数 -n 10），刷新显示在屏幕上。退出，按下CTRL+C。</p>
<pre><code>tail -n 20 filename
</code></pre><p>说明：显示filename最后20行。</p>
<pre><code>tail -n +20 filename
</code></pre><p>说明：显示filename前面20行。</p>
<pre><code>tail -r -n 10 filename
</code></pre><p>说明：逆序显示filename最后10行。</p>
<p>####补充：</p>
<p>跟tail功能相似的命令还有：</p>
<pre><code>cat 从第一行開始显示档案内容。
tac 从最后一行開始显示档案内容。
more 分页显示档案内容。
less 与 more 相似，但支持向前翻页
head 仅仅显示前面几行
tail 仅仅显示后面几行
n 带行号显示档案内容
od 以二进制方式显示档案内容
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Shell 通配符、元字符、转义符使用实例介绍]]></title>
      <url>http://percychen.com/2015/09/17/2015-09-17-shelladjustcode/</url>
      <content type="html"><![CDATA[<blockquote>
<p>说到shell通配符（wildcard），大家在使用时候会经常用到。下面是一个实例：</p>
</blockquote>
<pre><code>~/shell $ ls
a.txt  b.txt  c.old

~/shell $ ls *.txt
a.txt  b.txt

~/shell $ ls d*.txt
ls: 无法访问 d*.txt: 没有那个文件或目录
</code></pre><p>从上面这个实例，不知道大家有没有发现问题呢。我们先了解一下，通配符相关知识，再分析下这个实例吧。</p>
<p>一、linux shell通配符(wildcard)</p>
<p>通配符是由shell处理的（不是由所涉及到命令语句处理的，其实我们在shell各个命令中也没有发现有这些通配符介绍）, 它只会出现在 命令的“参数”里（它不用在 命令名称里， 也不用在 操作符上）。<br><br>当shell在“参数”中遇到了通配符时，shell会将其当作路径或文件名去在磁盘上搜寻可能的匹配：若符合要求的匹配存在，则进行代换(路径扩展)；否则就将该通配符作为一个普通字符传递给“命令”，然后再由命令进行处理。总之，通配符 实际上就是一种shell实现的路径扩展功能。在 通配符被处理后, shell会先完成该命令的重组，然后再继续处理重组后的命令，直至执行该命令。</p>
<p>我们回过头分析上面命令吧：在第2个命令中，*.txt 实际shell搜索文件,找到了符合条件的文件，命令会变成：</p>
<pre><code>ls a.txt b.txt
</code></pre><p>所以说实际在执行ls 时候传给它的是 <code>a.txt</code> <code>b.txt</code> .</p>
<p>而命令3，d<em>.txt 由于当前目录下面没有这样的文件或目录，直接将`d</em>.txt` 作为ls 参数，传给了 ls .这个时候”*” 只是一个普通的 ls 参数而已，已经失去了它通配意义。 由于找不到文件，所以会出现：无法访问提示！</p>
<p>了解了shell通配符，我们现在看下，shell常见通配符有那一些了。</p>
<p>shell常见通配符：</p>
<p>字符    含义    实例<br><code>*</code>    匹配 0 或多个字符    <code>a*b</code>  a与b之间可以有任意长度的任意字符, 也可以一个也没有, 如<code>aabcb</code>, <code>axyzb</code>, <code>a012b</code>, <code>ab</code>。<br><br><code>?</code>    匹配任意一个字符    a?b  a与b之间必须也只能有一个字符, 可以是任意字符, 如<code>aab</code>, <code>abb</code>, <code>acb</code>, <code>a0b</code>。<br><code>[list]</code>     匹配 list 中的任意单一字符    <code>a[xyz]b</code>   a与b之间必须也只能有一个字符, 但只能是 x 或 y 或 z, 如: <code>axb</code>, <code>ayb</code>, <code>azb</code>。<br><br><code>[!list]</code>     匹配 除list 中的任意单一字符    <code>a[!0-9]b</code>  a与b之间必须也只能有一个字符, 但不能是阿拉伯数字, 如<code>axb</code>, <code>aab</code>, <code>a-b</code>。<br><br><code>[c1-c2]</code>    匹配 c1-c2 中的任意单一字符 如：<code>[0-9]</code> <code>[a-z]</code>    <code>a[0-9]b</code>  0与9之间必须也只能有一个字符 如<code>a0b</code>, <code>a1b</code>… <code>a9b</code>。<br><br><code>{string1,string2,...}</code>    匹配 sring1 或 string2 (或更多)其一字符串    <code>a{abc,xyz,123}b</code>    a与b之间只能是abc或xyz或123这三个字符串之一。<br></p>
<p>需要说明的是：通配符看起来有点象正则表达式语句，但是它与正则表达式不同的，不能相互混淆。把通配符理解为shell 特殊代号字符就可。而且涉及的只有，<code>*</code>,<code>?</code> <code>[]</code> ,<code>{}</code> 这几种。</p>
<p>二、shell元字符（特殊字符 Meta）</p>
<p>shell 除了有通配符之外，由shell 负责预先先解析后，将处理结果传给命令行之外，shell还有一系列自己的其他特殊字符。</p>
<pre><code>字符    说明
IFS    由 &lt;space&gt; 或 &lt;tab&gt; 或 &lt;enter&gt; 三者之一组成(我们常用 space )。
CR    由 &lt;enter&gt; 产生。
=    设定变量。
$    作变量或运算替换(请不要与 shell prompt 搞混了)。
&gt;    重导向 stdout。 *
&lt;    重导向 stdin。 *
|    命令管线。 *
&amp;    重导向 file descriptor ，或将命令置于背境执行。 *
( )    将其内的命令置于 nested subshell 执行，或用于运算或命令替换。 *
{ }    将其内的命令置于 non-named function 中执行，或用在变量替换的界定范围。
;    在前一个命令结束时，而忽略其返回值，继续执行下一个命令。 *
&amp;&amp;    在前一个命令结束时，若返回值为 true，继续执行下一个命令。 *
||    在前一个命令结束时，若返回值为 false，继续执行下一个命令。 *
!    执行 history 列表中的命令。*
加入”*” 都是作用在命令名直接。可以看到shell 元字符，基本是作用在命令上面，用作多命令分割（或者参数分割）。因此看到与通配符有相同的字符，但是实际上作用范围不同。所以不会出现混淆。
</code></pre><p>以下是man bash 得到的英文解析：</p>
<p>metacharacter<br>              A character that, when unquoted, separates words.  One of the following:<br>              |  &amp; ; ( ) &lt; &gt; space tab<br>control operator<br>              A token that performs a control function.  It is one of the following symbols:<br>              || &amp; &amp;&amp; ; ;; ( ) | <newline></newline></p>
<p>三、shell转义符</p>
<p>有时候，我们想让 通配符，或者元字符 变成普通字符，不需要使用它。那么这里我们就需要用到转义符了。 shell提供转义符有三种。</p>
<pre><code>字符    说明
‘’(单引号)    又叫硬转义，其内部所有的shell 元字符、通配符都会被关掉。注意，硬转义中不允许出现’(单引号)。
“”(双引号)    又叫软转义，其内部只允许出现特定的shell 元字符：$用于参数代换 `用于命令代替
\(反斜杠)      又叫转义，去除其后紧跟的元字符或通配符的特殊意义。
</code></pre><p>man bash 英文解释如下：</p>
<pre><code>There are three quoting mechanisms: the escape character, single quotes, and double quotes.
</code></pre><p>实例:</p>
<pre><code>~/shell $ ls \*.txt
ls: 无法访问 *.txt: 没有那个文件或目录

~/shell $ ls &apos;*.txt&apos;
ls: 无法访问 *.txt: 没有那个文件或目录

~/shell $ ls &apos;a.txt&apos;
a.txt

~/shell $ ls *.txt
a.txt  b.txt
</code></pre><p>可以看到，加入了转义符 “*”已经失去了通配符意义了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[五个你可能闻所未闻的出色的 Ubuntu 替代发行版]]></title>
      <url>http://percychen.com/2015/09/16/2015-09-16-linux_UI_system/</url>
      <content type="html"><![CDATA[<p><a href="https://linux.cn/article-6217-1.html" target="_blank" rel="external">转自Linux中国</a></p>
<div id="article_content"><p><img class="fit-image" src="https://dn-linuxcn.qbox.me/data/attachment/album/201509/14/224826ztv5vvo5jv5ttjmj.jpg" alt="" width="644" height="373" border="0"></p><br><p>你在使用 Ubuntu，可是希望桌面体验……来得更眩目一点。虽说你总是可以添加新的桌面背景，或者<a href="http://www.makeuseof.com/tag/install-mate-desktop-linux-system/" class="ext" rel="external" target="_blank">索性切换桌面</a>，但是你还有这个选择：换成一种全然不同的发行版。</p><br><p>本文就介绍了五个极其出色的 Ubuntu 替代发行版，你可以下载并安装到你的 Linux 计算机上。</p><br><a id="3_603" class="target-fix ext" rel="external nofollow"></a><h3><strong>为何不使用 Ubuntu?</strong></h3><br><p>很简单，在 Linux 社区看来并非只有 Ubuntu 一枝独秀。这可能会让你大吃一惊，也可能不会。我们通常重点介绍面向台式机和笔记本电脑的 Ubuntu、<a href="http://www.makeuseof.com/tag/optimize-the-power-of-your-raspberry-pi-with-raspbian/" class="ext" rel="external" target="_blank">面向 Raspberry Pi 的 Raspbian（基于 Debian）</a>，偶尔还会关注一下&nbsp;<a href="http://www.makeuseof.com/tag/xbmc-full-html/" class="ext" rel="external" target="_blank">Kodi</a>、OpenElec 以及<a href="http://www.makeuseof.com/tag/5-options-to-consider-for-your-next-media-center/" class="ext" rel="external" target="_blank">其他媒体中心发行版</a>。</p><br><p>实际上，日常使用的&nbsp;<a href="http://www.makeuseof.com/tag/best-linux-distributions/" class="ext" rel="external" target="_blank">Linux 发行版多达数百种</a>；<a href="http://www.DistroWatch.com" class="ext" rel="external" target="_blank">DistroWatch.com</a> 列出了前100个当前下载量最多的发行版，其中 Mint、Debian、Ubuntu、openSUSE 和 Fedora 占据前5个席位。</p><br><p>现在，如果你刚接触 Linux，Ubuntu 是个非常好的起点。但是如果你喜欢来点新鲜的感觉，同时仍留在 Linux 环境下，使用已学会的<a href="http://www.makeuseof.com/tag/x-quirky-linux-commands-need-know-will-love/" class="ext" rel="external" target="_blank">命令行技巧</a>，那么试一试新的发行版不失为是个好想法。</p><br><p>当然，你可以选择任何旧的发行版，但何不来一番研究，找一款拥有出色 GUI 的发行版，让你的亲朋好友眼前一亮，让他们明白 Linux 并非只有命令行和 Unity？</p><br><a id="3_2123" class="target-fix ext" rel="external nofollow"></a><h3><strong>1.Elementary OS Freya 0.3</strong></h3><br><p><strong><video width="640" height="360" controls="controls"><br><source src="https://dn-linuxcn.qbox.me/static/video/Elementary%20OS%20Freya%200.3%20-%20See%20What's%20New.mp4" type="video/mp4"><br></video></strong></p><br><p>Elementary OS Freya 0.3 采用 Pantheon 桌面，有一个其灵感源自 OS X 的 GUI。实际上，说灵感源自 OS X 也许不是很合适；如果你最近从 OS X 换成了 Linux，那么 Freya 上的 GUI 完全会让你有一种很熟悉的感觉。</p><br><p>功能包括：与&nbsp;<a href="http://www.makeuseof.com/tag/what-is-html5-and-how-does-it-change-the-way-i-browse-makeuseof-explains/" class="ext" rel="external" target="_blank">HTML5 兼容</a>的轻量级 Midori 浏览器，用来播放照片、音乐和视频的播放器，文件资源管理器（有三种方式可以寻找你所寻找的东西：grid 模式、categor y模式和搜索模式）。</p><br><p>Elementary OS Freya 0.3 是捐赠软件。</p><br><a id="3_3077" class="target-fix ext" rel="external nofollow"></a><h3><strong>2.Zorin OS 10 Ultimate</strong></h3><br><p><strong><video width="640" height="360" controls="controls"><br><source src="https://dn-linuxcn.qbox.me/static/video/Zorin%20OS%2010%20Ultimate%20-%20Friendly%20Linux.mp4" type="video/mp4"><br></video></strong></p><br><p>我们常常在网站上为 Ubuntu 开设专页，因为它对来自 Windows 阵营的人来说是最佳操作系统。但是这名至实归吗？也许过去是，而如今，Zoris OS 被认为更像是 Windows。</p><br><p>基于 Ubuntu 的 Zorin 不仅支持&nbsp;<a href="http://www.makeuseof.com/tag/playonlinux-brings-windows-games-programs-linux/" class="ext" rel="external" target="_blank">Wine 和 PlayOnLinux</a>，还有一个非常有用的外观更改工具（Look Changer），让你可以定制桌面环境的外观和感觉。你可以使用该工具将界面设计得独特一点，或者让操作系统酷似 Windows 7、XP、2000、Ubuntu Unity、Mac OS X 或 GNOME 2。</p><br><p>它提供了免费版和高级版。</p><br><a id="3_4030" class="target-fix ext" rel="external nofollow"></a><h3><strong>3.Makulu 9 XFCE</strong></h3><br><p><strong><video width="640" height="360" controls="controls"><br><source src="https://dn-linuxcn.qbox.me/static/video/Makulu%209%20Linux%20XFCE%20-%20Review.mp4" type="video/mp4"><br></video></strong></p><br><p>Makulu 已经发布了几个不同的桌面环境，不过我们还是推荐 XFCE，主要是由于它拥有大量的功能特性。尤其是来自 Windows 阵营的人可以不必添加通常的办公/&nbsp;<a href="http://www.makeuseof.com/tag/install-steam-start-gaming-linux/" class="ext" rel="external" target="_blank">Steam （在 Linux 上运行）</a>/ Wine 软件，因为所有这些都已包含在安装系统当中（还提供 WPS，作为类似微软 Office 2003 的办公体验）。</p><br><p>另外，得到支持的还有 Netflix 和&nbsp;<a href="http://www.makeuseof.com/tag/truth-popcorn-time-torrent-safely/" class="ext" rel="external" target="_blank">Popcorn Time</a>，Makulu 9 XFCE 包括防火墙和反病毒工具（如果你在运行 Windows 软件，可能很有用！）。GUI 特别漂亮，如果使用 Variety Wallpaper 更改工具，你就可以全面控制装饰桌面的图像。</p><br><a id="3_5103" class="target-fix ext" rel="external nofollow"></a><h3><strong>4.</strong><strong>Pear OS</strong></h3><br><p><strong><video width="640" height="360" controls="controls"><br><source src="https://dn-linuxcn.qbox.me/static/video/Pear%20OS%20-%20iOS%20and%20OS%20X%20Meets%20Linux%20%23ComputerClan.mp4" type="video/mp4"><br></video></strong></p><br><p>这款法国人编写的发行版以前叫 Pear Linux，基于 Ubuntu，如今不再维护，不过你应该能够从这个发行版获得所有标准的日常桌面用途。</p><br><p>正如你所见，Pear OS 的设计元素取自 iOS 和 OS X （从标识一直到桌面，无不如此），包括 Mac OS X 风格的停靠栏，还提供了虚拟桌面切换器；从菜单布局和字体到所用的明暗层次，无不酷似 OS X，大概比 Elementary OS 还要酷似 OS X。</p><br><p>如果你不赞同这个观点：OS X 代表了 GUI 设计方面的视觉高水准，那么这恐怕基本上引不起你的兴趣，但是如果你想要一种类似 Mac 的体验，又没有 Mac 那样的高价，那么 Pear OS 是个不错的选择，没必要<a href="http://www.makeuseof.com/tag/tech-recipe-optimum-hardware-components-for-a-perfect-hackintosh/" class="ext" rel="external" target="_blank">构建一台黑苹果</a>（Hackintosh，运行 Mac OS X 的 PC 电脑)。不过要小心，将来没有任何更新版。</p><br><a id="3_6369" class="target-fix ext" rel="external nofollow"></a><h3><strong>5.Solus</strong></h3><br><p><strong><video width="640" height="360" controls="controls"><br><source src="https://dn-linuxcn.qbox.me/static/video/Solus%20Operating%20System%20-%20Linux%20Distribution%20Built%20from%20Scratch.mp4" type="video/mp4"><br></video></strong></p><br><p>Solus （之前叫 Evolve OS）是从头开始设计的，其亮点是采用 Budgie 桌面，这款外观甜美的操作系统其灵感来自安卓的Material Design 设计语言，并在此基础上更进了一步。</p><br><p>Solus 的重点在于办公；这款操作系统“不会碍手碍脚”，让你可以开始做想做的事情，没有需要更改、编辑或修复的通知和烦人干扰。此外，Solus 值得关注的地方是，开发人员似乎把心思完全放在了要实现的目标上，就发布了这款操作系统，没有发布面向服务器和手机等设备的多个版本。光这一点就值得你关注一下，另外一个优点是 GUI 很靓丽。</p><br><p><strong>如此说来，这些是最华丽的发行版吗?</strong></p><br><p>你觉得如何？你会将哪些造型美观的 Linux 发行版推荐给喜欢赏心悦目的操作系统的人士？还是说你会安装一个不同的桌面？欢迎留言交流！</p><br><p class="copyright"><br><br>                            <span class="z">来源：51CTO &nbsp;&nbsp;</span>                <span class="z">原文：<a href="http://www.makeuseof.com/tag/five-stunning-ubuntu-alternatives-youve-never-heard/" target="_blank" class="ext" rel="external nofollow">http://www.makeuseof.com/tag/five-stunning-ubuntu-alternatives-youve-never-heard/</a></span><br>                        <span class="y">作者： Christian Cawley</span>            <br class="clear"><br>                <span class="z">译文：<a href="http://os.51cto.com/art/201509/491243.htm" target="_blank" class="ext" rel="external nofollow">http://os.51cto.com/art/201509/491243.htm</a></span><br><span class="y">译者： 布加迪</span>            <br class="clear"><br>        </p><br><br><br></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linunx 扩充HOME目录的方法]]></title>
      <url>http://percychen.com/2015/09/09/2015-09-09-linux_add_partition/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原本磁盘大小是500G后来实在装不下，就又将原来装windows一块分区格了，挂上去。但是又不想将原来的Home目录情况，重新分区，几百G的代码删掉又舍不得，备份没有几天都搞不定。</p>
<p>网上看了很多教程，都太过啰嗦。自己根据Android经验，自己摸索了一番。搞定，只花了半小时。</p>
</blockquote>
<h2 id="1-将分区格式化为-ext4"><a href="#1-将分区格式化为-ext4" class="headerlink" title="1. 将分区格式化为 ext4"></a>1. 将分区格式化为 ext4</h2><p>这里我就不详细讲，用fdisk分区命令或者一些磁盘管理工具就能搞定</p>
<h2 id="2-挂载到-Home目录"><a href="#2-挂载到-Home目录" class="headerlink" title="2. 挂载到/Home目录"></a>2. 挂载到/Home目录</h2><p>考虑到新加进来的分区主要是用作存放源代码，所以就直接在主目录下新建了一个目录</p>
<pre><code>mkdir -p ~/source
</code></pre><p>然后尝试挂载</p>
<pre><code>mount /dev/sdb7 /home/percy/source
</code></pre><p>发现是OK的</p>
<h2 id="3-开机自动挂载"><a href="#3-开机自动挂载" class="headerlink" title="3. 开机自动挂载"></a>3. 开机自动挂载</h2><p>熟悉Android的都知道，原本Android挂载一下分区是通过 /etc/vold.fstab 来挂载sdcard的，所以 查了一下 etc下面的文件，虽然<br>没有vold.fstab但是却找到  /etc/fstab文件</p>
<pre><code>sudo vim /etc/fstab
</code></pre><p>看了一下语法，发现跟 Android 的recovery下的分区表语法基本一致，所以修改一下。最后改完如图：</p>
<p><img src="/img/linux1.png" alt="分区表修改"></p>
<h2 id="4-重启，验证"><a href="#4-重启，验证" class="headerlink" title="4. 重启，验证"></a>4. 重启，验证</h2><p>搞定！</p>
<p><img src="/img/linux2.png" alt="挂载到目录"><br><img src="/img/linux3.png" alt="挂载到目录"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[svn常用命令]]></title>
      <url>http://percychen.com/2015/08/28/2015-08-28-svnnote/</url>
      <content type="html"><![CDATA[<h2 id="svn-常用主命令"><a href="#svn-常用主命令" class="headerlink" title="svn 常用主命令:"></a>svn 常用主命令:</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">svn cat  	<span class="comment">#显示特定版本的某文件内容。</span></div><div class="line">svn list 	<span class="comment">#显示一个目录或某一版本存在的文件列表。</span></div><div class="line">svn <span class="built_in">log</span>  	<span class="comment">#显示svn 的版本log，含作者、日期、路径等。</span></div><div class="line">svn diff 	<span class="comment">#显示特定修改的行级详细信息。</span></div></pre></td></tr></table></figure>
<h2 id="list示例："><a href="#list示例：" class="headerlink" title="list示例："></a>list示例：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">svn list http://svn.test.com/svn     <span class="comment">#查看目录中的文件。</span></div><div class="line">svn list -v http://svn.test.com/svn  <span class="comment">#查看详细的目录的信息(修订人,版本号,文件大小等)。</span></div><div class="line">svn list [-v]                        <span class="comment">#查看当前当前工作拷贝的版本库URL。</span></div></pre></td></tr></table></figure>
<h2 id="cat示例："><a href="#cat示例：" class="headerlink" title="cat示例："></a>cat示例：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn cat -r 4 test.c     <span class="comment">#查看版本4中的文件test.c的内容,不进行比较。</span></div></pre></td></tr></table></figure>
<h2 id="diff示例："><a href="#diff示例：" class="headerlink" title="diff示例："></a>diff示例：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">svn diff               		<span class="comment">#什么都不加，会坚持本地代码和缓存在本地.svn目录下的信息的不同;信息太多，没啥用处。</span></div><div class="line">svn diff -r 3          		<span class="comment">#比较你的本地代码和版本号为3的所有文件的不同。</span></div><div class="line">svn diff -r 3 text.c   		<span class="comment">#比较你的本地代码和版本号为3的text.c文件的不同。</span></div><div class="line">svn diff -r 5:6        		<span class="comment">#比较版本5和版本6之间所有文件的不同。</span></div><div class="line">svn diff -r 5:6 text.c 		<span class="comment">#比较版本5和版本6之间的text.c文件的变化。</span></div><div class="line">svn diff -c 6 test.c    	<span class="comment">#比较版本5和版本6之间的text.c文件的变化。</span></div></pre></td></tr></table></figure>
<h2 id="log示例："><a href="#log示例：" class="headerlink" title="log示例："></a>log示例：</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">svn <span class="built_in">log</span>       		  	<span class="comment">#什么都不加会显示所有版本commit的日志信息:版本、作者、日期、comment。</span></div><div class="line">svn <span class="built_in">log</span> -r 4:20 		<span class="comment">#只看版本4到版本20的日志信息，顺序显示。</span></div><div class="line">svn <span class="built_in">log</span> -r 20:5 		<span class="comment">#显示版本20到4之间的日志信息，逆序显示。</span></div><div class="line">svn <span class="built_in">log</span> test.c  		<span class="comment">#查看文件test.c的日志修改信息。</span></div><div class="line">svn <span class="built_in">log</span> -r 8 -v 		<span class="comment">#显示版本8的详细修改日志，包括修改的所有文件列表信息。</span></div><div class="line">svn <span class="built_in">log</span> -r 8 -v -q   	<span class="comment">#显示版本8的详细提交日志，不包括comment。</span></div><div class="line">svn <span class="built_in">log</span> -v -r 88:866 	<span class="comment">#显示从版本88到版本866之间，当前代码目录下所有变更的详细信息 。</span></div><div class="line">svn <span class="built_in">log</span> -v dir  		<span class="comment">#查看目录的日志修改信息,需要加v。</span></div><div class="line">svn <span class="built_in">log</span> http://foo.com/svn/trunk/code/  <span class="comment">#显示代码目录的日志信息。</span></div></pre></td></tr></table></figure>
<h2 id="回滚事例"><a href="#回滚事例" class="headerlink" title="回滚事例"></a>回滚事例</h2><p>比如要把73回滚到68</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn merge -r 73:68 boot.img</div></pre></td></tr></table></figure>
<p>然后commit就行了</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn commit -m <span class="string">"Reverted boot to revision 68."</span></div></pre></td></tr></table></figure>
<h2 id="检索出历史版本"><a href="#检索出历史版本" class="headerlink" title="检索出历史版本"></a>检索出历史版本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn update -r 666   <span class="comment">#666代表版本号</span></div></pre></td></tr></table></figure>
<h2 id="reset-–hard"><a href="#reset-–hard" class="headerlink" title="reset –hard"></a>reset –hard</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">svn revert --depth=infinity</div><div class="line">svn revert --recursive .</div></pre></td></tr></table></figure>
<h2 id="svn-add"><a href="#svn-add" class="headerlink" title="svn add ."></a>svn add .</h2><p><code>git add .</code> 很好用，换到svn下面来就不行了。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn add . --force</div></pre></td></tr></table></figure>
<h2 id="svn安静模式"><a href="#svn安静模式" class="headerlink" title="svn安静模式"></a>svn安静模式</h2><p><code>svn checkout xxxxx --quiet</code></p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">svn add file|dir 	 	<span class="comment">#添加文件或整个目录</span></div><div class="line">svn checkout    		<span class="comment">#获取svn代码</span></div><div class="line">svn commit     			<span class="comment">#提交本地修改代码</span></div><div class="line">svn status       		<span class="comment">#查看本地修改代码情况：修改的或本地独有的文件详细信息</span></div><div class="line">svn merge      			<span class="comment">#合并svn和本地代码</span></div><div class="line">svn revert      		<span class="comment">#撤销本地修改代码</span></div><div class="line">svn resolve    			<span class="comment">#合并冲突代码</span></div><div class="line">svn <span class="built_in">help</span> [<span class="built_in">command</span>]  	<span class="comment">#查看svn帮助，或特定命令帮助</span></div></pre></td></tr></table></figure>
<h2 id="svn-diff个性化定制"><a href="#svn-diff个性化定制" class="headerlink" title="svn diff个性化定制"></a>svn diff个性化定制</h2><p>svn配置文件: ~/.subversion/config</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.subversion/config</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diff-cmd = diff_program (diff, gdiff, etc.)</div></pre></td></tr></table></figure>
<p>将上面那个脚本的路径添加进去就行，修改为</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">diff-cmd = /usr/<span class="built_in">local</span>/bin/diffwrap.sh  <span class="comment">#绝对路径</span></div></pre></td></tr></table></figure>
<p>这样svn diff命令就会默认使用vimdiff比较文件。</p>
<p>diffwrap.sh文件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#! /bin/bash</span></div><div class="line"></div><div class="line"><span class="comment"># for svn diff: 修改~/.subversion/config，找到如下配置行：</span></div><div class="line"><span class="comment"># diff-cmd = diff_program (diff, gdiff, etc.)</span></div><div class="line"><span class="comment"># diff-cmd = ~/bin/diffwrap.sh</span></div><div class="line"></div><div class="line"><span class="comment"># 参数大于5时，去掉前5个参数；参数小于5，失败，什么也不做</span></div><div class="line"><span class="built_in">shift</span> 5</div><div class="line"></div><div class="line"><span class="comment"># 使用vimdiff比较</span></div><div class="line">vimdiff <span class="string">"<span class="variable">$@</span>"</span></div></pre></td></tr></table></figure>
<p>参考文献</p>
<p><a href="http://www.cnblogs.com/xuxm2007/archive/2012/05/11/2496243.html" target="_blank" rel="external">使用vimdiff作为svn diff的查看代码工具</a></p>
<p><a href="http://blog.csdn.net/sunboy_2050/article/details/6187464" target="_blank" rel="external">SVN常用命令</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Makefile复习笔记]]></title>
      <url>http://percychen.com/2015/08/25/2015-08-25-makefilenote/</url>
      <content type="html"><![CDATA[<ol>
<li>变量</li>
</ol>
<table>
<thead>
<tr>
<th>符号</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>:=</td>
<td>立即展开</td>
</tr>
<tr>
<td>=</td>
<td>延迟展开</td>
</tr>
<tr>
<td>?=</td>
<td>判断赋值</td>
</tr>
<tr>
<td>+=</td>
<td>增加变量</td>
</tr>
<tr>
<td>@echo</td>
<td>不输出echo字样</td>
</tr>
<tr>
<td>$(obj:.o=.c)</td>
<td>将变量$(obj)中所有变量的最后字母“.o”替换为“.c”</td>
</tr>
<tr>
<td>$(subst 1,2,version1)</td>
<td>将version1中的1替换为2</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python学习笔记]]></title>
      <url>http://percychen.com/2015/08/24/2015-08-24-python_note/</url>
      <content type="html"><![CDATA[<h2 id="print"><a href="#print" class="headerlink" title="print"></a>print</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> word.center(<span class="number">50</span>)     <span class="comment">#在长度为50的字符中居中</span></div><div class="line"><span class="keyword">print</span> word.center(<span class="number">20</span>,<span class="string">"*"</span>) <span class="comment">#居中输出，总共20个字符，word左右两侧各输出5个"*"号</span></div><div class="line"><span class="keyword">print</span> word.ljust(<span class="number">0</span>)       <span class="comment">#左对齐输出</span></div><div class="line"><span class="keyword">print</span> word.rjust(<span class="number">20</span>)      <span class="comment">#右对齐输出，总共20个字符，剩下的以空格填充</span></div><div class="line"><span class="keyword">print</span> <span class="string">"%3d :  %0.2f"</span> % (i,m)  <span class="comment">#将i 打印三个字符，m小数点尾数保存2位</span></div></pre></td></tr></table></figure>
<p>pwd</p>
<pre><code>os.getcwd()   #获取目录，需要导入 os
</code></pre><hr>
<p>###python判断文件和文件夹是否存在</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">import os</div><div class="line">os.path.isfile(&apos;test.txt&apos;) #如果不存在就返回False</div><div class="line">os.path.exists(directory) #如果目录不存在就返回False</div><div class="line">os.environ[&apos;HOME&apos;] #获取home目录</div><div class="line">os.rename（oldname,newname)</div><div class="line">os.remove()#删除文件</div><div class="line">os.rmdir()#删除空目录</div><div class="line">os.removedirs()#递归删除空目录</div><div class="line">#删除非空目录</div><div class="line">import shutil</div><div class="line">shutil.rmtree()</div></pre></td></tr></table></figure>
<p>###sys.exit(0)</p>
<p>退出值设定</p>
<p>###获取当前路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import sys</div><div class="line">LOCAL_PATH=sys.path[0]</div><div class="line">LOCAL_PATH=os.getcwd()</div></pre></td></tr></table></figure>
<h2 id="python类型转换"><a href="#python类型转换" class="headerlink" title="python类型转换"></a>python类型转换</h2><table>
<thead>
<tr>
<th>函数</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>int(x [,base ])</td>
<td>将x转换为一个整数</td>
</tr>
<tr>
<td>long(x [,base ])</td>
<td>将x转换为一个长整数</td>
</tr>
<tr>
<td>float(x )</td>
<td>将x转换到一个浮点数</td>
</tr>
<tr>
<td>complex(real [,imag ])</td>
<td>创建一个复数</td>
</tr>
<tr>
<td>str(x )</td>
<td>将对象 x 转换为字符串</td>
</tr>
<tr>
<td>repr(x )</td>
<td>将对象 x 转换为表达式字符串</td>
</tr>
<tr>
<td>eval(str )</td>
<td>用来计算在字符串中的有效Python表达式,并返回一个对象</td>
</tr>
<tr>
<td>tuple(s )</td>
<td>将序列 s 转换为一个元组</td>
</tr>
<tr>
<td>list(s )</td>
<td>将序列 s 转换为一个列表</td>
</tr>
<tr>
<td>chr(x )</td>
<td>将一个整数转换为一个字符</td>
</tr>
<tr>
<td>unichr(x )</td>
<td>将一个整数转换为Unicode字符</td>
</tr>
<tr>
<td>ord(x )</td>
<td>将一个字符转换为它的整数值</td>
</tr>
<tr>
<td>hex(x )</td>
<td>将一个整数转换为一个十六进制字符串</td>
</tr>
<tr>
<td>oct(x )</td>
<td>将一个整数转换为一个八进制字符串</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>操作</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>s + r</td>
<td>序列连接</td>
</tr>
<tr>
<td>s <em> n , n </em> s</td>
<td>s的 n 次拷贝,n为整数</td>
</tr>
<tr>
<td>s % d</td>
<td>字符串格式化(仅字符串)</td>
</tr>
<tr>
<td>s[i]</td>
<td>索引</td>
</tr>
<tr>
<td>s[i :j ]</td>
<td>切片</td>
</tr>
<tr>
<td>x in s , x not in s</td>
<td>从属关系</td>
</tr>
<tr>
<td>for x in s :</td>
<td>迭代</td>
</tr>
<tr>
<td>len(s)</td>
<td>长度</td>
</tr>
<tr>
<td>min(s)</td>
<td>最小元素</td>
</tr>
<tr>
<td>max(s)</td>
<td>最大元素</td>
</tr>
<tr>
<td>s[i ] = x</td>
<td>为s[i]重新赋值</td>
</tr>
<tr>
<td>s[i :j ] = r</td>
<td>将列表片段重新赋值</td>
</tr>
<tr>
<td>del s[i ]</td>
<td>删除列表中一个元素</td>
</tr>
<tr>
<td>del s[i :j ]</td>
<td>删除列表中一个片段</td>
</tr>
</tbody>
</table>
<h2 id="数值操作："><a href="#数值操作：" class="headerlink" title="数值操作："></a>数值操作：</h2><table>
<thead>
<tr>
<th>操作</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>x &lt;&lt; y</td>
<td>左移</td>
</tr>
<tr>
<td>x &gt;&gt; y</td>
<td>右移</td>
</tr>
<tr>
<td>x &amp; y</td>
<td>按位与</td>
</tr>
<tr>
<td>x</td>
<td>y</td>
<td>按位或</td>
</tr>
<tr>
<td>x ^ y</td>
<td>按位异或 (exclusive or)</td>
</tr>
<tr>
<td>~x</td>
<td>按位翻转</td>
</tr>
<tr>
<td>x + y</td>
<td>加</td>
</tr>
<tr>
<td>x - y</td>
<td>减</td>
</tr>
<tr>
<td>x * y</td>
<td>乘</td>
</tr>
<tr>
<td>x / y</td>
<td>常规除</td>
</tr>
<tr>
<td>x // y</td>
<td>地板除</td>
</tr>
<tr>
<td>x ** y</td>
<td>乘方 (xy )</td>
</tr>
<tr>
<td>x % y</td>
<td>取模 (x mod y )</td>
</tr>
<tr>
<td>-x</td>
<td>改变操作数的符号位</td>
</tr>
<tr>
<td>+x</td>
<td>什么也不做</td>
</tr>
<tr>
<td>~x</td>
<td>~x=-(x+1)</td>
</tr>
<tr>
<td>abs(x )</td>
<td>绝对值</td>
</tr>
<tr>
<td>divmod(x ,y )</td>
<td>返回 (int(x / y ), x % y )</td>
</tr>
<tr>
<td>pow(x ,y [,modulo ])</td>
<td>返回 (x ** y ) x % modulo</td>
</tr>
<tr>
<td>round(x ,[n])</td>
<td>四舍五入，n为小数点位数</td>
</tr>
<tr>
<td>x &lt; y</td>
<td>小于</td>
</tr>
<tr>
<td>x &gt; y</td>
<td>大于</td>
</tr>
<tr>
<td>x == y</td>
<td>等于</td>
</tr>
<tr>
<td>x != y</td>
<td>不等于(与&lt;&gt;相同)</td>
</tr>
<tr>
<td>x &gt;= y</td>
<td>大于等于</td>
</tr>
<tr>
<td>x &lt;= y</td>
<td>小于等于</td>
</tr>
</tbody>
</table>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre><code>import ConfigParser
import string, os, sys
</code></pre><p>初始化：</p>
<pre><code>cf = ConfigParser.ConfigParser()
cf.read(&quot;test.conf&quot;)
</code></pre><p>封装:</p>
<pre><code>print &apos;section:&apos;, cf.sections() # 返回所有的section
print &apos;options:&apos;,cf.options(&quot;db&quot;) #返回db的所有选项
print &apos;db:&apos;, cf.items(&quot;db&quot;)#返回db的所有选项和名称
</code></pre><p>可以按照类型读取出来</p>
<pre><code>db_host = cf.get(&quot;db&quot;, &quot;db_host&quot;)
db_port = cf.getint(&quot;db&quot;, &quot;db_port&quot;)
</code></pre><p>修改一个值，再写回去</p>
<pre><code>cf.set(&quot;db&quot;, &quot;db_pass&quot;, &quot;zhaowei&quot;)
cf.write(open(&quot;test.conf&quot;, &quot;w&quot;))
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 下firefox浏览安装flash插件]]></title>
      <url>http://percychen.com/2015/07/07/2015-07-07-linux_firefox_flash/</url>
      <content type="html"><![CDATA[<ul>
<li><p>从<a href="http://get.adobe.com/cn/flashplayer/" target="_blank" rel="external">http://get.adobe.com/cn/flashplayer/</a> 下载.tar.gz的源码包</p>
</li>
<li><p>解压</p>
</li>
</ul>
<p>+安装方法</p>
<pre><code>sudo  cp usr -r /usr
sudo cp libflashplayer.so /usr/lib/mozilla/plugins/
sudo chmod 644 /usr/lib/mozilla/plugins/libflashplayer.so
</code></pre><ul>
<li>重启firefox</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ImageMagick之图片缩放]]></title>
      <url>http://percychen.com/2015/06/10/2015-06-10-imageMagick_Resize_pic/</url>
      <content type="html"><![CDATA[<p>本文为转载：</p>
<p><a href="http://www.netingcn.com/imagemagick-resize.html" target="_blank" rel="external">原帖地址：http://www.netingcn.com/imagemagick-resize.html</a></p>
<p><div class="content"><br>            <p>利用ImageMagicK的convert命令，能很方便的实现图片的放大缩小，可以进行等比例缩放，也能缩放到指定的固定大小。缩放的参数resize，由它来指定缩放后图片的宽高，比如“200×100”。</p></div></p>
<p><ul></ul></p>
<p><li><strong>等比缩放 </strong>例如把图片a.jpg缩放到200×100的尺寸,可以用命令:</li><br></p>
<p><div class="code">convert -resize 200×100 src.jpg dest.jpg</div></p>
<p></p><p><strong>注意：</strong>虽然明确指定了图片大小为200×100，但dest.jpg的不一定就是200×100，因为是等比缩放的，dest.jpg大小取决原始图片比例。假设src.jpg的大小是500×200,那么缩放后dest.jpg的真实大小为200×80,再比如src.jpg的大小是300×200,缩放后的尺寸为150×100。<strong>原则是缩放后的尺寸最少有一个是符合宽或高，且另外一个不能大于指定的参数中对应的宽或高。</strong>另外可以通过只指定宽或高的方式来进行缩放。例如：</p><p></p>
<pre>convert -resize 200 src.jpg dest.jpg
得到图片宽为200，高根据原始图片比例计算而来

convert -resize x100 src.jpg dest.jpg
得到的图片高位100，宽根据原始图片比例计算而来
</pre>
<ul>
<li><strong>固定宽高缩放。</strong>即不考虑原是图宽高的比例，把图片缩放到指定大小。例如命令：</li>
</ul>
<pre>convert -resize 200x100! src.jpg dest.jpg
</pre>
<p><strong>说明：</strong>区别是宽高后面多了一个叹号，此时不管原图片比例如何，缩放后的图片大小都是200×100，这样就可能导致图片变形。注意：在linux环境对参数需要用单引号引起来，而windows下又不能使用单引号。</p>
<ul>
<li><strong>有条件缩放。</strong>可以通过&gt;或&lt;符号来控制原始图片是否进行缩放，例如在处理一批尺寸大小各异的图片，只想把尺寸大于给定的值图片才进行缩小，如果没有指定条件，可能会把那些小的图片进行了放大处理。</li>
</ul>
<pre>convert -resize "200x100&gt;" src.jpg dest.jpg
注解：只有当src.jpg的宽大于200或高大于100时候，才进行缩小处理，
否则生成的dest.jpg和src.jpg具有一样的尺寸。
注意在linux下要用单引号替换成双引号，即'200x100&gt;'。

convert -resize "200x100&lt;"&nbsp;src.jpg dest.jpg
注解：只有当src.jpg的宽小于200或高小于100时候，才进行放大处理，
否则生成的dest.jpg和src.jpg具有一样的尺寸。
注意在linux下要用单引号替换成双引号，即'200x100&lt;'
</pre>
<p>上述两种有条件缩放是按原始图等比例缩放的，也就是对符合条件的图片进行等比缩放。同时有条件缩放也可以与固定大小缩放联合起来用。例如如下命令。</p>
<pre>convert -resize "800x100&gt;!" src.jpg dest.jpg
注解：假设src.jpg尺寸是300x200。很显然src.jpg的高(200)是大于指定值高(100)，
符合缩小的条件，由于执行的不是等比缩放，
所以dest.jpg的尺寸理论上是800x100，由于执行是缩小操作
显然800是超过原始图片宽的，故dest.jpg的宽只能是300

convert -resize "10x1000&lt;!" src.jpg dest.jpg
注解：假设src.jpg尺寸是300x200，src.jpg的高(200)小于指定值高(1000)，
因此该命令将执行放大图片操作，dest.jpg的高将放到到1000,
由于目标图片宽比原始图片还小，但是执行的是放大操作，因此只能用原始图片的宽，
所以得到的dest.jpg的尺寸是300x1000。
</pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于 recovrey 图片的说明]]></title>
      <url>http://percychen.com/2015/06/02/2015-06-02-recovery_image_error/</url>
      <content type="html"><![CDATA[<h2 id="recovery图片格式需求"><a href="#recovery图片格式需求" class="headerlink" title="recovery图片格式需求"></a>recovery图片格式需求</h2><blockquote>
<p>第一次做TOS Recovery改造的时候，是基于刷机精灵的Recovery改的，代码是从cm10.1迁移上来的，基本就是只需要替换几张图片的事情，然后增加几个功能而已，整个过程进行的很顺利，但是合入images资源的时候，recovery直接黑屏了。把log拆出来一看，报错了：</p>
</blockquote>
<pre><code>E: minui does&apos;t support PNG depth 8 channels 4 color_type PNG_COLOR_TYPE_RGB \n&quot;
</code></pre><p>类似的这几种问题，在后面的适配中又出现了几次。说到底就是图片的色彩深度不支持，对于一个开发的人来说，这是什么鬼报错？因为以前混过半年的UI设计师，所以勉强能理解 深度8的意思，但是channels是什么鬼？ 通道吗？ 通道我知道，但是后面的数值是什么鬼？</p>
<p>想来想去，还是直接看代码：</p>
<pre><code> if (bit_depth == 8 &amp;&amp; *channels == 3 &amp;&amp; color_type == PNG_COLOR_TYPE_RGB) {
    // 8-bit RGB images: great, nothing to do.
} else if (bit_depth &lt;= 8 &amp;&amp; *channels == 1 &amp;&amp; color_type == PNG_COLOR_TYPE_GRAY) {
    // 1-, 2-, 4-, or 8-bit gray images: expand to 8-bit gray.
    png_set_expand_gray_1_2_4_to_8(*png_ptr);
} else if (bit_depth &lt;= 8 &amp;&amp; *channels == 1 &amp;&amp; color_type == PNG_COLOR_TYPE_PALETTE) {
    // paletted images: expand to 8-bit RGB.  Note that we DON&apos;T
    // currently expand the tRNS chunk (if any) to an alpha
    // channel, because minui doesn&apos;t support alpha channels in
    // general.
    png_set_palette_to_rgb(*png_ptr);
    } else {
    fprintf(stderr, &quot;minui doesn&apos;t support PNG depth %d channels %d color_type %d\n&quot;,
    bit_depth, *channels, color_type);
    result = -7;
    goto exit;
}
</code></pre><p>结合代码和log来看，果真是channels出问题了。问了设计的朋友，他们居然也不知道，于是自己开photoshop格式化图片，试了一次就成功了：</p>
<p>第一种方式：（5.0以上慎用）</p>
<p><img src="/img/recovery_image1.png" alt="第一种方式"></p>
<p>对应： bit_depth &lt;= 8 &amp;&amp; *channels == 1 &amp;&amp; color_type == PNG_COLOR_TYPE_PALETTE</p>
<p>后面尝试了另外一种方式，发现也是可以的：</p>
<p><img src="/img/recovery_image2.png" alt="第二种方式"></p>
<p>对应：bit_depth == 8 &amp;&amp; *channels == 3 &amp;&amp; color_type == PNG_COLOR_TYPE_RGB</p>
<h2 id="libpng的兼容问题"><a href="#libpng的兼容问题" class="headerlink" title="libpng的兼容问题"></a>libpng的兼容问题</h2><p>适配5.1的时候，自己画的图，放进去，总是报 warning的一些错误：</p>
<pre><code>libpng warning iccp not recognizing known srgb profile that has been edited
</code></pre><p>虽然不会影响功能，但是作为一个严(qiang)谨(po)的(zheng)程序猿，怎么允许这种情况发生呢。</p>
<p>因为是libpng的报错，不是Android那边的报错，估计是兼容性出了问题，google了一下，得到的结果竟然是，google承诺下个版本会修复。这么看起来是官方的问题了，到这里，基本就是被判了死刑。鬼知道google什么时候才会修复，这不是要逼死强迫症患者吗？</p>
<p>怎么可能就这样放弃，既然是libpng报出的warning，那就去看看 为什么 libpng会报出 这个问题：</p>
<p>libpng网站<a href="http://www.libpng.org/pub/png/libpng.html" target="_blank" rel="external">http://www.libpng.org/pub/png/libpng.html</a></p>
<p>查了下源码，发现原因是png里面有太多空片段造成的，也就是说，你如果把png转换成16进制去看，会看到一堆00000000的片段，把这些去掉就好了。看到这里就明白市面上那些图片压缩软件的原理了。于是去找找压缩软件：</p>
<p>mac的可以用 <a href="https://imageoptim.com/" target="_blank" rel="external">imageoptim</a></p>
<p>linux的可以用 <a href="http://trimage.org/" target="_blank" rel="external">trimage</a>,debian&amp;ubuntu&amp;mint用户可以直接用下面命令安装</p>
<pre><code>sudo apt-get install trimage
</code></pre><p>安装完后，可以在应用列表或者命令行里打开，打开后选择图片压缩，压缩率在 70~90的样子，在不损失图片细节的情况下可以压缩掉80%的空间。将压缩的图片丢进去，然后编译。</p>
<p>至此，问题成功解决！而且图片的索引速度比以前快了很多，没有卡顿现象了。</p>
<p><strong>注意：</strong></p>
<p><strong>在Android 5.0以后，应用开发也会出现这种情况，所以务想解决这个问题的话，务必要先将图片压缩。</strong></p>
<p><strong>全文完</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[boot.img的结构，生成，分解与打包]]></title>
      <url>http://percychen.com/2015/05/11/2015-05-11-bootImageInfo/</url>
      <content type="html"><![CDATA[<h2 id="为什么要解boot"><a href="#为什么要解boot" class="headerlink" title="为什么要解boot"></a>为什么要解boot</h2><blockquote>
<p>Android中一直存在着boot.img这个文件（2.3.3-2.3.7中有些第三方ROM会把boot.img解开，直接放进system/lib/module中去）。</p>
<p>随着技术的不断深入，改boot.img已经成为了一种必须的操作，改boot到底能有什么用?比较常见的有：</p>
</blockquote>
<ul>
<li>root 手机</li>
</ul>
<blockquote>
<p>在sbin中放入相关的su，superuser.apk等相关可执行文件，然后在init.rc中oneshot一下，就可以了。具体方法可以去解一下别人root过了的boot.img</p>
</blockquote>
<ul>
<li>打开adb调试权限</li>
</ul>
<blockquote>
<p>修改default.prop中间的幻镜变量就可以了，如果想要 adb shell过后就有root权限，就需要替换 sbin下的adbd了</p>
</blockquote>
<ul>
<li>引导jar包</li>
</ul>
<blockquote>
<p>各种OS和UI以前都有在 init.rc 中加入自己私有jar包的习惯，（MIUI后来又去掉了这个习惯）。</p>
</blockquote>
<ul>
<li>修复各种问题</li>
</ul>
<blockquote>
<p>对于一些常规性又奇葩的bug，在boot.img中修复可谓是省心省力。比如sdcard无法使用，打log发现是sdcard这个文件夹竟然不存在，常规方法肯定是要各种修改HAL层了，在vold反复升级情况下，不是对vold系统特别了解的人还修复不了。但是如果在init.rc中加一句 mkdir /sdcard 往往就能轻松解决问题。</p>
</blockquote>
<h2 id="bootimage的结构"><a href="#bootimage的结构" class="headerlink" title="bootimage的结构"></a>bootimage的结构</h2><p>boot.img一般由 boot header，zImage(kernel)和ramdisk构成，但是在4.3到4.4引入了一个dt.img(device tree source),DT可以分解为多个dtb，然后打包成dt.img，或者直接就是一个 dtb 然后追加到kernel后面。因为在5.0以后，大部分源码编译厂商又开始将dtb又开始追加到kernel后面，所以本文中，我们就直接忽略dt.img。</p>
<p>将ramdisk解开后，我们可以看到一堆文件夹，因为都不太重要，而且出于篇幅考虑，我这里只稍微列举一下最重要的部分</p>
<pre><code>-ramdisk
|-firmware    #一些扩展的固件
|-sbin        #可执行文件
|-res           #res 开机时使用的资源
|-init        #load rc文件的进程
|-*.rc         #各种配置文件
|-*           #其它文件，比如与selinux相关文件
-zImage
</code></pre><h2 id="bootimage参数"><a href="#bootimage参数" class="headerlink" title="bootimage参数"></a>bootimage参数</h2><p>手动打包过boot.img的人都知道boot.img的参数是非常多而且眼花缭乱的。这里简要介绍下各个参数含义。</p>
<p>认真看了的朋友应该发现，上面一节中我没有讲 header，因为在分解后是不体现在文件中的，所以很多人就没有注意到它（其实我也是最近才注意到），header只是一些命令和参数，它其实是起到了一个引导的作用。里面包含的主要是一个‘ANDROID’字符串和 cmdLine。</p>
<ul>
<li><strong>cmdline（command line）</strong></li>
</ul>
<p>顾名思义就是命令行的意思，它是内核的附加命令行。我们有n中取出它的方式，比如解包的时候，或者用adb取。</p>
<pre><code>adb shell su -c &quot;cat /proc/cmdline&quot;
</code></pre><p>在Boardconfig.mk中对应宏为：  BOARD_KERNEL_CMDLINE</p>
<ul>
<li><strong>base address</strong></li>
</ul>
<p>内核加载基地址，对应宏变量为：  BOARD_KERNEL_BASE</p>
<ul>
<li><strong>page_size</strong></li>
</ul>
<p>镜像的每个页面大小，一般为 2048与4096,也有8192的</p>
<p>对应宏变量为： BOARD_KERNEL_PAGESIZE</p>
<ul>
<li><strong>kernel_offset</strong></li>
</ul>
<p>kernel的偏移地址 ，对应宏变量为: BOARD_KERNEL_ADDRESS</p>
<ul>
<li><strong>ramdisk_offset</strong></li>
</ul>
<p>ramdisk的偏移地址，它一般在 TARGET_MKBOOTIMG_ARGS里面赋值</p>
<ul>
<li><strong>tags_offset</strong></li>
</ul>
<p>内核标签的偏移地址，同上</p>
<ul>
<li><strong>second_offset</strong></li>
</ul>
<p>它是 second stage的偏移地址，这个部分在整个boot.img的最后部分，是可选可不选部分，如果解包的时候有，那就加上，不加也没关系</p>
<h2 id="分解boot-img-的工具"><a href="#分解boot-img-的工具" class="headerlink" title="分解boot.img  的工具"></a>分解boot.img  的工具</h2><p>首先，我这里介绍的是linux下的工具，因为我这四五年一直都在linux下，所以不太知道windows下有没有相关的工具，有的话可以补充，谢谢。</p>
<p><strong>Mtk-tools</strong></p>
<p>一般使用这款开源工具作为mtk的解包和打包工具，我上一次使用了它对MTK6735 进行了解包命令。需要的朋友可以去<a href="https://github.com/bgcngm/mtk-tools" target="_blank" rel="external">github下载</a>。</p>
<p>使用命令：</p>
<pre><code>./unpack-MTK.pl xxx.img   #解包
./repack-MTK.pl --boot &lt;kernel&gt; &lt;ramdisk&gt; new-boot.img   #打包
</code></pre><p>更多命令可以直接参考github上面的README</p>
<p><strong>mkbootimg_tools</strong></p>
<p>支持4.1-5.0的非mtk cpu的boot解包和打包，暂时还没出现过错误，（4.1以下本人没有尝试过，需要的朋友可以自己测试），<a href="https://github.com/xiaolu/mkbootimg_tools" target="_blank" rel="external">github地址</a>.</p>
<p>使用命令：</p>
<pre><code>./mkboot boot.img boot #解包
./mkboot boot new-boot.img #打包
</code></pre><p>这个命令很人性化，如果$1为img文件，就解包，如果为目录就打包</p>
<p><strong>bootimg_tools</strong></p>
<p>这款工具是在xda上看到的，基于AOSP写的，扩展了很多参数，最新的编译版本为7.8.13 <a href="https://github.com/pbatard/bootimg-tools" target="_blank" rel="external">github源码地址</a></p>
<p>我自己常用的boot.img就这个，因为自己增加了几个接口参数，确保打包无误。为了方便各位，我已经上传一份到 git.code.oa.com<br><br>地址：<a href="https://github.com/yun-percy/bootimg_7.8.13" target="_blank" rel="external">https://github.com/yun-percy/bootimg_7.8.13</a></p>
<p>使用命令：</p>
<pre><code>./umkbootimg xxx.img #解包成zImage 和 initramfs.cpio.gz
./unpack_ramdisk initramfs.cpio.gz #将 initramfs.cpio.gz分解为ramdisk文件夹
./repack_ramdisk ramdisk new-initramfs.cpio.gz  #与上面相反
./boot_info xxxx.img #获xxx.img的信息
将 umkbootimg以及 boot_info打出的信息记录下来，下面打包需要用
./mkbootimg ---kernel zImage --ramdisk new-initramfs.cpio.gz --pagesize $pagesize --base $base --kernel_offset $kernel_offset --ramdisk_offset $ramdisk_offset --second_offset $second_offset --tags_offset $tags_offset --cmdline &quot;${cmdline}&quot; -o new_boot.img
</code></pre><p>当然，为了方便程(lan)序（si)员(shi),花了点时间写了两个解包和打包脚本。使用方法</p>
<pre><code>autounpack.sh boot.img
#将会生成 ramdisk，和zImage
autounpack.sh boot.img
#会根据boot.img的信息，将ramdisk(或者 new-initramfs.cpio.gz)以及zImage打包成new-boot.img
</code></pre><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>上次写完智能手表适配流程后。jarodruan 希望我把打包boot image使用的各个参数做一个详解，所以就有了这篇文件。</p>
<p>因为这些参数只是一些打包时需要的偏移地址，供mkbootimg打包的时候使用，大家可以用16进制编辑器打开一个boot.img，然后对照着参数去看，就能很清楚的看懂boot.img的结构了.</p>
<p>因为如果只讲这些参数的意义，这篇文章就太水了一点，所以加了一些工具的介绍与使用，为想要了解boot.img的朋友提供点方便。</p>
<p><strong>全文完</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux 的du 命令详解]]></title>
      <url>http://percychen.com/2015/05/08/2015-05-08-LinuxDuCommand/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Linux下的磁盘管理有3d： df  dd  du ，df和dd是在查看磁盘空间，导入镜像事使用，在平时 底层适配的时候用得比较多。</p>
<p>du命令也是查看使用空间的，但是与df命令不同的是:df 查看的是 Linux系统的分区的使用空间，而du查看的是文件和目录磁盘使用空间</p>
</blockquote>
<p>英语较好的盆友可以直接使用</p>
<pre><code>man du
</code></pre><p>查看 du的使用方法，国语党请看下面常用命令参数的解释：</p>
<p><strong>du的命令参数</strong></p>
<pre><code>-k或--kilobytes  以KB(1024bytes)为单位输出。
-m或--megabytes  以MB为单位输出。
-c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。
-s或--summarize  仅显示总计，只列出最后加总的值。
-S或--separate-dirs   显示个别目录的大小时，并不含其子目录的大小。
-h或--human-readable  智能以K，M，G为单位，提高信息的可读性。
-H或--si  与-h参数相同，但是K，M，G是以1000为换算单位。
-x或--one-file-xystem  以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。
-X&lt;文件&gt;或--exclude-from=&lt;文件&gt;  在&lt;文件&gt;指定目录或文件。
-l或--count-links   重复计算硬件链接的文件。
-L&lt;符号链接&gt;或--dereference&lt;符号链接&gt; 显示选项中所指定符号链接的源文件大小。
--exclude=&lt;目录或文件&gt;         略过指定的目录或文件。
-D或--dereference-args   显示指定符号链接的源文件大小。
</code></pre><p><strong>使用技巧</strong></p>
<ul>
<li><p>只看文件夹大小，例如我只想看system文件夹的大小：</p>
<pre><code>du -ch system | tail -n 1   #或者使用
du -sh system   #或者
du -max-depth=0 -h abc
</code></pre></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Recovery 编译中常见问题]]></title>
      <url>http://percychen.com/2015/05/06/2015-05-06-RecoveryBugAnalysis/</url>
      <content type="html"><![CDATA[<blockquote>
<p>来鹅厂之前，我以为我是来写App层和Framework 的feature的，或者做前端，万万没想到，进来之后就一头栽进 Recovery的坑里了，我的主语言是java，Makefile和shell，所以本来只打算在jacky的手下打打杂工的，万万没想到就成了owner，好在以前写过一点点C，接下担子后就开始各种苦逼的解bug了</p>
</blockquote>
<h2 id="调试的基本功"><a href="#调试的基本功" class="headerlink" title="调试的基本功"></a>调试的基本功</h2><ul>
<li><p>会查看log</p>
<pre><code>adb shell &quot;cat /cache/recovery/last_log.1&quot;  #recovery模式下
adb shell su -c &quot;cat /cache/recovery/last_log&quot; #正常模式下
</code></pre></li>
<li><p>会一些常规的 adb 调试指令</p>
<pre><code>adb shell &quot;cat /dev/input/event0&quot;  #获取设备的输入信息，在调试按键和屏幕的时候比较有用
adb shell &quot;dmesg&quot;     #selinux的相关信息
adb shell &quot;cat /proc/bus/input/devices&quot;     #输入设备的芯片和型号
</code></pre></li>
<li><p>比较扎实的C语言功底和Makefile的基本知识。</p>
</li>
<li><p>相当强大的google search能力</p>
</li>
</ul>
<h2 id="OTA失败"><a href="#OTA失败" class="headerlink" title="OTA失败"></a>OTA失败</h2><p>这种问题在新机型的适配中比较常见，出错根源主要分为三种：</p>
<ul>
<li><strong>空间不足</strong></li>
</ul>
<p>这算是非常喜闻乐见的bug了，直接对包做一些精简就能解决这个问题，不需要去动recovery</p>
<ul>
<li><strong>挂载失败</strong></li>
</ul>
<p>之前MI3TD就遇到了这种问题，链接表是从官方表中导出的，OTA了十几个版本都没问题，突然一天就失败了，像这种无厘头的bug只能挠挠头老老实实去分析了。<br>看了下updater_script的挂载地址，然后</p>
<pre><code>ls -al /dev/block/platform/????/by-name
</code></pre><p>对比发现 system本来对应的分区 mmcblk0p24在手机上给对应成了</p>
<pre><code>/dev/block/platform/????/by-name/APP
</code></pre><p>于是修改分区表，将分区表中的：</p>
<pre><code>/dev/block/platform/????/by-name/system
</code></pre><p>改成：</p>
<pre><code>/dev/block/platform/????/by-name/APP
</code></pre><p>启动编译，验证OK了。当然这不是最好的解决方式，为了分区表的可读性我们往往会使用by-name的链接写法，但是个人是比较建议使用实际地址的方式来写分区表的，这样不管你的链接表怎么变化，我们都能准确的找到对应的分区挂载。</p>
<ul>
<li><strong>全量包无法写入</strong></li>
</ul>
<blockquote>
<p>问题描述，卡刷没问题，增量刷机没问题，其实就是各种刷机各种折腾都没问题，除了刷全量包的时候，这是遇到最头疼的事情了.</p>
<p>分析，因为只有一台手机出现了这种情况，所以问题应该是在device上，看log是system不可写入部分文件，导致刷机失败。所以定位问题是出现在分区表的写法上。</p>
<p>分区表是从官方里拖出来的，分区地址应该是没问题</p>
<p>折腾了一个小时后发现，在recovery下写command进行全量包的刷机竟然可以成功，但是正常模式下写command刷机会失败，故推导出可能是 vold 服务区别的原因</p>
<p>这样就好解决了，因为在分区表里与vold相关的只有 mnt_flags这些标识了，mnt_flags是从linux引入的装载标识，但是linux的装载标识的值与Android有些不同，所以只好去Android官网查，结果只查到一句：vold忽略这个值，应该被设置为defaults。这就无解了，因为如果设置为defaults的话，就挂不上 system。</p>
</blockquote>
<p>解决：  没什么好的解决办法，只能厚着头皮慢慢调，当我把 barrier=1这个属性加上的时候，全量升级就调通了。建议以后system分区的挂载写法为:</p>
<pre><code>/dev/block/mmcblk0pXX       /system     ext4        rw,barrier=1            wait
</code></pre><p>后面因为还有很多bug要调，没时间细究，准备将这个作为一个点，有时间了好好研究下 Android的mount 标识</p>
<h2 id="各种奇葩的设定"><a href="#各种奇葩的设定" class="headerlink" title="各种奇葩的设定"></a>各种奇葩的设定</h2><p><strong>颜色值不对</strong></p>
<p>我们默认的是：</p>
<pre><code>TAGET_RECOVERY_PIXEL_FORMAT : &quot;RGBX_8888&quot;
</code></pre><p>实际上还有两种：</p>
<pre><code>TAGET_RECOVERY_PIXEL_FORMAT : &quot;BGRA_8888&quot;
TAGET_RECOVERY_PIXEL_FORMAT : &quot;ABGR_8888&quot;
</code></pre><p>三种换着来就可以解决。</p>
<p><strong>屏幕不亮，但是adb已启动</strong></p>
<pre><code>TAGET_RECOVERY_LCD_BACKLIGHT_PATH :=\&quot;/sys/class/leds/lcd-backlight/brightness\&quot;
</code></pre><p><strong>屏幕花屏</strong></p>
<pre><code>RECOVERY_GRAPHICS_USE_LINELENGTH :=true
</code></pre><p><strong>键值不对</strong></p>
<p>可以在正常系统下测试各个键值：</p>
<pre><code>adb shell getevent
</code></pre><p>然后复执一份 default_recovery_keys.c 到device/××××/×××/recovery目录下，重命名为recovery_keys.c，修改宏定义，宏定义可以根据你上一步获取的键值去查看 kernel/include/linux/input.h中对应的键值.然后编译即可。</p>
<p><strong>触摸屏不工作</strong></p>
<p>这个可能是需要长篇讲一下了，虽然只花了三个小时就解决了，但是确实费了不少心思和大量的尝试</p>
<p>问题描述： 在适配 LG WATCH R的时候，几乎没遇到什么阻力就起来了，各项功能都运行的非常好，但是 Moto 360却是问题很多，解决了常规几个问题后，就只剩触摸屏起不来了。</p>
<p>解决过程：</p>
<ol>
<li><p>打log。在recovery的文件中加满了LOGI都没一个触摸事件输出，所以在确定touch的C文件起来后，确定是触摸屏接口或者驱动，或者kernel的问题。</p>
</li>
<li><p>请教了下fredjgzhang,一起查看了下 /dev/input/event的抽象文件，没有任何输出，后来更换kernel后也没有解决。甚至替换了init也没有解决。</p>
</li>
<li><p>顺着fredjgzhang的思路看了一遍 Android的input输入系统的linux层的流程。发现/dev/input/下的event对应的设备信息存储在 /proc/bus/input/devices里面，所以cat了一下</p>
<pre><code>cat /proc/bus/input/devices
</code></pre></li>
</ol>
<p>然后在recovery下也cat一下，对比devices信息，发现少了一个设备：ABS，熟悉linux输入的人应该知道linux的触摸信息是以ABS承载并一并上报的。来看看少了的部分：</p>
<pre><code>I: Bus=0000 Vendor=0000 Product=0000 Version=0000
N: Name=&quot;atmxt-i2c&quot;
P: Phys=
S: Sysfs=/devices/virtual/input/input2
U: Uniq=
H: Handlers=event2
B: PROP=2
B: EV=b
B: KEY=4000 0 0 0 0
B: ABS=6618000 0
</code></pre><p>我们看到了，这个Name叫 atmxt-i2c没有工作，去官方包里查了下atmxt_i2c，原来moto自写了一套触摸屏校准文件。于是将这些<br>atmxt-i2c.idc和atmxt-i2c.kl放进device/moto/minnow/recovery/root里面做内置，结果可想而知，肯定失败了。</p>
<p>反思了一晚上，应该是C的本地层和虚拟机工作原理不一样导致的。</p>
<p>第二天开完晨会就去网上找这个设备的源码（source）或者固件(firmware)，结果搜出来的只是github的一些校准文件，虽然没收获，但是发现这个校准文件全部都来自moto的机器，于是就搜关键字 moto atmxt firmware，立马就搜到了 atmxt-r2.tdat atmxt-r3.tdat !</p>
<p>将这两个文件放入 device/moto/minnow/recovery/root/firmware/image下面，然后执行 make recoveryimage -j16</p>
<p>问题立马就解决了，因为以前没做过单片机什么的，所以花了比较多的时间去思考，希望能给以后有设备调不通的童鞋提供点思路。总结一下解决问题顺序：</p>
<p>输入设备不工作</p>
<p>—&gt; 打recovery的log，触屏有反应就去调校准值</p>
<p>—&gt; 看/dev/input/下面的event是否有节点的正常反馈</p>
<p>—&gt; 看/proc/bus/input/devices 各个输入设备是否正常工作</p>
<p>—&gt; 去网上查找设备型号对应的firmware合入即可解决问题</p>
<p><strong>双清缓慢</strong></p>
<pre><code>BOARD_NO_SECURE_DISCARD := true
</code></pre><h1 id="等待补充更新中"><a href="#等待补充更新中" class="headerlink" title="等待补充更新中"></a>等待补充更新中</h1>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android获取分区信息]]></title>
      <url>http://percychen.com/2015/05/05/2015-05-05-GetBlockInfomation/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在做编译适配的时候，我们通常要去获取一些系统分区的相关信息，这里粗略的介绍了几种方法获取不同的分区信息</p>
</blockquote>
<h2 id="分区列表"><a href="#分区列表" class="headerlink" title="分区列表"></a>分区列表</h2><pre><code>ls -al /dev/block
</code></pre><h2 id="分区对应的实际地址"><a href="#分区对应的实际地址" class="headerlink" title="分区对应的实际地址"></a>分区对应的实际地址</h2><pre><code>ls -al /dev/block/platform/sdhci****/by-name/
</code></pre><h2 id="获取分区块大小"><a href="#获取分区块大小" class="headerlink" title="获取分区块大小"></a>获取分区块大小</h2><pre><code>adb pull /proc/partitions ./partitions.txt         #显示单位是blocks，1blocks=1K

cat /sys/class/block/mmcblk0p1/size            #显示单位是records，1records=512byte
</code></pre><h2 id="其他的一些命令"><a href="#其他的一些命令" class="headerlink" title="其他的一些命令"></a>其他的一些命令</h2><pre><code>cat /proc/emmc
cat /proc/dumcharr_info
cat /cache/recovery/last_log
</code></pre><h2 id="查看格式和挂载"><a href="#查看格式和挂载" class="headerlink" title="查看格式和挂载"></a>查看格式和挂载</h2><pre><code>cat /etc/fstab
df -h
cat /proc/mounts
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转： sort的7个应用实例]]></title>
      <url>http://percychen.com/2015/05/05/2015-05-05-sort/</url>
      <content type="html"><![CDATA[<td id="article_content"><p>在<a href="http://www.tecmint.com/sort-command-linux/" target="_blank" rel="external">上一篇文章</a>里，我们已经探讨了关于sort命令的多个例子，如果你错过了这篇文章，可以点击下面的链接进行阅读。今天的这篇文章作为上一篇文章的继续，将讨论关于sort命令的剩余用法，与上一篇一起作为Linux ‘sort’命令的完整指南。</p><br><ul><br><li><a href="http://www.tecmint.com/sort-command-linux/" target="_blank" rel="external">Linux 的 ‘sort’命令的14个有用的范例（一）</a></li><br></ul><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/102959wecogvuagsouuvke.png" alt="" width="256" height="256"></p><br><p>在我们继续深入之前，先创建一个文本文档‘month.txt’，并且将上一次给出的数据填进去。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ echo </span><span class="pun">-</span><span class="pln">e </span><span class="str">“mar\ndec\noct\nsep\nfeb\naug”</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> month</span><span class="pun">.</span><span class="pln">txt</span></code></li><li class="L1"><code><span class="pln">$ cat month</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105700klkfmvv0flbsskf6.gif" alt="Populate Content"></p><br><p>15、 通过使用’M‘选项，对’month.txt‘文件按照月份顺序进行排序。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort </span><span class="pun">-</span><span class="pln">M month</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><strong>注意</strong>:‘sort’命令需要至少3个字符来确认月份名称。</p><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105701p2wxy026s0z023to.gif" alt="Sort File Content by Month in Linux"></p><br><p>16、 把数据整理成方便人们阅读的形式，比如1K、2M、3G、2T，这里面的K、G、M、T代表千、兆、吉、梯。 （LCTT 译注：此处命令有误，ls 命令应该增加 -h 参数，径改之）</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ ls </span><span class="pun">-</span><span class="pln">lh </span><span class="pun">/</span><span class="pln">home</span><span class="pun">/</span><span class="pln">$USER </span><span class="pun">|</span><span class="pln"> sort </span><span class="pun">-</span><span class="pln">h </span><span class="pun">-</span><span class="pln">k5</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105701wxxuatq5zu9qtzmk.gif" alt="Sort Content Human Readable Format"></p><br><p>17、 在上一篇文章中，我们在例子4中创建了一个名为‘sorted.txt’的文件，在例子6中创建了一个‘lsl.txt’。‘sorted.txt’已经排好序了而’lsl.txt‘还没有。让我们使用sort命令来检查两个文件是否已经排好序。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort </span><span class="pun">-</span><span class="pln">c sorted</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105702lsqqcyrsncwcffqj.gif" alt="Check File is Sorted"></p><br><p>如果它返回0，则表示文件已经排好序。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort </span><span class="pun">-</span><span class="pln">c lsl</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105702gyahwzs46p5s21a2.gif" alt="Check File Sorted Status"></p><br><p>报告无序。存在矛盾……</p><br><p>18、 如果文字之间的分隔符是空格，sort命令自动地将空格后的东西当做一个新文字单元，如果分隔符不是空格呢？</p><br><p>考虑这样一个文本文件，里面的内容可以由除了空格之外的任何符号分隔，比如‘|’，‘\’，‘+’，‘.’等……</p><br><p>创建一个分隔符为+的文本文件。使用‘cat‘命令查看文件内容。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ echo </span><span class="pun">-</span><span class="pln">e </span><span class="str">“21+linux+server+production\n11+debian+RedHat+CentOS\n131+Apache+Mysql+PHP\n7+Shell Scripting+python+perl\n111+postfix+exim+sendmail”</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> delimiter</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><hr><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ cat delimiter</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105702uxrgssqxvglzlstn.gif" alt="Check File Content by Delimiter"></p><br><p>现在基于由数字组成的第一个域来进行排序。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort </span><span class="pun">-</span><span class="pln">t </span><span class="str">‘+’</span><span class="pln"> </span><span class="pun">-</span><span class="pln">nk1 delimiter</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105703mnrarjnx7nddwnb0.gif" alt="Sort File By Fields"></p><br><p>然后再基于非数字的第四个域排序。</p><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105703nxjyhizvvx8j5nxk.gif" alt="Sort Content By Non Numeric"></p><br><p>如果分隔符是制表符，你需要在’+‘的位置上用$’\t’代替，如上例所示。</p><br><p>19、 对主用户目录下使用‘ls -l’命令得到的结果基于第五列（‘文件大小’）进行一个乱序排列。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ ls </span><span class="pun">-</span><span class="pln">l </span><span class="pun">/</span><span class="pln">home</span><span class="pun">/</span><span class="pln">avi</span><span class="pun">/</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> sort </span><span class="pun">-</span><span class="pln">k5 </span><span class="pun">-</span><span class="pln">R </span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105704pw69nw6hwhcwavww.gif" alt="Sort Content by Column in Random Order"></p><br><p>每一次你运行上面的脚本，你得到结果可能都不一样，因为结果是随机生成的。</p><br><p>正如我在上一篇文章中提到的规则2所说——sort命令会将以小写字母开始的行排在大写字母开始的行前面。看一下上一篇文章的例3，字符串‘laptop’在‘LAPTOP’前出现。</p><br><p>20、 如何覆盖默认的排序优先权？在这之前我们需要先将环境变量LC_ALL的值设置为C。在命令行提示栏中运行下面的代码。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ </span><span class="kwd">export</span><span class="pln"> LC_ALL</span><span class="pun">=</span><span class="pln">C</span></code></li></ol></pre><br><p>然后以非默认优先权的方式对‘tecmint.txt’文件重新排序。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort tecmint</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105706occ4t7a7h4m999m9.gif" alt="Override Sorting Preferences"></p><br><p><em>覆盖排序优先权</em></p><br><p>不要忘记与example 3中得到的输出结果做比较，并且你可以使用‘-f’，又叫‘-ignore-case’（忽略大小写）的选项来获取更有序的输出。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ sort </span><span class="pun">-</span><span class="pln">f tecmint</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105706sn54r2dspz2nbr2v.gif" alt="Compare Sorting Preferences"></p><br><p>21、 给两个输入文件进行‘sort‘，然后把它们连接成一行！</p><br><p>我们创建两个文本文档’file1.txt‘以及’file2.txt‘，并用数据填充，如下所示，并用’cat‘命令查看文件的内容。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ echo </span><span class="pun">-</span><span class="pln">e </span><span class="pun">“</span><span class="lit">5</span><span class="pln"> </span><span class="typ">Reliable</span><span class="pln">\n</span><span class="lit">2</span><span class="pln"> </span><span class="typ">Fast</span><span class="pln">\n</span><span class="lit">3</span><span class="pln"> </span><span class="typ">Secure</span><span class="pln">\n</span><span class="lit">1</span><span class="pln"> open</span><span class="pun">-</span><span class="pln">source\n</span><span class="lit">4</span><span class="pln"> customizable</span><span class="pun">”</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> file1</span><span class="pun">.</span><span class="pln">txt</span></code></li><li class="L1"><code><span class="pln">$ cat file1</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105707j38vk01w78yt0g00.gif" alt="Populate Content with Numbers"></p><br><p>用如下数据填充’file2.txt‘。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ echo </span><span class="pun">-</span><span class="pln">e </span><span class="pun">“</span><span class="lit">3</span><span class="pln"> </span><span class="typ">RedHat</span><span class="pln">\n</span><span class="lit">1</span><span class="pln"> </span><span class="typ">Debian</span><span class="pln">\n</span><span class="lit">5</span><span class="pln"> </span><span class="typ">Ubuntu</span><span class="pln">\n</span><span class="lit">2</span><span class="pln"> </span><span class="typ">Kali</span><span class="pln">\n</span><span class="lit">4</span><span class="pln"> </span><span class="typ">Fedora</span><span class="pun">”</span><span class="pln"> </span><span class="pun">&gt;</span><span class="pln"> file2</span><span class="pun">.</span><span class="pln">txt</span></code></li><li class="L1"><code><span class="pln">$ cat file2</span><span class="pun">.</span><span class="pln">txt</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105707drz8fbflwl50enze.gif" alt="Populate File with Data"></p><br><p>现在我们对两个文件进行排序并连接。</p><br><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code><span class="pln">$ join </span><span class="pun">&lt;(</span><span class="pln">sort </span><span class="pun">-</span><span class="pln">n file1</span><span class="pun">.</span><span class="pln">txt</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;(</span><span class="pln">sort file2</span><span class="pun">.</span><span class="pln">txt</span><span class="pun">)</span></code></li></ol></pre><br><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/105708uumm00x22i5z2k07.gif" alt="Sort Join Two Files"></p><br><p>我所要讲的全部内容就在这里了，希望与各位保持联系，也希望各位经常来逛逛。有反馈就在下面评论吧。</p><br><hr><br><p>via: <a href="http://www.tecmint.com/linux-sort-command-examples/" target="_blank" rel="external">http://www.tecmint.com/linux-sort-command-examples/</a></p><br><p>作者：<a href="http://www.tecmint.com/author/avishek/" target="_blank" rel="external">Avishek Kumar</a> 译者：<a href="https://github.com/DongShuaike" target="_blank" rel="external">DongShuaike</a> 校对：<a href="https://github.com/wxy" target="_blank" rel="external">wxy</a></p><br><p>本文由 <a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="external">LCTT</a> 原创翻译，<a href="http://linux.cn/" target="_blank" rel="external">Linux中国</a> 荣誉推出</p><br><br><p class="copyright"><br><br>                                            <span class="z">原文：<a href="http://www.tecmint.com/linux-sort-command-examples/" target="_blank">http://www.tecmint.com/linux-sort-command-examples/</a></span><br>                        <span class="y">作者： Avishek Kumar</span>            <br class="clear"><br>                <span class="z">译文：<a href="http://lctt.github.io/" target="_blank">LCTT</a>&nbsp;&nbsp;<a href="http://linux.cn/article-5373-1.html" target="_blank">http://linux.cn/article-5373-1.html</a></span><br>                        <span class="y">译者： DongShuaike</span>            <br class="clear"><br>                <br class="clear"><br>                    <span>本文由 LCTT 原创翻译，<a href="http://linux.cn/article-5373-1.html" target="_blank" rel="external">Linux中国首发</a>。也想加入译者行列，为开源做一些自己的贡献么？欢迎加入 <a href="http://lctt.github.io/" target="_blank">LCTT</a>！<br>翻译工作和译文发表仅用于学习和交流目的，翻译工作遵照<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank">CC 协议规定</a>，如果我们的工作有侵犯到您的权益，请及时联系我们。</span><br>                        <br class="clear"><br>            <span style="color:red;">欢迎遵照<a href="http://creativecommons.org/licenses/by-nc-sa/3.0/deed.zh" target="_blank">CC 协议规定</a>转载，敬请在正文中标注并保留原文/译文链接和作者/译者等信息。</span><br>                        <br class="clear"><br>                <span>文章仅代表作者的知识和看法，如有不同观点，请楼下排队<a href="javascript:void(0);" onclick="$('message').focus();" target="_blank" rel="external">吐槽</a> :D</span><br>        <br class="clear"><br>    </p><br><div class="hm"><br><a title="分享到新浪微博" href="javascript:void( share_tsina(SITEURL + 'article-5373-shareweibo.html','article_title','article_content','https://dn-linuxcn.qbox.me/data/attachment/album/201505/02/102959wecogvuagsouuvke.png.large.jpg') );" class="tsina_large" target="_blank" rel="external"></a><br><a title="收藏" href="home.php?mod=spacecp&amp;ac=favorite&amp;type=article&amp;id=5373&amp;handlekey=favoritearticlehk_5373" id="a_favorite" onclick="showWindow(this.id, this.href, 'get', 0);" class="fav_large"></a><br></div><br></td>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[设置默认的shell]]></title>
      <url>http://percychen.com/2015/05/04/2015-05-04-ChangeDefaultBash/</url>
      <content type="html"><![CDATA[<blockquote>
<p>通常情况下，默认的shell为 bash，比如 ubuntu或者 mint，但是有些system会采用一些更加高级的shell，比如deepin采用的是自己修改过的zsh，但是对于我这种常年在bash下工作，而且配置了一大堆bash变量的人来说就有些不习惯，下面教你如何将shell改为你顺手的shell</p>
</blockquote>
<h2 id="直接引导shell"><a href="#直接引导shell" class="headerlink" title="直接引导shell"></a>直接引导shell</h2><p>这种方法比较投机，只需要在 .bashrc 的开头加上一句 zsh <br>即可将zsh设为默认的shell，但是这种方式有个bug，每次关闭都会提醒你有进程正在运行，或者你需要exit两次才能退出。<br><br>这种方式是不推荐的</p>
<h2 id="修改usermod"><a href="#修改usermod" class="headerlink" title="修改usermod"></a>修改usermod</h2><p>首先你要知道你的shell在哪里，比如我想设置bash为默认shell</p>
<pre><code>～$ which bash   #获取shell路径
/usr/bin/bash
~$ chsh
passwd:
</code></pre><p>然后将你的shell路劲输入即可</p>
<h2 id="修改默认的服务器-shell："><a href="#修改默认的服务器-shell：" class="headerlink" title="修改默认的服务器 shell："></a>修改默认的服务器 shell：</h2><blockquote>
<p>现在很多服务器都是默认使用的dash,dash相比bash，语法要轻很多，很多在bash中没问题的语句，到dash就会出现问题。</p>
</blockquote>
<p>执行下面的语句，选否就可以了</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dpkg-reconfigure dash</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[system.img的分解与合并]]></title>
      <url>http://percychen.com/2015/04/29/2015-04-29-sparse_systemimage/</url>
      <content type="html"><![CDATA[<blockquote>
<p>在做编译适配的过程中，我们经常会接触到system.img的解包和打包工作，比如我们的Qrom就需要用到一个system.img来初始化，并得到一个zip包和一些配置文件．一般来说，我们常用的得到system.img的方法是dd的方法导出来，但是dd需要root权限，如果是一个新项目，通常获取root权限是比较难的，又或者我们需要非常纯净的底包，这个时候如果有官方镜像文件是最好的了.但并不是所有官方是system.img都可以直接用来挂载的,因为即便都叫 system.img也有不同的格式之分.</p>
</blockquote>
<h2 id="system-img的两种格式"><a href="#system-img的两种格式" class="headerlink" title="system.img的两种格式"></a>system.img的两种格式</h2><p>我们所见到的system.img一般分为 raw和sparse两种格式,所以格式不对,是无法正常的mount的</p>
<p><strong>raw</strong></p>
<p>通常我们导出来的system.img和官方完整的镜像文件是raw模式的．这种格式的文件用 file命令就可以看得很清楚，比如：</p>
<pre><code>10:31 ~ $ file system.img
system.img: Linux rev 1.0 ext4 filesystem data, UUID=57f8f4bc-abf4-655f-bf67-946fc0f9f25b (extents) (large files)
</code></pre><p>这种格式通常是完整的ext4分区镜像，当然也包含了很多全是00的无效填充区，可以用以下命令直接挂载：</p>
<pre><code>10:31 ~ $ mkdir sys   #创建挂载点
10:31 ~ $ mount -t ext4 -o loop system.img sys　　#挂载
</code></pre><p><strong>sparse</strong></p>
<p>这一种在国内方案和大厂的官方镜像中比较常见,这种方式是在源码中没有关闭sparse分解而将system.img解开成若干个小文件,这些小文件都是 sparse格式,当然如果解开成一个文件,也就是 system.img也会是sparse格式.如果分不清不如file一下:</p>
<pre><code>10:31 ~ $ file system.img_sparsechunk1
system.img_sparsechunk1: data
</code></pre><p>这种格式说到底就是非常普通的dat文件,它是将raw格式进行了稀疏描述,里面没有00的无效填充区,所以尺寸都比较小.</p>
<h2 id="合成与分解"><a href="#合成与分解" class="headerlink" title="合成与分解"></a>合成与分解</h2><p>Android源码中自带了这两种文件格式的互相转换,源码位于:</p>
<pre><code>system/extras/ext4_utils
</code></pre><p>当然你可以用gcc去编译他们,但是你可以直接在源码目录下编译:</p>
<pre><code>make otatools -j16
</code></pre><p>就会直接生成 simg2img img2simg make_ext4fs等一堆相关的工具文件,在out/host/linux-x86/bin里面可以找到它们</p>
<p><strong>合并官方提供的 system.img_sparse文件</strong></p>
<pre><code>simg2img &lt;sparse_img_files&gt; &lt;raw_images_file&gt;
</code></pre><p>例如,官方将system.img拆分成了四个文件,假设这四个文件分别为:ystem.img_sparse1,2,3,4</p>
<pre><code>10:31 ~ $ file system.img
simg2img system.img_sparse1 system.img_sparse2 system.img_sparse3 system.img_sparse4 system.img
</code></pre><p>这样就会在当前目录生成一个system.img文件,来,file一下:</p>
<pre><code>10:31 ~ $ file system.img
system.img: Linux rev 1.0 ext2 filesystem data, UUID=57f8f4bc-abf4-655f-bf67-946fc0f9f25b (extents) (large files)
</code></pre><p> 结果生成的是ext2文件,那么如何将它转为ext4文件供我们使用呢?思路是先挂载,然后再make成ext4:</p>
<pre><code>10:31 ~ $  ll system.img
-rw-rw-r-- 1 yun yun 268435456  4月 30 10:31 system.img
10:31 ~ $  mkdir sys
10:31 ~ $  mount -t ext4 -o loop system.img sys
10:31 ~ $  ./make_ext4fs -s -l 268435456 -a sytem new_system.img sys
</code></pre><p>那么大功告成.我们就可以拿着这个 new_system.img去QROM下搭构架了.</p>
<p><strong>分解命令</strong></p>
<pre><code>img2simg &lt;raw_images_file&gt; &lt;sparse_img_files&gt; [&lt;block_size＞]
</code></pre><p>因为分解命令用得极少,所以这里就部展开讨论,一般情况下如果需要将 system.img做 sparse,只需要在源码的device下面打开开关就可以了.不需要手动去分解.</p>
<p><strong>在源码中开启或关闭Sparse</strong></p>
<p>在源码的device目录中的 BoardConfig.mk:</p>
<pre><code>TARGET_USERIMAGES_SPARSE_EXT_DISABLED := true   #false为打开
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sed用法进阶篇]]></title>
      <url>http://percychen.com/2015/04/27/2015-04-27-sed/</url>
      <content type="html"><![CDATA[<h2 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h2><p>####将windows文本转换为unix文本</p>
<pre><code>sed -e &apos;s/.$//&apos; windows.txt &gt; unix.xml
</code></pre><p>####删除yun.xml中包含uses的行：<br>        sed -i ‘/uses/d’ yun.xml</p>
<p>####去掉” ‘ “<br>        sed -i “s/‘//g” yun.xml</p>
<p>####删掉一行文字中versionCode后面的所有文字</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i <span class="string">'s/versionCode.*//g'</span>  yun.xml</div></pre></td></tr></table></figure>
<p>####替换</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i <span class="string">'s/package: name/pkgname/g'</span>  yun.xml</div></pre></td></tr></table></figure>
<ul>
<li><p>变量替换</p>
<p>  sed -i ‘s/\’”$a”‘/\’”$b”‘/‘ c</p>
</li>
</ul>
<p>####首字母大写</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sed <span class="string">'s/\b[a-z]/\U&amp;/g'</span> <span class="built_in">test</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"aaaaa"</span>|sed <span class="string">'s/\b[a-z]/\U&amp;/g'</span></div></pre></td></tr></table></figure>
<p>####删掉空白行</p>
<pre><code>sed -i &apos;/^$/d&apos; yun.xml
</code></pre><p>####在每一行后面增加一空行</p>
<pre><code>sed G　yun.xml
</code></pre><p>####将原来的所有空行删除并在每一行后面增加一空行。</p>
<p>####这样在输出的文本中每一行后面将有且只有一空行。</p>
<pre><code>sed &apos;/^$/d;G&apos; yun.xml
</code></pre><p>###在每一行后面增加两行空行</p>
<pre><code>sed &apos;G;G&apos;
</code></pre><p>####将上一个脚本所产生的所有空行删除（即删除所有偶数行）</p>
<pre><code>sed &apos;n;d&apos;
</code></pre><p>####在匹配式样“regex”的行之前插入一空行</p>
<pre><code>sed &apos;/regex/{x;p;x;}&apos;
</code></pre><p>####在匹配式样“regex”的行之后插入一空行</p>
<pre><code>sed &apos;/regex/G&apos;
</code></pre><p>####在匹配式样“regex”的行之前和之后各插入一空行</p>
<pre><code>sed &apos;/regex/{x;p;x;G;}&apos;
</code></pre><h1 id="给文本编号"><a href="#给文本编号" class="headerlink" title="给文本编号"></a>给文本编号</h1><h4 id="为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”"><a href="#为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”" class="headerlink" title="为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”"></a>为文件中的每一行进行编号（简单的左对齐方式）。这里使用了“制表符”</h4><h4 id="（tab，见本文末尾关于’-t’的用法的描述）而不是空格来对齐边缘。"><a href="#（tab，见本文末尾关于’-t’的用法的描述）而不是空格来对齐边缘。" class="headerlink" title="（tab，见本文末尾关于’\t’的用法的描述）而不是空格来对齐边缘。"></a>（tab，见本文末尾关于’\t’的用法的描述）而不是空格来对齐边缘。</h4><pre><code>sed = filename | sed &apos;N;s/\n/\t/&apos;
</code></pre><p>####对文件中的所有行编号（行号在左，文字右端对齐）。</p>
<pre><code>sed = filename | sed &apos;N; s/^/ /; s/ *\(.\{6,\}\)\n/\1 /&apos;
</code></pre><p>####计算行数 （模拟 “wc -l”）</p>
<pre><code>sed -n &apos;$=&apos;
</code></pre><p>文本转换和替代</p>
<p>####Unix环境：转换DOS的新行符（CR/LF）为Unix格式。</p>
<pre><code>sed &apos;s/.$//&apos; #假设所有行以CR/LF结束
sed &apos;s/^M$//&apos; # 在bash/tcsh中，将按Ctrl-M改为按Ctrl-V
sed &apos;s/\x0D$//&apos; # ssed、gsed 3.02.80，及更高版本
</code></pre><p>####Unix环境：转换Unix的新行符（LF）为DOS格式。</p>
<pre><code>sed &quot;s/$/`echo -e \\\r`/&quot; # 在ksh下所使用的命令
sed &apos;s/$&apos;&quot;/`echo \\\r`/&quot; # 在bash下所使用的命令
sed &quot;s/$/`echo \\\r`/&quot; # 在zsh下所使用的命令
sed &apos;s/$/\r/&apos; # gsed 3.02.80 及更高版本
</code></pre><p>####DOS环境：转换Unix新行符（LF）为DOS格式。</p>
<pre><code>sed &quot;s/$//&quot; # 方法 1
sed -n p # 方法 2
</code></pre><p>####将每一行前导的“空白字符”（空格，制表符）删除,使之左对齐</p>
<pre><code>sed &apos;s/^[ \t]*//&apos; # 见本文末尾关于&apos;\t&apos;用法的描述
sed -i &apos;s/^ *//&apos; yun.xml
</code></pre><p>####将每一行拖尾的“空白字符”（空格，制表符）删除</p>
<pre><code>sed &apos;s/[ \t]*$//&apos; # 见本文末尾关于&apos;\t&apos;用法的描述
</code></pre><p>####将每一行中前后空白的字符删除</p>
<pre><code>sed &apos;s/^[ \t]*//;s/[ \t]*$//&apos;
</code></pre><p>####在每一行开头处插入5个空格（使全文向右移动5个字符的位置）</p>
<pre><code>sed &apos;s/^/ /&apos;
</code></pre><p>####以79个字符为宽度，将所有文本右对齐</p>
<pre><code>sed -e :a -e &apos;s/^.\{1,78\}$/ &amp;amp;/;ta&apos; # 78个字符外加最后的一个空格
</code></pre><p>####以79个字符为宽度，使所有文本居中。在方法1中，为了让文本居中每一行的前</p>
<p>####头和后头都填充了空格。 在方法2中，在居中文本的过程中只在文本的前面填充</p>
<p>####空格，并且最终这些空格将有一半会被删除。此外每一行的后头并未填充空格。</p>
<pre><code>sed -e :a -e &apos;s/^.\{1,77\}$/ &amp;amp; /;ta&apos; # 方法1
sed -e :a -e &apos;s/^.\{1,77\}$/ &amp;amp;/;ta&apos; -e &apos;s/\( *\)\1/\1/&apos; # 方法2
</code></pre><p>####在每一行中查找字串“foo”，并将找到的“foo”替换为“bar”</p>
<pre><code>sed &apos;s/foo/bar/&apos; # 只替换每一行中的第一个“foo”字串
sed &apos;s/foo/bar/4&apos; # 只替换每一行中的第四个“foo”字串
sed &apos;s/foo/bar/g&apos; # 将每一行中的所有“foo”都换成“bar”
sed &apos;s/\(.*\)foo\(.*foo\)/\1bar\2/&apos; # 替换倒数第二个“foo”
sed &apos;s/\(.*\)foo/\1bar/&apos; # 替换最后一个“foo”
</code></pre><p>####只在行中出现字串“baz”的情况下将“foo”替换成“bar”</p>
<pre><code>sed &apos;/baz/s/foo/bar/g&apos;
</code></pre><p>####将“foo”替换成“bar”，并且只在行中未出现字串“baz”的情况下替换</p>
<pre><code>sed &apos;/baz/!s/foo/bar/g&apos;
</code></pre><p>####不管是“scarlet”“ruby”还是“puce”，一律换成“red”</p>
<pre><code>sed &apos;s/scarlet/red/g;s/ruby/red/g;s/puce/red/g&apos; #对多数的sed都有效
gsed &apos;s/scarlet\|ruby\|puce/red/g&apos; # 只对GNU sed有效
</code></pre><p>####倒置所有行，第一行成为最后一行，依次类推（模拟“tac”）。</p>
<p>####由于某些原因，使用下面命令时HHsed v1.5会将文件中的空行删除</p>
<pre><code>sed &apos;1!G;h;$!d&apos; # 方法1
sed -n &apos;1!G;h;$p&apos; # 方法2
</code></pre><p>####将行中的字符逆序排列，第一个字成为最后一字，……（模拟“rev”）</p>
<pre><code>sed &apos;/\n/!G;s/\(.\)\(.*\n\)/&amp;amp;\2\1/;//D;s/.//&apos;
</code></pre><p>####将每两行连接成一行（类似“paste”）</p>
<pre><code>sed &apos;$!N;s/\n/ /&apos;
</code></pre><p>####如果当前行以反斜杠“\”结束，则将下一行并到当前行末尾</p>
<p>####并去掉原来行尾的反斜杠</p>
<pre><code>sed -e :a -e &apos;/\\$/N; s/\\\n//; ta&apos;
</code></pre><p>####如果当前行以等号开头，将当前行并到上一行末尾</p>
<p>####并以单个空格代替原来行头的“=”</p>
<pre><code>sed -e :a -e &apos;$!N;s/\n=/ /;ta&apos; -e &apos;P;D&apos;
</code></pre><p>####为数字字串增加逗号分隔符号，将“1234567”改为“1,234,567”</p>
<pre><code>gsed &apos;:a;s/\B[0-9]\{3\}\&amp;gt;/,&amp;amp;/;ta&apos; # GNU sed
sed -e :a -e &apos;s/\(.*[0-9]\)\([0-9]\{3\}\)/\1,\2/;ta&apos; # 其他sed
</code></pre><p>####为带有小数点和负号的数值增加逗号分隔符（GNU sed）</p>
<pre><code>gsed -r &apos;:a;s/(^|[^0-9.])([0-9]+)([0-9]{3})/\1\2,\3/g;ta&apos;
</code></pre><p>####在每5行后增加一空白行 （在第5，10，15，20，等行后增加一空白行）</p>
<pre><code>gsed &apos;0~5G&apos; # 只对GNU sed有效
sed &apos;n;n;n;n;G;&apos; # 其他sed
</code></pre><h1 id="选择性地显示特定行"><a href="#选择性地显示特定行" class="headerlink" title="选择性地显示特定行"></a>选择性地显示特定行</h1><p>####显示文件中的前10行 （模拟“head”的行为）</p>
<pre><code>sed 10q
</code></pre><p>####显示文件中的第一行 （模拟“head -1”命令）</p>
<pre><code>sed q
</code></pre><p>####显示文件中的最后10行 （模拟“tail”）</p>
<pre><code>sed -e :a -e &apos;$q;N;11,$D;ba&apos;
</code></pre><p>####显示文件中的最后2行（模拟“tail -2”命令）</p>
<pre><code>sed &apos;$!N;$!D&apos;
</code></pre><p>####显示文件中的最后一行（模拟“tail -1”）</p>
<pre><code>sed &apos;$!d&apos; # 方法1
sed -n &apos;$p&apos; # 方法2
</code></pre><p>####显示文件中的倒数第二行</p>
<pre><code>sed -e &apos;$!{h;d;}&apos; -e x # 当文件中只有一行时，输入空行
sed -e &apos;1{$q;}&apos; -e &apos;$!{h;d;}&apos; -e x # 当文件中只有一行时，显示该行
sed -e &apos;1{$d;}&apos; -e &apos;$!{h;d;}&apos; -e x # 当文件中只有一行时，不输出
</code></pre><p>####只显示匹配正则表达式的行（模拟“grep”）</p>
<pre><code>sed -n &apos;/regexp/p&apos; # 方法1
sed &apos;/regexp/!d&apos; # 方法2
</code></pre><p>####只显示“不”匹配正则表达式的行（模拟“grep -v”）</p>
<pre><code>sed -n &apos;/regexp/!p&apos; # 方法1，与前面的命令相对应
sed &apos;/regexp/d&apos; # 方法2，类似的语法
</code></pre><p>####查找“regexp”并将匹配行的上一行显示出来，但并不显示匹配行</p>
<pre><code>sed -n &apos;/regexp/{g;1!p;};h&apos;
</code></pre><p>####查找“regexp”并将匹配行的下一行显示出来，但并不显示匹配行</p>
<pre><code>sed -n &apos;/regexp/{n;p;}&apos;
</code></pre><p>####显示包含“regexp”的行及其前后行，并在第一行之前加上“regexp”所</p>
<p>####在行的行号 （类似“grep -A1 -B1”）</p>
<pre><code>sed -n -e &apos;/regexp/{=;x;1!p;g;$!N;p;D;}&apos; -e h
</code></pre><p>####显示包含“AAA”、“BBB”或“CCC”的行（任意次序）</p>
<pre><code>sed &apos;/AAA/!d; /BBB/!d; /CCC/!d&apos; # 字串的次序不影响结果
</code></pre><p>####显示包含“AAA”、“BBB”和“CCC”的行（固定次序）</p>
<pre><code>sed &apos;/AAA.*BBB.*CCC/!d&apos;
</code></pre><p>####显示包含“AAA”“BBB”或“CCC”的行 （模拟“egrep”）</p>
<pre><code>sed -e &apos;/AAA/b&apos; -e &apos;/BBB/b&apos; -e &apos;/CCC/b&apos; -e d # 多数sed
gsed &apos;/AAA\|BBB\|CCC/!d&apos; # 对GNU sed有效
</code></pre><p>####显示包含“AAA”的段落 （段落间以空行分隔）</p>
<p>####HHsed v1.5 必须在“x;”后加入“G;”，接下来的3个脚本都是这样</p>
<pre><code>sed -e &apos;/./{H;$!d;}&apos; -e &apos;x;/AAA/!d;&apos;
</code></pre><p>####显示包含“AAA”“BBB”和“CCC”三个字串的段落 （任意次序）</p>
<pre><code>sed -e &apos;/./{H;$!d;}&apos; -e &apos;x;/AAA/!d;/BBB/!d;/CCC/!d&apos;
</code></pre><p>####显示包含“AAA”、“BBB”、“CCC”三者中任一字串的段落 （任意次序）</p>
<pre><code>sed -e &apos;/./{H;$!d;}&apos; -e &apos;x;/AAA/b&apos; -e &apos;/BBB/b&apos; -e &apos;/CCC/b&apos; -e d
gsed &apos;/./{H;$!d;};x;/AAA\|BBB\|CCC/b;d&apos; # 只对GNU sed有效
</code></pre><p>####显示包含65个或以上字符的行</p>
<pre><code>sed -n &apos;/^.\{65\}/p&apos;
</code></pre><p>####显示包含65个以下字符的行</p>
<pre><code>sed -n &apos;/^.\{65\}/!p&apos; # 方法1，与上面的脚本相对应
sed &apos;/^.\{65\}/d&apos; # 方法2，更简便一点的方法
</code></pre><p>####显示部分文本——从包含正则表达式的行开始到最后一行结束</p>
<pre><code>sed -n &apos;/regexp/,$p&apos;
</code></pre><p>####显示部分文本——指定行号范围（从第8至第12行，含8和12行）</p>
<pre><code>sed -n &apos;8,12p&apos; # 方法1
sed &apos;8,12!d&apos; # 方法2
</code></pre><p>####显示第52行</p>
<pre><code>sed -n &apos;52p&apos; # 方法1
sed &apos;52!d&apos; # 方法2
sed &apos;52q;d&apos; # 方法3, 处理大文件时更有效率
</code></pre><p>####从第3行开始，每7行显示一次</p>
<pre><code>gsed -n &apos;3~7p&apos; # 只对GNU sed有效
sed -n &apos;3,${p;n;n;n;n;n;n;}&apos; # 其他sed
</code></pre><p>####显示两个正则表达式之间的文本（包含）</p>
<pre><code>sed -n &apos;/Iowa/,/Montana/p&apos; # 区分大小写方式
</code></pre><h1 id="选择性地删除特定行"><a href="#选择性地删除特定行" class="headerlink" title="选择性地删除特定行"></a>选择性地删除特定行</h1><p>####显示通篇文档，除了两个正则表达式之间的内容</p>
<pre><code>sed &apos;/Iowa/,/Montana/d&apos;
</code></pre><p>####删除文件中相邻的重复行（模拟“uniq”）</p>
<p>####只保留重复行中的第一行，其他行删除</p>
<pre><code>sed &apos;$!N; /^\(.*\)\n\1$/!P; D&apos;
</code></pre><p>####删除文件中的重复行，不管有无相邻。注意hold space所能支持的缓存</p>
<p>####大小，或者使用GNU sed。</p>
<pre><code>sed -n &apos;G; s/\n/&amp;amp;&amp;amp;/; /^\([ -~]*\n\).*\n\1/d; s/\n//; h; P&apos;
</code></pre><p>####删除除重复行外的所有行（模拟“uniq -d”）</p>
<pre><code>sed &apos;$!N; s/^\(.*\)\n\1$/\1/; t; D&apos;
</code></pre><p>####删除文件中开头的10行</p>
<pre><code>sed &apos;1,10d&apos;
</code></pre><p>####删除文件中的最后一行</p>
<pre><code>sed &apos;$d&apos;
</code></pre><p>####删除文件中的最后两行</p>
<pre><code>sed &apos;N;$!P;$!D;$d&apos;
</code></pre><p>####删除文件中的最后10行</p>
<pre><code>sed -e :a -e &apos;$d;N;2,10ba&apos; -e &apos;P;D&apos; # 方法1
sed -n -e :a -e &apos;1,10!{P;N;D;};N;ba&apos; # 方法2
</code></pre><p>####删除8的倍数行</p>
<pre><code>gsed &apos;0~8d&apos; # 只对GNU sed有效
sed &apos;n;n;n;n;n;n;n;d;&apos; # 其他sed
</code></pre><p>####删除匹配式样的行</p>
<pre><code>sed &apos;/pattern/d&apos; # 删除含pattern的行。当然pattern可以换成任何有效的正则表达式
</code></pre><p>####删除文件中的所有空行（与“grep ‘.’ ”效果相同）</p>
<pre><code>sed &apos;/^$/d&apos; # 方法1
sed &apos;/./!d&apos; # 方法2
</code></pre><p>####只保留多个相邻空行的第一行。并且删除文件顶部和尾部的空行。</p>
<p>####（模拟“cat -s”）</p>
<pre><code>sed &apos;/./,/^$/!d&apos; #方法1，删除文件顶部的空行，允许尾部保留一空行
sed &apos;/^$/N;/\n$/D&apos; #方法2，允许顶部保留一空行，尾部不留空行
</code></pre><p>####只保留多个相邻空行的前两行。</p>
<pre><code>sed &apos;/^$/N;/\n$/N;//D&apos;
</code></pre><p>####删除文件顶部的所有空行</p>
<pre><code>sed &apos;/./,$!d&apos;
</code></pre><p>####删除文件尾部的所有空行</p>
<pre><code>sed -e :a -e &apos;/^\n*$/{$d;N;ba&apos; -e &apos;}&apos; # 对所有sed有效
sed -e :a -e &apos;/^\n*$/N;/\n$/ba&apos; # 同上，但只对 gsed 3.02.*有效
</code></pre><p>####删除每个段落的最后一行</p>
<pre><code>sed -n &apos;/^$/{p;h;};/./{x;/./p;}&apos;
</code></pre><h2 id="特殊应用"><a href="#特殊应用" class="headerlink" title="特殊应用"></a>特殊应用</h2><p>####移除手册页（man page）中的nroff标记。在Unix System V或bash shell下使</p>
<p>####用’echo’命令时可能需要加上 -e 选项。</p>
<pre><code>sed &quot;s/.`echo \\\b`//g&quot; # 外层的双括号是必须的（Unix环境）
sed &apos;s/.^H//g&apos; # 在bash或tcsh中, 按 Ctrl-V 再按 Ctrl-H
sed &apos;s/.\x08//g&apos; # sed 1.5，GNU sed，ssed所使用的十六进制的表示方法
</code></pre><p>####提取新闻组或 e-mail 的邮件头</p>
<pre><code>sed &apos;/^$/q&apos; # 删除第一行空行后的所有内容
</code></pre><p>####提取新闻组或 e-mail 的正文部分\</p>
<pre><code>sed &apos;1,/^$/d&apos; # 删除第一行空行之前的所有内容
</code></pre><p>####从邮件头提取“Subject”（标题栏字段），并移除开头的“Subject:”字样</p>
<pre><code>sed &apos;/^Subject: */!d; s///;q&apos;
</code></pre><p>####从邮件头获得回复地址</p>
<pre><code>sed &apos;/^Reply-To:/q; /^From:/h; /./d;g;q&apos;
</code></pre><p>####获取邮件地址。在上一个脚本所产生的那一行邮件头的基础上进一步的将非电邮</p>
<p>####地址的部分剃除。（见上一脚本）</p>
<pre><code>sed &apos;s/ *(.*)//; s/&amp;gt;.*//; s/.*[:&amp;lt;] *//&apos;
</code></pre><p>####在每一行开头加上一个尖括号和空格（引用信息）</p>
<pre><code>sed &apos;s/^/&amp;gt; /&apos;
</code></pre><p>####将每一行开头处的尖括号和空格删除（解除引用）</p>
<pre><code>sed &apos;s/^&amp;gt; //&apos;
</code></pre><p>####移除大部分的HTML标签（包括跨行标签）</p>
<pre><code>sed -e :a -e &apos;s/&amp;lt;[^&amp;gt;]*&amp;gt;//g;/
</code></pre><p>####将分成多卷的uuencode文件解码。移除文件头信息，只保留uuencode编码部分。</p>
<p>####文件必须以特定顺序传给sed。下面第一种版本的脚本可以直接在命令行下输入；</p>
<p>####第二种版本则可以放入一个带执行权限的shell脚本中。（由Rahul Dhesi的一</p>
<p>####个脚本修改而来。）</p>
<pre><code>sed &apos;/^end/,/^begin/d&apos; file1 file2 ... fileX | uudecode # vers. 1
sed &apos;/^end/,/^begin/d&apos; &quot;$@&quot; | uudecode # vers. 2
</code></pre><p>####将文件中的段落以字母顺序排序。段落间以（一行或多行）空行分隔。GNU sed使用</p>
<p>####字元“\v”来表示垂直制表符，这里用它来作为换行符的占位符——当然你也可以</p>
<p>####用其他未在文件中使用的字符来代替它。</p>
<pre><code>sed &apos;/./{H;d;};x;s/\n/={NL}=/g&apos; file | sort | sed &apos;1s/={NL}=//;s/={NL}=/\n/g&apos;
gsed &apos;/./{H;d};x;y/\n/\v/&apos; file | sort | sed &apos;1s/\v//;y/\v/\n/&apos;
</code></pre><p>####分别压缩每个.TXT文件，压缩后删除原来的文件并将压缩后的.ZIP文件</p>
<p>####命名为与原来相同的名字（只是扩展名不同）。（DOS环境：“dir /b”</p>
<p>####显示不带路径的文件名）。</p>
<pre><code>echo @echo off &amp;gt;zipup.bat
dir /b *.txt | sed &quot;s/^\(.*\)\.TXT/pkzip -mo \1 \1.TXT/&quot; &amp;gt;&amp;gt;zipup.bat
</code></pre><p>＞　使 用SED：Sed接受一个或多个编辑命令，并且每读入一行后就依次应用这些命令。当读入第一行输入后，sed对其应用所有的命令，然后将结果输出。接着再<br><br>＞　读入第二行输入，对其应用所有的命令……并重复这个过程。上一个例子中sed由标准输入设备（即命令解释器，通常是以管道输入的形式）获得输入。在命令行<br> ＞　给出一个或多个文件名作为参数时，这些文件取代标准输入设备成为sed的输入。sed的输出将被送到标准输出（显示器）。因此：</p>
<pre><code>cat filename | sed &apos;10q&apos;         # 使用管道输入
sed &apos;10q&apos; filename                 # 同样效果，但不使用管道输入
sed &apos;10q&apos; filename &amp;gt; newfile     # 将输出转移（重定向）到磁盘上
</code></pre><p>要 了解sed命令的使用说明，包括如何通过脚本文件（而非从命令行）来使用这些命令，请参阅《sed &amp; awk》第二版，作者Dale Dougherty和Arnold <br> Robbins（O’Reilly，1997；<a href="http://www.ora.com），《UNIX" target="_blank" rel="external">http://www.ora.com），《UNIX</a> Text Processing》，作者Dale Dougherty和Tim O’Reilly（Hayden Books，1987）或者是Mike <br> Arst写的教程——压缩包的名称是“U-SEDIT2.ZIP”（在许多站点上都找得到）。要发掘sed的潜力，则必须对“正则表达式”有足够的理解。<br><br> 正则表达式的资料可以看《Mastering Regular Expressions》作者Jeffrey Friedl（O’reilly 1997）。<br><br> Unix系统所提供的手册页（“man”）也会有所帮助（试一下这些命令“man sed”、“man regexp”，或者看“man <br> ed”中关于正则表达式的部分），但手册提供的信息比较“抽象”——这也是它一直为人所诟病的。<br><br> 不过，它本来就不是用来教初学者如何使用sed或正则表达 式的教材，而只是为那些熟悉这些工具的人提供的一些文本参考。<br><br><br></p>
<h2 id="括号语法："><a href="#括号语法：" class="headerlink" title="括号语法："></a>括号语法：</h2><p>前面的例子对sed命令基本上都使用单引号（’…’）而非双 <br> 引号（”…”）这是因为sed通常是在Unix平台上使用。单引号下，Unix的shell（命令解释器）不会对美元符（$）和后引号（<code>...</code>） <br> 进行解释和执行。而在双引号下美元符会被展开为变量或参数的值，后引号中的命令被执行并以输出的结果代替后引号中的内容。而在“csh”及其衍生的 <br> shell中使用感叹号（!）时需要在其前面加上转义用的反斜杠（就像这样：!）以保证上面所使用的例子能正常运行（包括使用单引号的情况下）。DOS <br> 版本的Sed则一律使用双引号（”…”）而不是引号来圈起命令。<br></p>
<h2 id="‘-t’的用法："><a href="#‘-t’的用法：" class="headerlink" title="‘\t’的用法："></a>‘\t’的用法：</h2><p>为了使本文保持行文简洁，我们在脚本中使用’\t’ <br> 来表示一个制表符。但是现在大部分版本的sed还不能识别’\t’的简写方式，因此当在命令行中为脚本输入制表符时，你应该直接按TAB键来输入制表符而 <br> 不是输入’\t’。下列的工具软件都支持’\t’做为一个正则表达式的字元来表示制表符：awk、perl、HHsed、sedmod以及GNU sed v3.02.80。<br></p>
<h2 id="不同版本的SED："><a href="#不同版本的SED：" class="headerlink" title="不同版本的SED："></a>不同版本的SED：</h2><p>不同的版本间的sed会有些不同之处，可以想象它们之间在语法上会有差异。具体而言，它们 中大部分不支持在编辑命令中间使用标签（:name）或<br><br>分支命令（b,t），除非是放在那些的末尾。这篇文档中我们尽量选用了可移植性较高的语法，以使大 <br> 多数版本的sed的用户都能使用这些脚本。不过GNU版本的sed允许使用更简洁的语法。想像一下当读者看到一个很长的命令时的心情：<br></p>
<pre><code>sed -e &apos;/AAA/b&apos; -e &apos;/BBB/b&apos; -e &apos;/CCC/b&apos; -e d
</code></pre><p>好消息是GNU sed能让命令更紧凑：</p>
<pre><code>sed &apos;/AAA/b;/BBB/b;/CCC/b;d&apos;         # 甚至可以写成
sed &apos;/AAA\|BBB\|CCC/b;d&apos;
</code></pre><p>此外，请注意虽然许多版本的sed接受象“/one/ s/RE1/RE2/”这种在’s’前带有空格的命令，但这些版本中有些却不接受这样的命令:“/one/! s/RE1/RE2/”。这时只需要把中间的空格去掉就行了。</p>
<p>速度优化：当由于某种原因（比如输入文件较大、处理器或硬盘较慢等）需要提高命令执行速度时，可以考虑在替换命令（“s/…/…/”）前面加上地址表达式来提高速度。举例来说：</p>
<pre><code>sed &apos;s/foo/bar/g&apos; filename         # 标准替换命令
sed &apos;/foo/ s/foo/bar/g&apos; filename     # 速度更快
sed &apos;/foo/ s//bar/g&apos; filename         # 简写形式
</code></pre><p>当只需要显示文件的前面的部分或需要删除后面的内容时，可以在脚本中使用“q”<br>命令（退出命令）。在处理大的文件时，这会节省大量时间。因此：</p>
<pre><code>sed -n &apos;45,50p&apos; filename             # 显示第45到50行
sed -n &apos;51q;45,50p&apos; filename         # 一样，但快得多
</code></pre><p>如 果你有其他的单行脚本想与大家分享或者你发现了本文档中错误的地方，请发电子邮件给本文档的作者（Eric Pement）。邮件中请记得提供你所使用的sed版本、 该sed所运行的操作系统及对问题的适当描述。本文所指的单行脚本指命令行的长度在65个字符或65个以下的sed脚本〔译注1〕。本文档的各种脚本是由 以下所列作者所写或提供：</p>
<pre><code>Al Aab # 建立了“seders”邮件列表
Edgar Allen # 许多方面
Yiorgos Adamopoulos # 许多方面
Dale Dougherty # 《sed &amp;amp; awk》作者
Carlos Duarte # 《do it with sed》作者
Eric Pement # 本文档的作者
Ken Pizzini # GNU sed v3.02 的作者
S.G. Ravenhall # 去html标签脚本
Greg Ubben # 有诸多贡献并提供了许多帮助
-------------------------------------------------------------------------
</code></pre><p>译 注1：大部分情况下，sed脚本无论多长都能写成单行的形式（通过<code>-e&#39;选项和</code>;’号）——只要命令解释器支持，所以这里说的单行脚本除了能写成一行 还对长度有所限制。因为这些单行脚本的意义不在于它们是以单行的形式出现。而是让用户能方便地在命令行中使用这些紧凑的脚本才是其意义所在。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell 补漏笔记]]></title>
      <url>http://percychen.com/2015/04/15/2015-04-15-ShellExpandNote/</url>
      <content type="html"><![CDATA[<p>###read</p>
<p>-n 控制输入字符数量然后自动继续执行。</p>
<pre><code>read -n 1 option
</code></pre><p>-t 超以秒为单位</p>
<pre><code>read -t 5 -p &quot;请输入选项，５秒后默认放弃&quot;　options
</code></pre><h1 id="History"><a href="#History" class="headerlink" title="History"></a>History</h1><p>  Ctrl ＋ R搜索历史命令<br><br>  !ad    将会自动执行 以ad开头的文件<br><br>  HISTCONTROL=erasedups  删除重复命令<br><br>  HISTCONTROL=ignoredups 不记录重复命令<br></p>
<h2 id="字段分隔符"><a href="#字段分隔符" class="headerlink" title="字段分隔符"></a>字段分隔符</h2><p> 默认分隔符为：　空格，制表符，换行符</p>
<p>###IFS的用法</p>
<pre><code>IFS=$&apos;\n&apos;  　　表示分隔符仅为换行符
IFS=$&apos;\n;:&quot;&apos;     表示分隔符为换行符，分号，冒号，双引号
</code></pre><h2 id="参数传递"><a href="#参数传递" class="headerlink" title="参数传递"></a>参数传递</h2><pre><code>$#   计算参数的个数
</code></pre><p>#####$*和$@的区别</p>
<blockquote>
<p>$* 会把　we have a question　当做　“we have a question”处理</p>
<p>$@ 会把　we have a question　当做　“we” “have” “a” “question”处理</p>
</blockquote>
<h1 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h1><pre><code>wget -S --spider  + URL 检测文件是否存在
</code></pre><h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><p>获取文件大小</p>
<pre><code>cat filename | wc -c
</code></pre><h2 id="删除重复行"><a href="#删除重复行" class="headerlink" title="删除重复行"></a>删除重复行</h2><pre><code>sort &lt; urfile | uniq &gt; result.txt
</code></pre><h2 id="if条件语句判断"><a href="#if条件语句判断" class="headerlink" title="if条件语句判断"></a>if条件语句判断</h2><table>
<thead>
<tr>
<th>code</th>
<th>释义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-n str1　</td>
<td>　　　　　　 当串的长度大于0时为真(串非空)</td>
</tr>
<tr>
<td>-z str1　　　</td>
<td>　　　　 当串的长度为0时为真(空串)</td>
</tr>
<tr>
<td>str1　　</td>
<td>　　　　　　   当串str1为非空时为真</td>
</tr>
<tr>
<td>int1 -eq int2　</td>
<td>　　　两数相等为真</td>
</tr>
<tr>
<td>int1 -ne int2　</td>
<td>　　　两数不等为真</td>
</tr>
<tr>
<td>int1 -gt int2　</td>
<td>　　　int1大于int2为真</td>
</tr>
<tr>
<td>int1 -ge int2　</td>
<td>　　　int1大于等于int2为真</td>
</tr>
<tr>
<td>int1 -lt int2　</td>
<td>　　　int1小于int2为真</td>
</tr>
<tr>
<td>int1 -le int2　　</td>
<td>　　int1小于等于int2为真</td>
</tr>
<tr>
<td>-r file　　</td>
<td>　　　用户可读为真</td>
</tr>
<tr>
<td>-w file　　</td>
<td>　　　用户可写为真</td>
</tr>
<tr>
<td>-x file　　</td>
<td>　　　用户可执行为真</td>
</tr>
<tr>
<td>-c file　　</td>
<td>　　　文件为字符特殊文件为真</td>
</tr>
<tr>
<td>-b file　　</td>
<td>　　　文件为块特殊文件为真</td>
</tr>
<tr>
<td>-s file　　</td>
<td>　　　文件大小非0时为真</td>
</tr>
<tr>
<td>-t file　　</td>
<td>　　　当文件描述符(默认为1)指定的设备为终端时为真</td>
</tr>
<tr>
<td>-a 　 　　</td>
<td>　　　 与</td>
</tr>
<tr>
<td>-o　　　　</td>
<td>　　　 或</td>
</tr>
<tr>
<td>!　　　　　</td>
<td>　　　非</td>
</tr>
</tbody>
</table>
<h2 id="date计算"><a href="#date计算" class="headerlink" title="date计算"></a>date计算</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">~ ♪ date <span class="_">-d</span> <span class="string">"20151012 1days"</span> <span class="string">"+%Y%m%d"</span></div><div class="line">20151013</div><div class="line">~ ♪ date <span class="_">-d</span> <span class="string">"20151012 1days ago"</span> <span class="string">"+%Y%m%d"</span></div><div class="line">20151011</div></pre></td></tr></table></figure>
<h2 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git_path_target=<span class="string">"AAaa_aaAA"</span></div><div class="line"><span class="built_in">declare</span> <span class="_">-l</span> git_path_target</div><div class="line"><span class="built_in">echo</span> <span class="variable">$git_path_target</span></div><div class="line">---&gt; aaaa_aaaa</div><div class="line">git_path_target=<span class="string">"AAaa_aaAA"</span></div><div class="line"><span class="built_in">declare</span> -u git_path_target</div><div class="line"><span class="built_in">echo</span> <span class="variable">$git_path_target</span></div><div class="line">---&gt; AAAA_AAAA</div></pre></td></tr></table></figure>
<p>or user tr command</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu开机启动小键盘]]></title>
      <url>http://percychen.com/2015/04/13/2015-04-13-AutoOpenNumberLock/</url>
      <content type="html"><![CDATA[<h2 id="开机启动小键盘的方法"><a href="#开机启动小键盘的方法" class="headerlink" title="开机启动小键盘的方法"></a>开机启动小键盘的方法</h2><ol>
<li><p>安装numlockx：</p>
<pre><code>sudo apt-get install numlockx
</code></pre></li>
<li><p>编辑配置文件：</p>
<pre><code>sudo gedit /etc/lightdm/lightdm.conf
</code></pre></li>
</ol>
<p>最后一行加入：</p>
<pre><code>greeter-setup-script=/usr/bin/numlockx on
</code></pre><p>重启生效</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vim学习笔记]]></title>
      <url>http://percychen.com/2015/04/08/2015-04-08-studyvim/</url>
      <content type="html"><![CDATA[<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>:WMToggle</td>
<td>打开文件管理器</td>
</tr>
<tr>
<td>ctrl +w</td>
<td>在不同的窗口间切换</td>
</tr>
<tr>
<td>ctrl+w v</td>
<td>水平增加一个窗口</td>
</tr>
<tr>
<td>ctrl+w c</td>
<td>关闭当前窗口</td>
</tr>
<tr>
<td>n/N</td>
<td>查找上一个/下一个匹配项</td>
</tr>
<tr>
<td>/+关键字</td>
<td>从上往下查找</td>
</tr>
<tr>
<td>?+关键字</td>
<td>从下往上查找</td>
</tr>
<tr>
<td>:wall</td>
<td>保存所有</td>
</tr>
<tr>
<td>:qall</td>
<td>退出所有</td>
</tr>
</tbody>
</table>
<h2 id="光标移动"><a href="#光标移动" class="headerlink" title="光标移动"></a>光标移动</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>G</td>
<td>跳转到最后一行</td>
</tr>
<tr>
<td>h</td>
<td>光标左移</td>
</tr>
<tr>
<td>j</td>
<td>光标下移</td>
</tr>
<tr>
<td>k</td>
<td>光标上移</td>
</tr>
<tr>
<td>l</td>
<td>光标右移</td>
</tr>
</tbody>
</table>
<h1 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h1><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>“+y</td>
<td>复制到系统剪切板</td>
</tr>
<tr>
<td>“+p</td>
<td>从剪切板复制到当前光标处</td>
</tr>
<tr>
<td>yy/Y</td>
<td>复制整段</td>
</tr>
<tr>
<td>nyy</td>
<td>复制光标以下n行</td>
</tr>
</tbody>
</table>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>x</td>
<td>删除当前光标下的字符</td>
</tr>
<tr>
<td>dd</td>
<td>删除整行</td>
</tr>
<tr>
<td>dw</td>
<td>删除当前单词后面所有字符</td>
</tr>
<tr>
<td>D</td>
<td>删除当前光标后面的整行</td>
</tr>
<tr>
<td>r</td>
<td>替换插入模式</td>
</tr>
<tr>
<td>ndd</td>
<td>删除光标以下n行</td>
</tr>
</tbody>
</table>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>i</td>
<td>在光标之前进入插入模式</td>
</tr>
<tr>
<td>a</td>
<td>在光标之后进入插入模式</td>
</tr>
<tr>
<td>A</td>
<td>在光标行尾进入插入模式</td>
</tr>
</tbody>
</table>
<h2 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h2><table>
<thead>
<tr>
<th>命令</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>s/old/new/g</td>
<td>在当前行用new来替换old</td>
</tr>
<tr>
<td>n,ms/old/new/g</td>
<td>在n行到m行之间用new来替换old</td>
</tr>
<tr>
<td>%s/old/new/g</td>
<td>在全文中用new来替换old</td>
</tr>
<tr>
<td>%s/old/new/gc</td>
<td>在全文中用new来替换old，每次替换都提示</td>
</tr>
</tbody>
</table>
<h2 id="以普通用户启动的Vim如何保存需要root权限的文件"><a href="#以普通用户启动的Vim如何保存需要root权限的文件" class="headerlink" title="以普通用户启动的Vim如何保存需要root权限的文件"></a>以普通用户启动的Vim如何保存需要root权限的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:w !sudo tee %</div></pre></td></tr></table></figure>
<p>输入密码即可</p>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><h2 id="cscope-使用"><a href="#cscope-使用" class="headerlink" title="cscope 使用"></a>cscope 使用</h2><p>查找调用 某函数的地方（example： ui_succeed）:</p>
<pre><code>:cs find c ui_succeed
</code></pre><p>通常情况下，会列出第一个找到的匹配项，如果有很多个那就悲剧了，不过这个时候，你可以在控制台输入</p>
<pre><code>:cw
</code></pre><p>就会列出所有匹配的文件了，然后通过ctrl+w切换到不同窗口去就可以了</p>
<h2 id="vimrc配置"><a href="#vimrc配置" class="headerlink" title=".vimrc配置"></a>.vimrc配置</h2><blockquote>
<p>set nu! “显示行号<br><br>hi linenr ctermfg=Darkgray    “行号颜色<br><br>let g:winManagerWindowLayout = “BufExplorer,FileExplorer”  “文件管理器界面，左文件管理。右边代码查看  </p>
</blockquote>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><p>查看版本号：</p>
<pre><code>:version
</code></pre><h2 id="其它插件安装"><a href="#其它插件安装" class="headerlink" title="其它插件安装"></a>其它插件安装</h2><pre><code>apt-get install vim
apt-get install vim-youcompleteme
apt-get install vim-addon-manager
vam install youcompleteme
:BundleInstall
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[显卡性能天梯图（2015年1月）]]></title>
      <url>http://percychen.com/2015/03/17/2015-03-17-2015GPUarrange/</url>
      <content type="html"><![CDATA[<h2 id="点击图片查看高清无码大图"><a href="#点击图片查看高清无码大图" class="headerlink" title="点击图片查看高清无码大图"></a><strong>点击图片查看高清无码大图</strong></h2><p><a href="/img/gpu.jpg"><img src="/img/gpu.jpg" alt="GPU"></a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于Dialog的学习]]></title>
      <url>http://percychen.com/2015/03/14/2015-03-14-AndroidDialog/</url>
      <content type="html"><![CDATA[<p>这里的Dialog是用的AlertDialog.build实现的，而且，支持多种方式自定义<br>不多说，直接上代码：</p>
<pre><code>private void chosePercentAutoOpen() {
AlertDialog.Builder builder=new Builder(PowerSaveModeActivity.this,R.style.YunDialogTheme);
builder.setTitle(getResources().getString(R.string.auto_open_super_mode));
builder.setSingleChoiceItems(new String[]{
        getResources().getString(R.string.power_90),
        getResources().getString(R.string.power_80),
        getResources().getString(R.string.power_70),
        getResources().getString(R.string.power_60),
        getResources().getString(R.string.power_50),
        getResources().getString(R.string.power_40)}
, 5, new DialogInterface.OnClickListener(){
    @Override
    public void onClick(DialogInterface arg0, int position) {
        System.out.println(&quot;你选择了第&quot;+position+&quot;项&quot;);

    }
}).setNegativeButton(getResources().getString(R.string.cancle),null).show();
}
</code></pre><blockquote>
<p>如果弹出的弹出框是双层的，可以在那个主题下定义一个：</p>
</blockquote>
<pre><code>&lt;item name=&quot;android:windowBackground&quot;&gt;@drawable/transparent&lt;/item&gt;
</code></pre><blockquote>
<p>这样就将后面的弹出框给隐藏了</p>
</blockquote>
<p>本次文章实现的是单选框。<a href="http://www.oschina.net/question/54100_32486" target="_blank" rel="external">更多详情可以点击这里进行学习</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 中 字符替代的用法]]></title>
      <url>http://percychen.com/2015/03/14/2015-03-14-AndroidStringwildcard/</url>
      <content type="html"><![CDATA[<h2 id="一-使用xliff的用法："><a href="#一-使用xliff的用法：" class="headerlink" title="一. 使用xliff的用法："></a>一. 使用xliff的用法：</h2><p>####<xliff:g>标签介绍：</xliff:g></p>
<blockquote>
<p>属性id可以随便命名<br>属性值举例说明</p>
</blockquote>
<pre><code>%n$ms：代表输出的是字符串，n代表是第几个参数，设置m的值可以在输出之前放置空格
%n$md：代表输出的是整数，n代表是第几个参数，设置m的值可以在输出之前放置空格，也可以设为0m,在输出之前放置m个0
%n$mf：代表输出的是浮点数，n代表是第几个参数，设置m的值可以控制小数位数，如m=2.2时，输出格式为00.00
</code></pre><p>也可简单写成：</p>
<pre><code>%d   （表示整数）
%f    （表示浮点数）
%s   （表示字符串）
</code></pre><p>####使用步骤举例：</p>
<ul>
<li><p>记得要在字符文件中加上这些：</p>
<p>  &lt;?xml version=”1.0” encoding=”utf-8”?&gt;</p>
  <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

</resources></li>
</ul>
<p>+</p>
<pre><code>&lt;string name=&quot;test_xliff&quot;&gt;小姐今年&lt;xliff:g id=&quot;xxx&quot;&gt;%1d&lt;/xliff:g&gt;岁了，上&lt;xliff:g id=&quot;yyy&quot;&gt;%2s&lt;/xliff:g&gt;年级！&lt;/string&gt;
</code></pre><ul>
<li><p>或者</p>
  <string name="test_xliff">小姐今年<xliff:g id="xxx">%d</xliff:g>岁了，上<xliff:g id="yyy">%s</xliff:g>年级！</string>
</li>
<li><p>加上参数和空格的写法是：</p>
   <string name="test_xliff">小姐今年<xliff:g id="xxx">%1$3d</xliff:g>岁了，上<xliff:g id="yyy">%2$5s</xliff:g>年级！</string>

</li>
</ul>
<p>+</p>
<pre><code>String test = String.format(getResources().getString(R.string.test_xliff), 7, &quot;二&quot;);
</code></pre><p>输出：</p>
<pre><code>小姐今年7岁了，上二年级！
加上参数和空格的输出：
小姐今年   7岁了，上     二年级！
</code></pre><h2 id="二-不使用xliff的用法："><a href="#二-不使用xliff的用法：" class="headerlink" title=" 二.不使用xliff的用法："></a> 二.不使用xliff的用法：</h2><ul>
<li><p>整型，比如“小姐今年23岁了”，这个23是整型的。在string.xml中可以这样写，</p>
  <string name="old">小姐今年%1$d岁了</string>
</li>
<li><p>在程序中，使用</p>
<p>  String sAgeFormat = getResources().getString(R.string.old);<br>  String sFinalAge = String.format(sAgeFormat, 23);</p>
</li>
</ul>
<p>将%1$d替换为23；</p>
<p>%1$d表达的意思是整个name=”old”中，第一个整型的替代。如果一个name中有两个需要替换的整型内容，则第二个写为：%2$d，以此类推；具体程序中替换见下面的string型；</p>
<ul>
<li>string型，比如“我的名字叫李四，我来自首都北京”；这里的“李四”和“首都北京”都需要替换。</li>
</ul>
<p>在string.xml中可以这样写:</p>
<pre><code>&lt;string name=&quot;alert&quot;&gt;我的名字叫%1$s，我来自%2$s&lt;/string&gt;
</code></pre><p>在程序中：</p>
<pre><code>String sAgeFormatString sAgeFormat1= getResources().getString(R.string.alert);
String sFinal1 = String.format(sAgeFormat1, &quot;李四&quot;,&quot;首都北京&quot;);
</code></pre><p>这里两个string需要替换的，按照上面程序的顺序依次对应。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[for循环的应用（shell）]]></title>
      <url>http://percychen.com/2015/03/10/2015-03-10-forCommand/</url>
      <content type="html"><![CDATA[<h2 id="for循环遍历语句"><a href="#for循环遍历语句" class="headerlink" title="for循环遍历语句"></a>for循环遍历语句</h2><p>####语法</p>
<pre><code>for i in * ; do
#处理你找出来的文件
done
</code></pre><p>例子： 签名所有apk文件</p>
<pre><code>for i in *.apk ; do
echo 正在签名 $i
java -jar signapk.jar testkey.x509.pem testkey.pk8 $i yusun_$i
echo 完成 $i签名
done
</code></pre><p>for循环从变量读取列表</p>
<pre><code>list=&quot;yun sun mo yin&quot;
for state in $list
do
    echo &quot;I love $state&quot;
done
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[cp命令详解【转】]]></title>
      <url>http://percychen.com/2015/03/09/2015-03-09-cpCommand/</url>
      <content type="html"><![CDATA[<p><a href="http://www.linuxso.com/command/cp.html" target="_blank" rel="external">原帖地址</a></p>
<p>###参数：</p>
<pre><code>-a ：相当于 -pdr 的意思；
-d ：若来源文件为连结文件的属性(link file)，则复制连结文件属性而非档案本身；
-f ：为强制 (force) 的意思，若有重复或其它疑问时，不会询问使用者，而强制复制；
-i ：若目的檔(destination)已经存在时，在覆盖时会先询问是否真的动作！
-l ：进行硬式连结 (hard link) 的连结档建立，而非复制档案本身；
-p ：连同档案的属性一起复制过去，而非使用预设属性；
-r ：递归持续复制，用于目录的复制行为；
-s ：复制成为符号连结文件 (symbolic link)，亦即『快捷方式』档案；
-u ：若 destination 比 source 旧才更新 destination ！
</code></pre><p>最后需要注意的，如果来源档有两个以上，则最后一个目的文件一定要是『目录』才行！</p>
<p>###范例：</p>
<blockquote>
<p>范例一：将家目录下的 .bashrc 复制到 /tmp 下，并更名为 bashrc</p>
</blockquote>
<pre><code>[root@linux ~]# cd /tmp
[root@linux tmp]# cp ~/.bashrc bashrc
[root@linux tmp]# cp -i ~/.bashrc bashrc
cp: overwrite `basrhc’? n
# 重复作两次动作，由于 /tmp 底下已经存在 bashrc 了，加上 -i 参数，
# 则在覆盖前会询问使用者是否确定！可以按下 n 或者 y 呢！
# 但是，反过来说，如果不想要询问时，则加上 -f 这个参数来强制直接覆盖！
</code></pre><blockquote>
<p>范例二：将 /var/log/wtmp 复制到 /tmp 底下</p>
</blockquote>
<pre><code>[root@linux tmp]# cp /var/log/wtmp .
&lt;==想要复制到目前的目录，最后的 . 不要忘
[root@linux tmp]# ls -l /var/log/wtmp wtmp
-rw-rw-r– 1 root utmp 71808 Jul 18 12:46 /var/log/wtmp
-rw-r–r– 1 root root 71808 Jul 18 21:58 wtmp
# 注意到了吗？！在不加任何参数的情况下，档案的所属者会改变，连权限也跟着改变了～
# 这是个很重要的特性！要注意喔！还有，连档案建立的时间也不一样了！
# 如果您想要将档案的所有特性都一起复制过来，可以加上 -a 喔！
[root@linux tmp]# cp -a /var/log/wtmp wtmp_2
[root@linux tmp]# ls -l /var/log/wtmp wtmp_2
-rw-rw-r– 1 root utmp 71808 Jul 18 12:46 /var/log/wtmp
-rw-rw-r– 1 root utmp 71808 Jul 18 12:46 wtmp_2
# 瞭了吧！整个资料特性完全一模一样ㄟ！真是不赖～这就是 -a 的特性！
</code></pre><blockquote>
<p>范例三：复制 /etc/ 这个目录下的所有内容到 /tmp 底下</p>
</blockquote>
<pre><code>[root@linux tmp]# cp /etc/ /tmp
cp: omitting directory `/etc’ &lt;== 如果是目录，不能直接复制，要加上 -r 的参数
[root@linux tmp]# cp -r /etc/ /tmp
# 还是要再次的强调喔！ -r 是可以复制目录，但是，档案与目录的权限会被改变～
# 所以，也可以利用 cp -a /etc /tmp 来下达指令喔！
</code></pre><blockquote>
<p>范例四：将范例一复制的 bashrc 建立一个连结档 (symbolic link)</p>
</blockquote>
<pre><code>[root@linux tmp]# ls -l bashrc
-rw-r–r– 1 root root 395 Jul 18 22:08 bashrc
[root@linux tmp]# cp -s bashrc bashrc_slink
[root@linux tmp]# cp -l bashrc bashrc_hlink
[root@linux tmp]# ls -l bashrc*
-rw-r–r– 2 root root 395 Jul 18 22:08 bashrc
-rw-r–r– 2 root root 395 Jul 18 22:08 bashrc_hlink
lrwxrwxrwx 1 root root 6 Jul 18 22:31 bashrc_slink -&gt; bashrc
# 那个 bashrc_slink 是由 -s 的参数造成的，建立的是一个『快捷方式』，
# 所以您会看到在档案的最右边，会显示这个档案是『连结』到哪里去的！
# 至于那个 bashrc_hlink 有趣了！建立了这个档案之后， bashrc 与 bashrc_hlink
# 所有的参数都一样，只是，第二栏的 link 数改变成为 2 了～而不是原本的 1 喔！
# 这两种连结的方式的异同，我们会在下一章里面进行介绍的！
</code></pre><blockquote>
<p>范例五：若 ~/.bashrc 比 /tmp/bashrc 新才复制过来</p>
</blockquote>
<pre><code>[root@linux tmp]# cp -u ~/.bashrc /tmp/bashrc
# 这个 -u 的特性，是在目标档案与来源档案有差异时，才会复制的。
# 所以，比较常被用于『备份』的工作当中喔！ ^_^
</code></pre><blockquote>
<p>范例六：将范例四造成的 bashrc_slink 复制成为 bashrc_slink_2</p>
</blockquote>
<pre><code>[root@linux tmp]# cp bashrc_slink bashrc_slink_2
[root@linux tmp]# ls -l bashrc_slink*
lrwxrwxrwx 1 root root 6 Jul 18 22:31 bashrc_slink -&gt; bashrc
-rw-r–r– 1 root root 395 Jul 18 22:48 bashrc_slink_2
# 这个例子也是很有趣喔！原本复制的是连结档，但是却将连结档的实际档案复制过来了
# 也就是说，如果没有加上任何参数时，复制的是源文件，而非连结文件的属性！
# 若要复制连结文件的属性，就得要使用 -d 或者 -a 的参数了！
</code></pre><blockquote>
<p>范例七：将家目录的 .bashrc 及 .bash_history 复制到 /tmp 底下</p>
</blockquote>
<pre><code>[root@linux tmp]# cp ~/.bashrc ~/.bash_history /tmp
# 可以将多个数据一次复制到同一个目录去！
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 变色封装类]]></title>
      <url>http://percychen.com/2015/02/06/2015-02-06-changecolotutil/</url>
      <content type="html"><![CDATA[<p>工具类的作用，将传人的bitmap转为黑色后输出bitmap，将传入TextView变色后输出</p>
<p>完整代码如下：</p>
<pre>
package com.android.systemui.statusbar.phone;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.ColorMatrix;
import android.graphics.ColorMatrixColorFilter;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.widget.TextView;

public class ChangeColorUtil {
    private static Bitmap afterBitmap;
    private static Paint paint;
    private static Canvas canvas;

    public static Bitmap changebackcolor(Bitmap baseBitmap) {
        afterBitmap = Bitmap.createBitmap(baseBitmap.getWidth(),
                baseBitmap.getHeight(), baseBitmap.getConfig());
        canvas = new Canvas(afterBitmap);
        paint = new Paint();
        float[] src = new float[] { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                0, 0, 0, 0, 1, 0 };
        // 定义ColorMatrix，并指定RGBA矩阵
        ColorMatrix colorMatrix = new ColorMatrix();
        colorMatrix.set(src);
        // 设置Paint的颜色
        paint.setColorFilter(new ColorMatrixColorFilter(src));
        // 通过指定了RGBA矩阵的Paint把原图画到空白图片上
        canvas.drawBitmap(baseBitmap, new Matrix(), paint);

        return afterBitmap;

    }

    public static TextView changetextclor(TextView tv) {
        tv.setTextColor(0xff252525);
        return tv;

    }

    public static Bitmap changewhitecolor(Bitmap baseBitmap) {
        afterBitmap = Bitmap.createBitmap(baseBitmap.getWidth(),
                baseBitmap.getHeight(), baseBitmap.getConfig());
        canvas = new Canvas(afterBitmap);
        paint = new Paint();
        float[] src = new float[] {
                1, 0, 0, 0, 0,
                0, 1, 0, 0, 0,
                1, 0, 1, 0, 0,
                0, 0, 0, 1, 0 };
        // 定义ColorMatrix，并指定RGBA矩阵
        ColorMatrix colorMatrix = new ColorMatrix();
        colorMatrix.set(src);
        // 设置Paint的颜色
        paint.setColorFilter(new ColorMatrixColorFilter(src));
        // 通过指定了RGBA矩阵的Paint把原图画到空白图片上
        canvas.drawBitmap(baseBitmap, new Matrix(), paint);

        return afterBitmap;

    }

    public static TextView changewhitetextclor(TextView tv) {
        tv.setTextColor(0xffffffff);
        return tv;

    }

}
</pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 阻尼回弹 ListView控件]]></title>
      <url>http://percychen.com/2015/02/06/2015-02-06-Listviewzuni/</url>
      <content type="html"><![CDATA[<p><a href="http://my.oschina.net/helu/blog/145502" target="_blank" rel="external">原帖地址</a></p>
<p>今天又在IOS上看到列表的”阻尼”效果，就是列表拉到表头或者表尾时，还可以继续往上或往下拉，松开手后，整个列表会弹回去</p>
<pre>
public class BaseListView extends ListView
{
    private static final int MAX_Y_OVERSCROLL_DISTANCE = 200;

    private Context mContext;
    private int mMaxYOverscrollDistance;

    public BaseListView(Context context)
    {
        super(context);
        mContext = context;
        initBounceListView();
    }

    public BaseListView(Context context, AttributeSet attrs)
    {
        super(context, attrs);
        mContext = context;
        initBounceListView();
    }

    public BaseListView(Context context, AttributeSet attrs, int defStyle)
    {
        super(context, attrs, defStyle);
        mContext = context;
        initBounceListView();
    }

    private void initBounceListView()
    {

        final DisplayMetrics metrics = mContext.getResources().getDisplayMetrics();
        final float density = metrics.density;

        mMaxYOverscrollDistance = (int) (density * MAX_Y_OVERSCROLL_DISTANCE);
    }

    @Override
    protected boolean overScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX, int scrollRangeY, int maxOverScrollX, int maxOverScrollY, boolean isTouchEvent)
    {
        return super.overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX, scrollRangeY, maxOverScrollX, mMaxYOverscrollDistance, isTouchEvent);
    }

}
</pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[将系统应用导入eclipse进行开发]]></title>
      <url>http://percychen.com/2015/02/02/2015-02-02-import_system_app/</url>
      <content type="html"><![CDATA[<p>文章为转载，<a href="http://www.hovercool.com/en/%E5%B0%86packages/apps/%E4%B8%8B%E7%9A%84app%E5%AF%BC%E5%85%A5eclipse#a_1.E3.80.81.E5.B0.86Settings.E6.95.B4.E4.B8.AA.E6.96.87.E4.BB.B6.E5.A4.B9.E6.8B.B7.E8.B4.9D.E4.B8.80.E4.BB.BD.E5.A4.87.E7.94.A8" target="_blank" rel="external">原文地址</a></p>
<p>当刚接触android自带的一个模块时，如何去熟悉它？相信不少人第一步都会尝试着去了解其内容的调用流程，而此时若能够单步调试则显得非常重要了，于是有了文章标题所说的尝试。<br><br>作者这里要导入的是Settings文件夹，基于android 4.0：</p>
<ul>
<li><p>将Settings整个文件夹拷贝一份备用</p>
</li>
<li><p>基于Settings建立一个eclipse工程</p>
</li>
</ul>
<blockquote>
<p>打开eclipse，File &gt; New &gt; Project &gt; Android Project &gt; Create project from existing source，选择第1步所拷贝的Settings文件夹。</p>
</blockquote>
<ul>
<li>导入部分framework library</li>
</ul>
<blockquote>
<p>执行完第2步会出现很多诸如:</p>
</blockquote>
<pre><code>com.android.internal.R cannot be resolved
</code></pre><p>的错误，这主要是由于framework部分资源找不到，这时我们可以手动添加，当然前提是你要用整个工程的代码且已经编译。</p>
<blockquote>
<p>在eclipse中右键工程名Settings，选择:</p>
</blockquote>
<pre><code>Build Path &gt; Configure Build Path &gt; Libraries &gt; Add External JARS
</code></pre><p>然后选择以下路径的jars：</p>
<pre><code>out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/classes.jar&lt;br&gt;
</code></pre><p>–这个主要是android的框架类</p>
<pre><code>out/target/common/obj/JAVA_LIBRARIES/android-common_intermediates/classes.jar&lt;br&gt;
</code></pre><p>–这个包含com.android.common.Search这个类</p>
<pre><code>out/target/common/obj/JAVA_LIBRARIES/core_intermediates/classes.jar&lt;br&gt;
</code></pre><p>–这个包包含dalvik.system.VMRuntime这个类</p>
<pre><code>out/target/common/obj/JAVA_LIBRARIES/mediatek-framework_intermediates/classes.jar
</code></pre><p>–这个主要是mediatek的框架类</p>
<p>这样基本上就能解决大部分framework资源找不到的问题<br><br>ps 这里也可将上述classes.jar重命名后复制到某一文件夹后统一导入</p>
<p>+. 导入app自身</p>
<p>如这里导入：</p>
<pre><code>out/target/common/obj/APPS/Settings_intermediates/classes.jar
</code></pre><p>+. 去除uid</p>
<p>打开 AndroidManifest.xml，找到 android:sharedUserId并去除之：</p>
<pre><code>android:sharedUserId=&quot;android.uid.system&quot;
</code></pre><p>否则在运行时会提示如下错误：</p>
<pre><code>INSTALL_FAILED_SHARED_USER_INCOMPATIBLE
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 圆角Bitmap代码]]></title>
      <url>http://percychen.com/2015/02/02/2015-02-02-roundbitmap/</url>
      <content type="html"><![CDATA[<pre><code>//生成圆角图片
public static Bitmap GetRoundedCornerBitmap(Bitmap bitmap) {
    try {
        Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),
                bitmap.getHeight(), Config.ARGB_8888);
        Canvas canvas = new Canvas(output);
        final Paint paint = new Paint();
        final Rect rect = new Rect(0, 0, bitmap.getWidth(),
                bitmap.getHeight());
        final RectF rectF = new RectF(new Rect(0, 0, bitmap.getWidth(),
                bitmap.getHeight()));
        final float roundPx = 14;
        paint.setAntiAlias(true);
        canvas.drawARGB(0, 0, 0, 0);
        paint.setColor(Color.BLACK);
        canvas.drawRoundRect(rectF, roundPx, roundPx, paint);
        paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));

        final Rect src = new Rect(0, 0, bitmap.getWidth(),
                bitmap.getHeight());

        canvas.drawBitmap(bitmap, src, rect, paint);
        return output;
    } catch (Exception e) {
        return bitmap;
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[获取壁纸进行模糊片段代码]]></title>
      <url>http://percychen.com/2015/02/02/2015-02-02-blurwallpaper/</url>
      <content type="html"><![CDATA[<p>首先当然是功能函数代码啦：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.android.systemui.killyun;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.graphics.Bitmap;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Created by QIUJUER on 2014/4/19.</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FastBlur</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">doBlur</span><span class="params">(Bitmap sentBitmap, <span class="keyword">int</span> radius,<span class="keyword">boolean</span> canReuseInBitmap)</span> </span>&#123;</div><div class="line"></div><div class="line">		Bitmap bitmap;</div><div class="line">		<span class="keyword">if</span> (canReuseInBitmap) &#123;</div><div class="line">			bitmap = sentBitmap;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			bitmap = sentBitmap.copy(sentBitmap.getConfig(), <span class="keyword">true</span>);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (radius &lt; <span class="number">1</span>) &#123;</div><div class="line">			<span class="keyword">return</span> (<span class="keyword">null</span>);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		<span class="keyword">int</span> w = bitmap.getWidth();</div><div class="line">		<span class="keyword">int</span> h = bitmap.getHeight();</div><div class="line"></div><div class="line">		<span class="keyword">int</span>[] pix = <span class="keyword">new</span> <span class="keyword">int</span>[w * h];</div><div class="line">		bitmap.getPixels(pix, <span class="number">0</span>, w, <span class="number">0</span>, <span class="number">0</span>, w, h);</div><div class="line"></div><div class="line">		<span class="keyword">int</span> wm = w - <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> hm = h - <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> wh = w * h;</div><div class="line">		<span class="keyword">int</span> div = radius + radius + <span class="number">1</span>;</div><div class="line"></div><div class="line">		<span class="keyword">int</span> r[] = <span class="keyword">new</span> <span class="keyword">int</span>[wh];</div><div class="line">		<span class="keyword">int</span> g[] = <span class="keyword">new</span> <span class="keyword">int</span>[wh];</div><div class="line">		<span class="keyword">int</span> b[] = <span class="keyword">new</span> <span class="keyword">int</span>[wh];</div><div class="line">		<span class="keyword">int</span> rsum, gsum, bsum, x, y, i, p, yp, yi, yw;</div><div class="line">		<span class="keyword">int</span> vmin[] = <span class="keyword">new</span> <span class="keyword">int</span>[Math.max(w, h)];</div><div class="line"></div><div class="line">		<span class="keyword">int</span> divsum = (div + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>;</div><div class="line">		divsum *= divsum;</div><div class="line">		<span class="keyword">int</span> dv[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span> * divsum];</div><div class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span> * divsum; i++) &#123;</div><div class="line">			dv[i] = (i / divsum);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		yw = yi = <span class="number">0</span>;</div><div class="line"></div><div class="line">		<span class="keyword">int</span>[][] stack = <span class="keyword">new</span> <span class="keyword">int</span>[div][<span class="number">3</span>];</div><div class="line">		<span class="keyword">int</span> stackpointer;</div><div class="line">		<span class="keyword">int</span> stackstart;</div><div class="line">		<span class="keyword">int</span>[] sir;</div><div class="line">		<span class="keyword">int</span> rbs;</div><div class="line">		<span class="keyword">int</span> r1 = radius + <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> routsum, goutsum, boutsum;</div><div class="line">		<span class="keyword">int</span> rinsum, ginsum, binsum;</div><div class="line"></div><div class="line">		<span class="keyword">for</span> (y = <span class="number">0</span>; y &lt; h; y++) &#123;</div><div class="line">			rinsum = ginsum = binsum = routsum = goutsum = boutsum = rsum = gsum = bsum = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span> (i = -radius; i &lt;= radius; i++) &#123;</div><div class="line">				p = pix[yi + Math.min(wm, Math.max(i, <span class="number">0</span>))];</div><div class="line">				sir = stack[i + radius];</div><div class="line">				sir[<span class="number">0</span>] = (p &amp; <span class="number">0xff0000</span>) &gt;&gt; <span class="number">16</span>;</div><div class="line">				sir[<span class="number">1</span>] = (p &amp; <span class="number">0x00ff00</span>) &gt;&gt; <span class="number">8</span>;</div><div class="line">				sir[<span class="number">2</span>] = (p &amp; <span class="number">0x0000ff</span>);</div><div class="line">				rbs = r1 - Math.abs(i);</div><div class="line">				rsum += sir[<span class="number">0</span>] * rbs;</div><div class="line">				gsum += sir[<span class="number">1</span>] * rbs;</div><div class="line">				bsum += sir[<span class="number">2</span>] * rbs;</div><div class="line">				<span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</div><div class="line">					rinsum += sir[<span class="number">0</span>];</div><div class="line">					ginsum += sir[<span class="number">1</span>];</div><div class="line">					binsum += sir[<span class="number">2</span>];</div><div class="line">				&#125; <span class="keyword">else</span> &#123;</div><div class="line">					routsum += sir[<span class="number">0</span>];</div><div class="line">					goutsum += sir[<span class="number">1</span>];</div><div class="line">					boutsum += sir[<span class="number">2</span>];</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			stackpointer = radius;</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; w; x++) &#123;</div><div class="line"></div><div class="line">				r[yi] = dv[rsum];</div><div class="line">				g[yi] = dv[gsum];</div><div class="line">				b[yi] = dv[bsum];</div><div class="line"></div><div class="line">				rsum -= routsum;</div><div class="line">				gsum -= goutsum;</div><div class="line">				bsum -= boutsum;</div><div class="line"></div><div class="line">				stackstart = stackpointer - radius + div;</div><div class="line">				sir = stack[stackstart % div];</div><div class="line"></div><div class="line">				routsum -= sir[<span class="number">0</span>];</div><div class="line">				goutsum -= sir[<span class="number">1</span>];</div><div class="line">				boutsum -= sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (y == <span class="number">0</span>) &#123;</div><div class="line">					vmin[x] = Math.min(x + radius + <span class="number">1</span>, wm);</div><div class="line">				&#125;</div><div class="line">				p = pix[yw + vmin[x]];</div><div class="line"></div><div class="line">				sir[<span class="number">0</span>] = (p &amp; <span class="number">0xff0000</span>) &gt;&gt; <span class="number">16</span>;</div><div class="line">				sir[<span class="number">1</span>] = (p &amp; <span class="number">0x00ff00</span>) &gt;&gt; <span class="number">8</span>;</div><div class="line">				sir[<span class="number">2</span>] = (p &amp; <span class="number">0x0000ff</span>);</div><div class="line"></div><div class="line">				rinsum += sir[<span class="number">0</span>];</div><div class="line">				ginsum += sir[<span class="number">1</span>];</div><div class="line">				binsum += sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				rsum += rinsum;</div><div class="line">				gsum += ginsum;</div><div class="line">				bsum += binsum;</div><div class="line"></div><div class="line">				stackpointer = (stackpointer + <span class="number">1</span>) % div;</div><div class="line">				sir = stack[(stackpointer) % div];</div><div class="line"></div><div class="line">				routsum += sir[<span class="number">0</span>];</div><div class="line">				goutsum += sir[<span class="number">1</span>];</div><div class="line">				boutsum += sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				rinsum -= sir[<span class="number">0</span>];</div><div class="line">				ginsum -= sir[<span class="number">1</span>];</div><div class="line">				binsum -= sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				yi++;</div><div class="line">			&#125;</div><div class="line">			yw += w;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; w; x++) &#123;</div><div class="line">			rinsum = ginsum = binsum = routsum = goutsum = boutsum = rsum = gsum = bsum = <span class="number">0</span>;</div><div class="line">			yp = -radius * w;</div><div class="line">			<span class="keyword">for</span> (i = -radius; i &lt;= radius; i++) &#123;</div><div class="line">				yi = Math.max(<span class="number">0</span>, yp) + x;</div><div class="line"></div><div class="line">				sir = stack[i + radius];</div><div class="line"></div><div class="line">				sir[<span class="number">0</span>] = r[yi];</div><div class="line">				sir[<span class="number">1</span>] = g[yi];</div><div class="line">				sir[<span class="number">2</span>] = b[yi];</div><div class="line"></div><div class="line">				rbs = r1 - Math.abs(i);</div><div class="line"></div><div class="line">				rsum += r[yi] * rbs;</div><div class="line">				gsum += g[yi] * rbs;</div><div class="line">				bsum += b[yi] * rbs;</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</div><div class="line">					rinsum += sir[<span class="number">0</span>];</div><div class="line">					ginsum += sir[<span class="number">1</span>];</div><div class="line">					binsum += sir[<span class="number">2</span>];</div><div class="line">				&#125; <span class="keyword">else</span> &#123;</div><div class="line">					routsum += sir[<span class="number">0</span>];</div><div class="line">					goutsum += sir[<span class="number">1</span>];</div><div class="line">					boutsum += sir[<span class="number">2</span>];</div><div class="line">				&#125;</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (i &lt; hm) &#123;</div><div class="line">					yp += w;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			yi = x;</div><div class="line">			stackpointer = radius;</div><div class="line">			<span class="keyword">for</span> (y = <span class="number">0</span>; y &lt; h; y++) &#123;</div><div class="line">				<span class="comment">// Preserve alpha channel: ( 0xff000000 &amp; pix[yi] )</span></div><div class="line">				pix[yi] = (<span class="number">0xff000000</span> &amp; pix[yi]) | (dv[rsum] &lt;&lt; <span class="number">16</span>)</div><div class="line">						| (dv[gsum] &lt;&lt; <span class="number">8</span>) | dv[bsum];</div><div class="line"></div><div class="line">				rsum -= routsum;</div><div class="line">				gsum -= goutsum;</div><div class="line">				bsum -= boutsum;</div><div class="line"></div><div class="line">				stackstart = stackpointer - radius + div;</div><div class="line">				sir = stack[stackstart % div];</div><div class="line"></div><div class="line">				routsum -= sir[<span class="number">0</span>];</div><div class="line">				goutsum -= sir[<span class="number">1</span>];</div><div class="line">				boutsum -= sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				<span class="keyword">if</span> (x == <span class="number">0</span>) &#123;</div><div class="line">					vmin[y] = Math.min(y + r1, hm) * w;</div><div class="line">				&#125;</div><div class="line">				p = x + vmin[y];</div><div class="line"></div><div class="line">				sir[<span class="number">0</span>] = r[p];</div><div class="line">				sir[<span class="number">1</span>] = g[p];</div><div class="line">				sir[<span class="number">2</span>] = b[p];</div><div class="line"></div><div class="line">				rinsum += sir[<span class="number">0</span>];</div><div class="line">				ginsum += sir[<span class="number">1</span>];</div><div class="line">				binsum += sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				rsum += rinsum;</div><div class="line">				gsum += ginsum;</div><div class="line">				bsum += binsum;</div><div class="line"></div><div class="line">				stackpointer = (stackpointer + <span class="number">1</span>) % div;</div><div class="line">				sir = stack[stackpointer];</div><div class="line"></div><div class="line">				routsum += sir[<span class="number">0</span>];</div><div class="line">				goutsum += sir[<span class="number">1</span>];</div><div class="line">				boutsum += sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				rinsum -= sir[<span class="number">0</span>];</div><div class="line">				ginsum -= sir[<span class="number">1</span>];</div><div class="line">				binsum -= sir[<span class="number">2</span>];</div><div class="line"></div><div class="line">				yi += w;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		bitmap.setPixels(pix, <span class="number">0</span>, w, <span class="number">0</span>, <span class="number">0</span>, w, h);</div><div class="line">		<span class="keyword">return</span> (bitmap);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>调用函数:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"> <span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">blur</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">	    LocalActivityManager manager = <span class="keyword">new</span> LocalActivityManager(<span class="keyword">this</span>, <span class="keyword">true</span>);</div><div class="line">		manager.dispatchCreate(savedInstanceState);</div><div class="line">		WallpaperManager wallpaperManager = WallpaperManager.getInstance(<span class="keyword">this</span>); <span class="comment">// 获取壁纸管理器</span></div><div class="line">		<span class="comment">// 获取当前壁纸</span></div><div class="line">		Drawable wallpaperDrawable = wallpaperManager.getDrawable();</div><div class="line">		Bitmap bm = ((BitmapDrawable) wallpaperDrawable).getBitmap();</div><div class="line">		<span class="keyword">float</span> scaleFactor = <span class="number">1</span>;</div><div class="line">		<span class="keyword">float</span> radius = <span class="number">20</span>;</div><div class="line">		<span class="comment">// 缩放比例</span></div><div class="line">		scaleFactor = <span class="number">15</span>;</div><div class="line">		radius =<span class="number">3</span>;</div><div class="line">		rl_main = (RelativeLayout) <span class="keyword">this</span>.findViewById(R.id.rl_main);</div><div class="line">		Display mDisplay = getWindowManager().getDefaultDisplay();</div><div class="line">		<span class="keyword">int</span> w = mDisplay.getWidth();</div><div class="line">		<span class="keyword">int</span> h = mDisplay.getHeight();</div><div class="line">		Bitmap overlay = Bitmap.createBitmap((<span class="keyword">int</span>) (w / scaleFactor),</div><div class="line">				(<span class="keyword">int</span>) (h / scaleFactor), Bitmap.Config.ARGB_8888);</div><div class="line">		Canvas canvas = <span class="keyword">new</span> Canvas(overlay);</div><div class="line">		canvas.translate(-rl_main.getLeft() / scaleFactor, -rl_main.getTop()</div><div class="line">				/ scaleFactor);</div><div class="line">		canvas.scale(<span class="number">1</span> / scaleFactor, <span class="number">1</span> / scaleFactor);</div><div class="line">		Paint paint = <span class="keyword">new</span> Paint();</div><div class="line">		paint.setFlags(Paint.FILTER_BITMAP_FLAG);</div><div class="line">		canvas.drawBitmap(bm, <span class="number">0</span>, <span class="number">0</span>, paint);</div><div class="line">		<span class="comment">// 执行模糊</span></div><div class="line">		overlay = FastBlur.doBlur(overlay, (<span class="keyword">int</span>) radius, <span class="keyword">true</span>);</div><div class="line"></div><div class="line">		rl_main.setBackgroundDrawable(<span class="keyword">new</span> BitmapDrawable(getResources(), overlay));</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MakeFile零碎语法札记]]></title>
      <url>http://percychen.com/2015/01/30/2015-01-30-makefilecode/</url>
      <content type="html"><![CDATA[<p>这几天改编译构架，遇到很多不合理的地方，决定花点时间把makefile编译脚本重写下。上次看makefile语法还是去年，时间间隔有点久，所以决定写一些小blog记录一些知识点</p>
<ul>
<li><p>变量赋值，个人擅长shell脚本，所以很多命令都是shll写的。所以会经常引用shell命令</p>
<p>  MAKE<em>TIME :=$(shell date +%Y</em>%m<em>%d</em>%H_%M)<br>  INTERNAL_OTA_PACKAGE_TARGET := $(PRODUCT<em>OUT)/$(name)</em>$(MAKE_TIME).zip</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[adb 指令翻译]]></title>
      <url>http://percychen.com/2015/01/07/2015-01-07-adb_1.0.31/</url>
      <content type="html"><![CDATA[<p>-d - 指示命令唯一连接的USB设备</p>
<p>返回一个错误，如果存在多个USB设备。</p>
<p>-e - 指示命令的唯一运行中的模拟器。</p>
<p>返回一个错误，如果超过一个模拟器运行。</p>
<p>-s &lt;特定的设备 - 与给定的指示命令到设备或模拟器</p>
<p>序列号或限定。覆盖ANDROID_SERIAL的环境变量。</p>
<p>-p <product名称或路径> - 简单的产品名称，如’sooner’ ，或产品的相对/绝对路径像“出/目标/产品/越早’ out目录。</product名称或路径></p>
<p>如果未指定-P ， ANDROID_PRODUCT_OUT使用环境变量，它必须是一个绝对路径。</p>
<p>devices [-l] - 列出所有连接的设备</p>
<p>（ ‘ l’也会列出设备预选赛）</p>
<p>connect <host>[:<port>]  - 通过TCP / IP连接到设备</port></host></p>
<p>如果没有指定端口号，默认情况下使用端口5555 。</p>
<p>断开[ <host> [ <port> ] - 从TCP / IP设备断开。</port></host></p>
<p>如果没有指定端口号，默认情况下使用端口5555 。</p>
<p>使用此命令，没有额外的参数</p>
<p>将断开所有连接的TCP / IP设备。</p>
<p>设备命令：</p>
<p>adb push <local> <remote> - 复制文件/ DIR设备的</remote></local></p>
<p>adb pull <remote> [<local>] - 从设备复制文件/目录</local></remote></p>
<p>adb sync [ <directory> ]  - 复制主机 - &gt;设备仅在改变</directory></p>
<p>（ -l 是指名单上，但不要复制）</p>
<p>（见“adb help all ” ）</p>
<p>adb shell - 交互方式运行远程shell</p>
<p>adb shell <command>   - 运行远程shell命令</p>
<p>adb emu <command>  - 运行模拟器控制台命令</p>
<p>adb logcat [ <filter-spec> ] - 查看设备日志</filter-spec></p>
<p>adb forward <local> <remote> - 远期套接字连接</remote></local></p>
<p>远期规格之一：</p>
<p>TCP： <port></port></p>
<p>localabstract ： <unix的域套接字></unix的域套接字></p>
<p>localreserved ： <unix的域套接字></unix的域套接字></p>
<p>localfilesystem ：的<unix域插座></unix域插座></p>
<p>DEV ： &lt;设备名称&gt;</p>
<p>JDWP ： ： <process pid=""> （远程）</process></p>
<p>adb jdwp - 托管一个JDWP运输的列表进程的PID</p>
<p>adb install [-l] [-r] [-s] [–algo <algorithm name=""> –key <hex-encoded key=""> –iv <hex-encoded iv="">] <file></file></hex-encoded></hex-encoded></algorithm></p>
<ul>
<li>push 推的装置并安装该工具包文件</li>
</ul>
<p>（’-l’ 代表着锁的应用程序）</p>
<p>（ ‘-r’ 是指重新安装应用程序，保持它的数据）</p>
<p>（ ‘-s’ 是指安装在SD卡上，而不是内部存储）</p>
<p> (‘–algo’, ‘–key’, and ‘–iv’  意味着文件已经加密）</p>
<p>adb uninstall [-k] <package> - remove this app package from the device</package></p>
<p>(‘-k’ 意味着保持数据和缓存目录）</p>
<p>adb bugreport - 从设备返回的所有信息应该包含在错误报告中。</p>
<p>adb backup [-f <file>] [-apk|-noapk] [-shared|-noshared] [-all] [-system|-nosystem] [<packages...>]</packages...></file></p>
<ul>
<li>写一个归档设备的数据文件。</li>
</ul>
<p>如果没有-f选项，然后将数据写入</p>
<p>在当前目录中的的“ backup.ab ” 。</p>
<p>（ - apk文件| - noapk启用/禁用。的APK自己的备份在存档中，默认是noapk 。 ）</p>
<p>| - 非共享（共享备份设备的使能/禁止共享存储/ SD卡中的内容，默认非共享）。</p>
<p>（一切手段来备份所有已安装的应用程序）</p>
<p>（系统| nosystem是否切换所有自动包括系统应用默认是包括系统应用程序）</p>
<p>（ <packages...>如果要备份的应用程序列表。全部或共享的标志传递，然后包列表是可选的。明确给出的应用命令行，甚至将包括如果nosystem通常导致他们被省略。 ）</packages...></p>
<p>adb restore <file> - 恢复设备文件备份归档内容</file></p>
<p>adb help - 显示此帮助消息</p>
<p>adb version - 显示版本号</p>
<p>脚本：</p>
<p>adb wait-for-device - 等待直到设备在线</p>
<p>adb start-server - 启动adb服务</p>
<p>adb kill-server  - 杀掉adb服务</p>
<p>adb get-state - 打印：离线| bootloader的设备</p>
<p>adb get-serialno - 打印： <serial-number></serial-number></p>
<p>adb get-devpath - 打印： <device-path></device-path></p>
<p>adb status-window - 连续打印设备指定设备状态</p>
<p>adb remount - 在设备上重新挂载/系统分区读写</p>
<p>adb reboot [bootloader|recovery] - 重新启动设备，可选择进入bootloader或recovery模式</p>
<p>adb reboot-bootloader - 重新启动设备进入bootloader</p>
<p>adb root - 重新启动adbd守护进程以root权限</p>
<p>adb usb - 重新启动adbd USB守护听</p>
<p>adb tcpip <port> 的 - 重新启动adbd守护进程在指定端口上侦听TCP</port></p>
<p>网络：</p>
<p>adb ppp <tty> 的[参数] - 运行的PPP USB 。</tty></p>
<p>注意：你不应该自动启动PPP连接。</p>
<p><tty>指的tty为PPP流。例如。开发:/ dev/omap_csmi_tty1的</tty></p>
<p>[参数] - 例如。默认路由调试转储本地notty usepeerdns的</p>
<p>adb sync notes： adb sync [ &lt;目录&gt; ]</p>
<p>可以以几种方式解释<localdir> ：</localdir></p>
<ul>
<li><p>如果没有指定&lt;目录&gt; / system和/数据分区都将被更新。</p>
</li>
<li><p>如果它是“系统”或“数据” ，只有对应的分区被更新。</p>
</li>
</ul>
<p>环境变量：</p>
<p>ADB_TRACE - 打印调试信息。下列值的逗号分隔列表1或全部，亚行，插座，包， RWX ， USB同步， sysdeps ，运输， JDWP</p>
<p>ANDROID_SERIAL - 连接到的序列号。 -S的优先级高于这个，如果给。</p>
<p>ANDROID_LOG_TAGS - 当使用logcat的选项，只有这些调试标签被打印出来。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[grep的用法]]></title>
      <url>http://percychen.com/2015/01/05/2015-01-05-grep/</url>
      <content type="html"><![CDATA[<pre><code>grep -E &quot;word1|word2|word3&quot;   file.txt
</code></pre><blockquote>
<p>满足任意条件（word1、word2和word3之一）将匹配。</p>
</blockquote>
<pre><code>② grep word1 file.txt | grep word2 |grep word3
</code></pre><blockquote>
<p>必须同时满足三个条件（word1、word2和word3）才匹配。</p>
</blockquote>
<h2 id="2015-05-19-更新-14-个-grep-命令的例子"><a href="#2015-05-19-更新-14-个-grep-命令的例子" class="headerlink" title="2015-05-19 更新 14 个 grep 命令的例子"></a>2015-05-19 更新 14 个 grep 命令的例子</h2><p>作者： Pradeep Kumar  <a href="http://www.linuxtechi.com/linux-grep-command-with-14-different-examples/" target="_blank" rel="external">原文</a><br></p>
<p>译者： cvsher  <a href="LCTT  https://linux.cn/article-5453-1.html">译文</a></p>
<h2 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h2><blockquote>
<p>所有的类linux系统都会提供一个名为grep(global regular expression print，全局正则表达式输出)的搜索工具。grep命令在对一个或多个文件的内容进行基于模式的搜索的情况下是非常有用的。模式可以是单个字符、多个字符、单个单词、或者是一个句子。</p>
<p>当命令匹配到执行命令时指定的模式时，grep会将包含模式的一行输出，但是并不对原文件内容进行修改。</p>
</blockquote>
<p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231734coi0os7nr0frpas6.png" alt="image"></p>
<p>在本文中，我们将会讨论到14个grep命令的例子。</p>
<ul>
<li>####例1 在文件中查找模式（单词）</li>
</ul>
<p>在/etc/passwd文件中查找单词“linuxtechi”</p>
<pre><code>root@Linux-world:~# grep linuxtechi /etc/passwd
linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
root@Linux-world:~#
</code></pre><ul>
<li><p>####例2 在多个文件中查找模式。</p>
<pre><code>root@Linux-world:~# grep linuxtechi /etc/passwd /etc/shadow /etc/gshadow
/etc/passwd:linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
/etc/shadow:linuxtechi:$6$DdgXjxlM$4flz4JRvefvKp0DG6re:16550:0:99999:7:::/etc/gshadow:adm:*::syslog,linuxtechi
/etc/gshadow:cdrom:*::linuxtechi
/etc/gshadow:sudo:*::linuxtechi
/etc/gshadow:dip:*::linuxtechi
/etc/gshadow:plugdev:*::linuxtechi
/etc/gshadow:lpadmin:!::linuxtechi
/etc/gshadow:linuxtechi:!::
/etc/gshadow:sambashare:!::linuxtechi
root@Linux-world:~#
</code></pre></li>
<li><p>####例3 使用-l参数列出包含指定模式的文件的文件名。</p>
<pre><code>root@Linux-world:~# grep -l linuxtechi /etc/passwd /etc/shadow /etc/fstab /etc/mtab
      /etc/passwd
 /etc/shadow
 root@Linux-world:~#
</code></pre></li>
<li><p>####例4 使用-n参数，在文件中查找指定模式并显示匹配行的行号</p>
<pre><code>     root@Linux-world:~# grep -n linuxtechi /etc/passwd
39:linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
     root@Linux-world:~#
     root@Linux-world:~# grep -n root /etc/passwd /etc/shadow
</code></pre></li>
</ul>
<p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231736j4b1apg41e84f4wg.jpg" alt="example-4"></p>
<ul>
<li>####例5 使用-v参数输出不包含指定模式的行</li>
</ul>
<p>输出/etc/passwd文件中所有不含单词“linuxtechi”的行</p>
<pre><code>root@Linux-world:~# grep -v linuxtechi /etc/passwd
</code></pre><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231737ar52q4cg8q4lm914.jpg" alt="example-5"></p>
<ul>
<li>####例6 使用 ^ 符号输出所有以某指定模式开头的行</li>
</ul>
<p>Bash脚本将 ^ 符号视作特殊字符，用于指定一行或者一个单词的开始。例如输出/etc/passes文件中所有以“root”开头的行</p>
<pre><code>root@Linux-world:~# grep ^root /etc/passwd
root:x:0:0:root:/root:/bin/bash
root@Linux-world:~#
</code></pre><ul>
<li>####例7 使用 $ 符号输出所有以指定模式结尾的行。</li>
</ul>
<p>输出/etc/passwd文件中所有以“bash”结尾的行。</p>
<pre><code>root@Linux-world:~# grep bash$ /etc/passwd
root:x:0:0:root:/root:/bin/bash
linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
root@Linux-world:~#
</code></pre><p>Bash脚本将美元($)符号视作特殊字符，用于指定一行或者一个单词的结尾。</p>
<ul>
<li><h4 id="例8-使用-r-参数递归地查找特定模式"><a href="#例8-使用-r-参数递归地查找特定模式" class="headerlink" title="例8 使用 -r 参数递归地查找特定模式"></a>例8 使用 -r 参数递归地查找特定模式</h4><pre><code>root@Linux-world:~# grep -r linuxtechi /etc/
/etc/subuid:linuxtechi:100000:65536
/etc/group:adm:x:4:syslog,linuxtechi
/etc/group:cdrom:x:24:linuxtechi
/etc/group:sudo:x:27:linuxtechi
/etc/group:dip:x:30:linuxtechi
/etc/group:plugdev:x:46:linuxtechi
/etc/group:lpadmin:x:115:linuxtechi
/etc/group:linuxtechi:x:1000:
/etc/group:sambashare:x:131:linuxtechi
/etc/passwd-:linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
/etc/passwd:linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
............................................................................
</code></pre></li>
</ul>
<p>上面的命令将会递归的在/etc目录中查找“linuxtechi”单词</p>
<ul>
<li><p>####例9 使用 grep 查找文件中所有的空行</p>
<pre><code>root@Linux-world:~# grep ^$ /etc/shadow
root@Linux-world:~#
</code></pre></li>
</ul>
<p>由于/etc/shadow文件中没有空行，所以没有任何输出</p>
<ul>
<li>####例10 使用 -i 参数查找模式</li>
</ul>
<p>grep命令的-i参数在查找时忽略字符的大小写。</p>
<p>我们来看一个例子，在paswd文件中查找“LinuxTechi”单词。</p>
<pre><code>nextstep4it@localhost:~$ grep -i LinuxTechi /etc/passwd
linuxtechi:x:1001:1001::/home/linuxtechi:/bin/bash
nextstep4it@localhost:~$
</code></pre><ul>
<li>####例11 使用 -e 参数查找多个模式</li>
</ul>
<p>例如，我想在一条grep命令中查找‘linuxtechi’和‘root’单词，使用-e参数，我们可以查找多个模式。</p>
<pre><code>root@Linux-world:~# grep -e &quot;linuxtechi&quot; -e &quot;root&quot; /etc/passwd
root:x:0:0:root:/root:/bin/bash
linuxtechi:x:1000:1000:linuxtechi,,,:/home/linuxtechi:/bin/bash
root@Linux-world:~#
</code></pre><ul>
<li>####例12 使用 -f 用文件指定待查找的模式</li>
</ul>
<p>首先，在当前目录中创建一个搜索模式文件“grep_pattern”，我想文件中输入的如下内容。</p>
<pre><code>root@Linux-world:~# cat grep_pattern
^linuxtechi
root
false$
root@Linux-world:~#
</code></pre><p>现在，试试使用grep_pattern文件进行搜索</p>
<pre><code>root@Linux-world:~# grep -f grep_pattern /etc/passwd
</code></pre><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231738r8awtkvpewkearr8.jpg" alt="example12"></p>
<ul>
<li>####例13 使用 -c 参数计算模式匹配到的数量</li>
</ul>
<p>继续上面例子，我们在grep命令中使用-c命令计算匹配指定模式的数量</p>
<pre><code>root@Linux-world:~# grep -c -f grep_pattern /etc/passwd
22
root@Linux-world:~#
</code></pre><ul>
<li>####例14 输出匹配指定模式行的前或者后面N行</li>
</ul>
<p>a)使用-B参数输出匹配行的前4行</p>
<pre><code>root@Linux-world:~# grep -B 4 &quot;games&quot; /etc/passwd
</code></pre><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231738a6955ls928ii68iu.jpg" alt="example14"></p>
<p>b)使用-A参数输出匹配行的后4行</p>
<pre><code>root@Linux-world:~# grep -A 4 &quot;games&quot; /etc/passwd
</code></pre><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231739e8d68vwzp8df0xs9.jpg" alt="example14-2"></p>
<p>c)使用-C参数输出匹配行的前后各4行</p>
<pre><code>root@Linux-world:~# grep -C 4 &quot;games&quot; /etc/passwd
</code></pre><p><img src="https://dn-linuxcn.qbox.me/data/attachment/album/201505/16/231739zz9ixw1xb26iiix1.jpg" alt="example14-3"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[ListView特效实现]]></title>
      <url>http://percychen.com/2014/12/12/2014-12-12-listviewanimtion/</url>
      <content type="html"><![CDATA[<p>###添加一个入场动画：</p>
<ul>
<li><p>在listView中添加一个属性点:</p>
<pre><code>android:layoutAnimation=&quot;@anim/navagation_gridview_anim&quot;
</code></pre></li>
<li><p>添加xml动画  :navagation_gridview_anim.xml</p>
<pre><code>&lt;layoutAnimation xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
android:animation=&quot;@anim/list_anim&quot;
android:animationOrder=&quot;normal&quot;
android:delay=&quot;0.5&quot; /&gt;
</code></pre></li>
<li><p>添加实现动画： list_anim.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding= &quot;utf-8&quot;?&gt;
&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; &gt;
       &lt;translate android:fromXDelta=&quot;-100%&quot;
                android:fromYDelta=&quot;0&quot;
                android:toXDelta=&quot;0&quot;
                android:toYDelta=&quot;0&quot;
                android:duration=&quot;250&quot;
                android:interpolator=&quot;@android:anim/anticipate_overshoot_interpolator&quot; /&gt;
&lt;/set&gt;
</code></pre></li>
</ul>
<h3 id="添加滑动动画："><a href="#添加滑动动画：" class="headerlink" title="添加滑动动画："></a>添加滑动动画：</h3><p>更多牛逼哄哄的讨论可以看这个网页：<a href="http://www.4byte.cn/question/98090/listview-item-scroll-animation.html#" target="_blank" rel="external">http://www.4byte.cn/question/98090/listview-item-scroll-animation.html#</a></p>
<p>其实第二第三个回答是很牛逼的一个类，但是为毛有第5个神级回答：</p>
<pre><code>Animation animationY = new TranslateAnimation(0, 0, holder.llParent.getHeight()/4, 0);
animationY.setDuration(1000);
Yourconvertview.startAnimation(animationY);
animationY = null;
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下ssh远程登录笔记]]></title>
      <url>http://percychen.com/2014/12/09/2014-12-09-linuxsshnocode/</url>
      <content type="html"><![CDATA[<h2 id="2016-09-23更新"><a href="#2016-09-23更新" class="headerlink" title="2016-09-23更新"></a>2016-09-23更新</h2><p>sftp使用笔记</p>
<p>对于scp拷贝文件的时候，部分server端要求进行加密传输，于是拷贝文件的时候就会报错：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">scp: warning: Executing scp1.</div><div class="line">scp: FATAL: Executing ssh1 <span class="keyword">in</span> compatibility mode failed (Check that scp1 is <span class="keyword">in</span> your PATH).</div><div class="line">lost connection</div></pre></td></tr></table></figure>
<p>这个时候就要用到sftp来进行拷贝了</p>
<p>如果登陆远程机器不是为了上传下载文件，而是要修改远程主机上的某些文件。可以</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sftp -P [port]  user@ip</div><div class="line">sftp&gt; get /home/percychen/test.zip  /home/percychen/tmp/</div><div class="line"><span class="comment">#这条语句将从远程主机的 /home/percychen/test.zip 下载到本地:/home/percychen/tmp/</span></div><div class="line"></div><div class="line">sftp&gt; put /home/percychen/test.zip /home/percychen/tmp/</div><div class="line"><span class="comment">#这条语句将把本地 /home/percychen/test.zip 上传至远程主机/home/percychen/tmp/</span></div></pre></td></tr></table></figure>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>公司要求我们自己搭建一个本地git服务器，自己花了半天搭建起来后每次进入都需要输入密码，我很烦，于是就找了一下相关的文章，依葫芦画瓢就成功了。相当自在。</p>
</blockquote>
<p>原文地址<a href="http://josephj.com/article/understand-ssh-key/" target="_blank" rel="external">http://josephj.com/article/understand-ssh-key/</a></p>
<p>原文是繁文，讲得比较细致，对于我这种人来说，看一次效率略低，所以简化了一下。miyao</p>
<ol>
<li>基本流程</li>
</ol>
<p>本地生产 公钥，复制到服务器的 .ssh下，然后倒入到密钥文件里。给予权限就OK，下次访问的时候，服务器会先去核对密钥，密钥通过就不需要输入密码，不通过则需要通过密码。<br><br>因为这种方式需要管理员接入，所以会才、使得整个过程安全而迅速。</p>
<ol>
<li>密钥种类</li>
</ol>
<p>操作起来远没有想象的那么简单，也就导致了，我在操作过程中失败了很多次。原因是服务器的密钥种类不同，认证方式也不同。<br>SSH 有 Protocol 1 及 Protocol 2两种机制，常见的密钥类型也有 RSA1、RSA2、以及 DSA 三种。<br>所以这里我建议你三种全部都安装。</p>
<ol>
<li>实现代码</li>
</ol>
<p>下面的代码在mac和linux中是通用的，但是windows下我没尝试过，所以需要自己去弄。</p>
<ul>
<li>产生三种密钥</li>
</ul>
<p>a. 产生 RSA 1 密钥</p>
<p>这种密钥是以前比较旧的系统，例如 FreeBSD 4 及以前的版本、是走 SSH Protocol 1 的，最好就使用 RSA 1 。</p>
<pre><code>ssh-keygen -t rsa1
</code></pre><p>然后一路回车就可以了</p>
<p>b. 产生 RSA 2 密钥</p>
<p>适合比较新的系统</p>
<pre><code>ssh-keygen -t rsa
</code></pre><p>c. 产生 DSA密钥</p>
<pre><code>ssh-keygen -t dsa
</code></pre><p>全部完成后我们就有了三对密钥：RSA1 ( identity.pub / identity )、RSA2 ( id_rsa.pub / id_rsa )、及 ( id_dsa.pub / id_rsa )，将pub格式的密钥重命名，防止与其它成员的密钥冲突</p>
<pre><code>mv identity.pub xxx_identity.pub
mv id_rsa.pub xxx_id_rsa.pub
mv  id_dsa.pub xxx_id_dsa.pub
</code></pre><ul>
<li><p>将公钥复制到服务器上</p>
<pre><code>scp ~/.ssh/*.pub 服务器ip:~/.ssh/
</code></pre></li>
</ul>
<p>例如:</p>
<pre><code>scp ~/.ssh/*.pub git@192.168.1.30:~/.ssh/.
</code></pre><p>然后乖乖打密码输入进去，然后登陆到服务器，或者交由服务器管理员来操作就可以。</p>
<p>登陆到服务器：</p>
<pre><code>ssh 你的主机
</code></pre><p>linux和mac中处理防止的密钥文件叫做authorized_keys，所以我们要把刚刚传入的公钥放入到这个文件中：</p>
<pre><code>cat ~/.ssh/identity.pub &gt;&gt; ~/.ssh/authorized_keys
cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys
cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys
chmod 711 ~/.ssh
chmod 644 ~/.ssh/authorized_keys
</code></pre><p>如果不出意外，你就可以免密码登入了</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于作死的java环境变量设置（linux）]]></title>
      <url>http://percychen.com/2014/12/03/2014-12-03-linuxjavaset/</url>
      <content type="html"><![CDATA[<p>###之前</p>
<blockquote>
<p>以前一直用的是openjdk6，后来做解包的时候用的openjdk7，最近来了一套源码，竟然强制使用sun、oricle的java SE 1.6否则编译失败 ，去掉这个判断后发现容易出现各种莫名其妙的问题，于是决定乖乖的用 SE 1.6</p>
</blockquote>
<ul>
<li>下载</li>
</ul>
<p>去Oracle官网下载bin文件，最新的是6u45的，下载下来后执行</p>
<pre><code>chmod u+x jdk-6u45-linux-x64.bin
./jdk-6u45-linux-x64.bin
</code></pre><ul>
<li><p>复制<br>将文件复制到系统中，需要权限：</p>
<pre><code>sudo mkdir -p /usr/lib/jvm
sudo mv jdk1.6.0_45 /usr/lib/jvm/
</code></pre></li>
<li><p>创建连接</p>
<pre><code>sudo update-alternatives --install &quot;/usr/bin/java&quot; &quot;java&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/java&quot; 1
sudo update-alternatives --install &quot;/usr/bin/javac&quot; &quot;javac&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/javac&quot; 1
sudo update-alternatives --install &quot;/usr/bin/javah&quot; &quot;javah&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/javah&quot; 1
sudo update-alternatives --install &quot;/usr/bin/javap&quot; &quot;javap&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/javap&quot; 1
sudo update-alternatives --install &quot;/usr/bin/javadoc&quot; &quot;javadoc&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/javadoc&quot; 1
sudo update-alternatives --install &quot;/usr/bin/jar&quot; &quot;jar&quot; &quot;/usr/lib/jvm/jdk1.6.0_45/bin/jar&quot; 1
</code></pre></li>
<li><p>多环境变量的处理：（可选）</p>
<pre><code>sudo update-alternatives --config java
sudo update-alternatives --config javac
sudo update-alternatives --config javah
sudo update-alternatives --config javap
sudo update-alternatives --config javadoc
sudo update-alternatives --config jar
</code></pre></li>
<li><p>完成！</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git的一些简单用法]]></title>
      <url>http://percychen.com/2014/12/01/2014-12-01-gitcode/</url>
      <content type="html"><![CDATA[<h3 id="删除-untracked-files"><a href="#删除-untracked-files" class="headerlink" title="删除 untracked files"></a>删除 untracked files</h3><pre><code>git clean -f
</code></pre><h3 id="连-untracked-的目录也一起删掉"><a href="#连-untracked-的目录也一起删掉" class="headerlink" title="连 untracked 的目录也一起删掉"></a>连 untracked 的目录也一起删掉</h3><pre><code>git clean -fd
</code></pre><h3 id="连-gitignore-的untrack-文件-目录也一起删掉-（慎用，一般这个是用来删掉编译出来的-o之类的文件用的）"><a href="#连-gitignore-的untrack-文件-目录也一起删掉-（慎用，一般这个是用来删掉编译出来的-o之类的文件用的）" class="headerlink" title="连 gitignore 的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）"></a>连 gitignore 的untrack 文件/目录也一起删掉 （慎用，一般这个是用来删掉编译出来的 .o之类的文件用的）</h3><pre><code>git clean -xfd
</code></pre><h3 id="在用上述-git-clean-前，墙裂建议加上-n-参数来先看看会删掉哪些文件，防止重要文件被误删"><a href="#在用上述-git-clean-前，墙裂建议加上-n-参数来先看看会删掉哪些文件，防止重要文件被误删" class="headerlink" title="在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删"></a>在用上述 git clean 前，墙裂建议加上 -n 参数来先看看会删掉哪些文件，防止重要文件被误删</h3><pre><code>git clean -nxfd
git clean -nf
git clean -nfd
</code></pre><p>###添加一个远程仓库地址：</p>
<pre><code>git  remote add origin git@XXXXXXXXXXXXXXX
</code></pre><p>###清楚你的修改</p>
<pre><code>git reset --hard
</code></pre><h2 id="免密码输入"><a href="#免密码输入" class="headerlink" title="免密码输入"></a>免密码输入</h2><blockquote>
<p>使用git push提交时，每次都要输入密码，使用git-credentials就可以解决，难点是容易泄漏密码</p>
</blockquote>
<ul>
<li><p>新建文件并保存密码</p>
<pre><code>touch ~/.git-credentials
vim ~/.git-credentials
</code></pre></li>
<li><p>添加内容：</p>
<pre><code>https://{username}:{passwd}@github.com
</code></pre></li>
<li><p>添加配置</p>
<pre><code>git config --global credential.helper store
</code></pre></li>
</ul>
<p>再尝试git push不再需要输入密码.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用tar和split打包分割文件]]></title>
      <url>http://percychen.com/2014/11/19/2014-11-19-tar_split/</url>
      <content type="html"><![CDATA[<p><strong>文章为转载</strong> <a href="http://www.cnblogs.com/xiaouisme/archive/2011/05/25/2057435.html" target="_blank" rel="external">原文地址</a></p>
<p>tar是文件打包工具，split是文件分割工具，如果需要备份很多资料的时候，打包后的单个文件可能超出文件系统支持的单个文件大小限制的时候，需要分割成适合大小的文件包。<br><br>所以就用这个实例来说明一下tar和split这两个指令，如何压缩、分割，再通过cat合并分割的文件解压还原，以及在管道“ | ”配合下的打包分割文件过程。</p>
<p>例如：我的.skype文件已经有35M之多了，现在需要压缩备份起来，直接用tar打包：</p>
<p>###用tar压缩文件：</p>
<pre>
[marco.chan@linuxhobby backup]$ ls
skype_backup
[marco.chan@linuxhobby backup]$ tar -czvp -f skype_backup.tar.gz skype_backup
</pre>

<p>中间的打包压缩输出过程省略…</p>
<pre>
skype_backup/marco.chan.skype/chat512.dbb
skype_backup/marco.chan.skype/user4096.dbb
skype_backup/marco.chan.skype/chatmsg256.dbb
skype_backup/shared.xml
skype_backup/shared.lck
[marco.chan@linuxhobby backup]$ ls
skype_backup.tar.gz skype_backup
</pre>

<p>因为用了“-v”参数，所以中间会输出打包压缩的文件信息。<br><br>-c (create)当然是建立一个打包文件。<br><br>-z (gzip)调用gzip进行压缩，建议后缀名为<em>.tar.gz；也可以用-j(bzip2),建议后缀名为</em>.tar.bz2。<br><br>-p (preserve-permissions)小写的p，保持原先的文件属性，也就是rwx属性。<br><br>-f (file)输出的目标文件“skype_backup.tar.gz” 将要被处理的源文件“skype_backup”，可以将-f连写，但是为了容易记忆和区分，所以这里分开写了。<br></p>
<p>打包后的skype_backup.tar.gz还有15M大小，但是我的邮件附件就支持6M大小，所以还得分割。</p>
<p>###splite分割文件：</p>
<pre>[marco.chan@linuxhobby backup]$ split -b 4000k skype_backup.tar.gz skype_backup_20090626.tar.gz. –verbose
creating file `skype_backup_20090626.tar.gz.aa’
creating file `skype_backup_20090626.tar.gz.ab’
creating file `skype_backup_20090626.tar.gz.ac’
creating file `skype_backup_20090626.tar.gz.ad’
[marco.chan@linuxhobby backup]$ ls
skype_backup skype_backup_20090626.tar.gz.ac
skype_backup_20090626.tar.gz.aa skype_backup_20090626.tar.gz.ad
skype_backup_20090626.tar_20090626.gz.ab skype_backup.tar.gz
</pre>

<p>-b 指定分割大小，例如k,m等单位。<br><br>–verbose 输出分割文件信息，可选。<br><br>skype_backup.tar.gz 被分割的文件。<br><br>skype_backup_20090626.tar.gz. 分割后的文件名(注意gz后面的”.”)，如果不指定的话，默认是xaa,xab,xac。</p>
<p>现在通过tar，split，已经将skype_backup目录文件打包、分割为每个最大为4M大小的压缩包了。<br><br>以上是分步执行，如果用管道”|”，将tar,split写成一个执行语句：<br></p>
<p>###使用管道“|”合并两个指令：</p>
<pre>
[marco.chan@linuxhobby backup]$ tar -czvp -f – skype_backup |split -b 4000k – skype_backup_20090626.tar.gz. –verbose
[marco.chan@linuxhobby backup]$ ls
skype_backup
skype_backup_20090626.tar.gz.aa
skype_backup_20090626.tar.gz.ab
skype_backup_20090626.tar.gz.ac
skype_backup_20090626.tar.gz.ad
</pre>

<p>注意一下指令中的两个“-”，如果分开执行，就不用”-”。为什么有这个”-”？</p>
<pre>
man tar
-f, –file [HOSTNAME:]F
Use archive file or device F (default “-”, meaning stdin/stdout). Note that “/dev/stdout” is not equivalent to “-”.Using “/dev/stdout” explicitly can lead to corrupted archive, especially when coupled with “-v”.
</pre>

<p>如何解压分割文件？<br><br>把文件分割了几个包，当然也要能合并解压了，合并文件当然用cat了，cat不仅仅是用来处理合并文本文件的，也可以用来合并压缩文件。<br></p>
<p>###cat合并分割的文件：</p>
<pre>
[marco.chan@linuxhobby backup]$ cat skype_backup_20090626.tar.gz.a* >skype_backup_cat.tar.gz
</pre>
将之前分割的压缩包合并成skype_backup_cat.tar.gz，然后可以通过tar -zxvf来解压skype_backup_cat.tar.gz，通过管道”|”可写成：

###使用管道“|”合并两个指令：

<pre>
[marco.chan@linuxhobby backup]$ cat skype_backup_20090626.tar.gz.a* |tar -zxv
</pre>

<p>关于更多的tar、split、cat指令应用，建议通过man查询。</p>
<p>转摘请注明出处：麦麦的不老阁 » 《使用tar和split打包分割文件》<br><br>本文地址：<a href="http://www.uncle.ws/2009/06/tar-split-cat/" target="_blank" rel="external">http://www.uncle.ws/2009/06/tar-split-cat/</a><br><br>订阅博客地址：<a href="http://www.uncle.ws/subscribe/" target="_blank" rel="external">http://www.uncle.ws/subscribe/</a><br></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux桌面环境的安装]]></title>
      <url>http://percychen.com/2014/11/18/2014-11-18-linuxdesktopinstall/</url>
      <content type="html"><![CDATA[<p>###elementary OS 桌面环境的安装：</p>
<blockquote>
<p>每日更新版本安装PPA（适用于ubuntu 11.04/11.10/12.04/12.10）:</p>
</blockquote>
<pre>sudo add-apt-repository ppa:elementary-os/daily
sudo apt-get update
sudo apt-get install elementary-desktop
</pre>

<blockquote>
<p>你可以安装稳定版本，该PPA适用于ubuntu 11.10/12.10:</p>
</blockquote>
<pre>sudo add-apt-repository ppa:elementary-os/stable
sudo apt-get update
sudo apt-get install elementary-desktop
</pre>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于源码到smail id值的自动获取]]></title>
      <url>http://percychen.com/2014/11/17/2014-11-17-smailidautocarp/</url>
      <content type="html"><![CDATA[<p>###麻烦</p>
<p>在没有源代码的情况下，我们为了实现某些功能，就需要自己写demo然后反编译smail插进去。这个过程本身不复杂，麻烦的是id值的获取。id是编译时随机分配的，而smail又是通过id值来查找资源。如果你有很多控件的话基本就是一场灾难。</p>
<p>###解决办法</p>
<p>为什么我们不让系统自己去查找id呢？我们只要给定变量名就可以了。</p>
<p>我们发现findviewbyid（int id）id值实际上是int值。</p>
<p>so 代码来了：</p>
<pre>
final Resources resources = context.getResources();
int layoutid = resources.getIdentifier
    (context.getPackageName()+":id/"+"msim_status_bar", null, null);
final View view=findViewById(layoutid);
</pre>

<p>于是，反编译插装的时候再也不用担心id啦！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何在Linux里使用xargs命令]]></title>
      <url>http://percychen.com/2014/11/13/2014-11-13-xargscommand/</url>
      <content type="html"><![CDATA[<td id="article_content"><p>你是否遇到过这样的情况，需要一遍又一遍地对多个文件执行同样的操作？如果有过，那你肯定会深有感触这是多么的无聊和效率低下。还好有种简单的方式，可以在基于Unix的操作系统中使用xargs命令解决这个烦恼。通过这个命令你可以有效地处理多个文件，节省你的时间和精力。在这篇教程中，你可以学到如何一次性对多个文件执行命令或脚本操作，再也不用担心像单独处理无数个日志或数据文件那样吓人的任务了。</p><br><p><img src="http://img.linux.net.cn/data/attachment/album/201411/13/104159mkcthh5ttcdmk4m1.jpg" alt=""></p><br><p>xargs命令有两个要点。第一，你必须列出目标文件。第二，你必须指定对每个文件需要执行的命令或脚本。</p><br><p>这篇教程会涉及三个应用场景，xargs命令被用来处理分布在不同目录下的文件：</p><br><ol class="task-list"><br><li>计算所有文件的行数</li><br><li>打印指定文件的第一行</li><br><li>对每个文件执行一个自定义脚本</li><br></ol><br><p>请看下面这个叫xargstest的目录（用tree命令以及-i和-f选项显示了目录树结构，这样可以避免缩进显示而且每个文件都会带有完整路径）：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ tree </span><span class="pun">-</span><span class="kwd">if</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln"> </span></li></ol></pre><br><p><a href="https://camo.githubusercontent.com/c4ef63ddcd2a7eefa33a66d4d73a2903398ecfb9/68747470733a2f2f6661726d332e737461746963666c69636b722e636f6d2f323934322f31353333343938353938315f636531613139326465662e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/c4ef63ddcd2a7eefa33a66d4d73a2903398ecfb9/68747470733a2f2f6661726d332e737461746963666c69636b722e636f6d2f323934322f31353333343938353938315f636531613139326465662e6a7067" alt="" data-canonical-src="http://img.linux.net.cn/data/attachment/album/201411/13/104348ikionvqiydiilra8.jpg"></a></p><br><p>这六个文件的内容分别如下：</p><br><p><a href="https://camo.githubusercontent.com/e6eb1c67bfc8fd769859d17e8cea8808932bfbb1/68747470733a2f2f6661726d342e737461746963666c69636b722e636f6d2f333838322f31353334363238373636325f613330383461386534665f6f2e706e67" target="_blank"><img src="https://camo.githubusercontent.com/e6eb1c67bfc8fd769859d17e8cea8808932bfbb1/68747470733a2f2f6661726d342e737461746963666c69636b722e636f6d2f333838322f31353334363238373636325f613330383461386534665f6f2e706e67" alt="" data-canonical-src="http://img.linux.net.cn/data/attachment/album/201411/13/104350irbfubd1neft2fft.png"></a></p><br><p>这个<strong>xargstest</strong>目录，以及它包含的子目录和文件将用在下面的例子中。</p><br><h3><a id="user-content-场景1计算所有文件的行数" class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/tech/20140928%20How%20to%20use%20xargs%20command%20in%20Linux.md#%E5%9C%BA%E6%99%AF1%E8%AE%A1%E7%AE%97%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E7%9A%84%E8%A1%8C%E6%95%B0" target="_blank" rel="external"></a>场景1：计算所有文件的行数</h3><br><p>就像之前提到的，使用xargs命令的第一个要点是一个用来运行命令或脚本的文件列表。我们可以用find命令来确定和列出目标文件。选项<strong>-name ‘file??’</strong>指定了xargstest目录下那些名字以”file”开头并跟随两个任意字符的文件才是匹配的。这个搜索默认是递归的，意思是find命令会在xargstest和它的子目录下搜索匹配的文件。</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file??’</span><span class="pln"> </span></li></ol></pre><br><hr><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3B</span></li><li class="L1"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3A</span></li><li class="L2"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1A</span></li><li class="L3"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1B</span></li><li class="L4"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2B</span></li><li class="L5"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2A</span></li></ol></pre><br><p>我们可以通过管道把结果发给sort命令让文件名按顺序排列：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file??’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> sort </span></li></ol></pre><br><hr><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1A</span></li><li class="L1"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1B</span></li><li class="L2"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2A</span></li><li class="L3"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2B</span></li><li class="L4"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3A</span></li><li class="L5"><span class="pln">xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3B</span></li></ol></pre><br><p>然后我们需要第二个要素，就是需要执行的命令。我们使用带有-l选项的wc命令来计算每个文件包含的换行符数目（会在输出的每一行的前面打印出来）：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file??’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> sort </span><span class="pun">|</span><span class="pln"> xargs wc </span><span class="pun">-</span><span class="pln">l </span></li></ol></pre><br><hr><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln"> </span><span class="lit">1</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1A</span></li><li class="L1"><span class="pln"> </span><span class="lit">2</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1B</span></li><li class="L2"><span class="pln"> </span><span class="lit">3</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2A</span></li><li class="L3"><span class="pln"> </span><span class="lit">4</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2B</span></li><li class="L4"><span class="pln"> </span><span class="lit">5</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3A</span></li><li class="L5"><span class="pln"> </span><span class="lit">6</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3B</span></li><li class="L6"><span class="lit">21</span><span class="pln"> total</span></li></ol></pre><br><p>可以看到，不用对每个文件手动执行一次wc -l命令，而xargs命令可以让你在一步里完成所有操作。那些之前看起来无法完成的任务，例如单独处理数百个文件，现在可以相当轻松地完成了。</p><br><h3><a id="user-content-场景2打印指定文件的第一行" class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/tech/20140928%20How%20to%20use%20xargs%20command%20in%20Linux.md#%E5%9C%BA%E6%99%AF2%E6%89%93%E5%8D%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E7%9A%84%E7%AC%AC%E4%B8%80%E8%A1%8C" target="_blank" rel="external"></a>场景2：打印指定文件的第一行</h3><br><p>既然你已经有一些使用xargs命令的基础，你可以自由选择执行什么命令。有时，你也许希望只对一部分文件执行操作而忽略其他的。在这种情况下，你可以使用find命令的-name选项以及?通配符（匹配任意单个字符）来选中特定文件并通过管道输出给xargs命令。举个例子，如果你想打印以“B”字符结尾的文件而忽略以“A”结尾的文件的第一行，可以使用下面的find、xargs和head命令组合来完成（head -n1会打印一个文件的第一行）：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file?B’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> sort </span><span class="pun">|</span><span class="pln"> xargs head </span><span class="pun">-</span><span class="pln">n1 </span></li></ol></pre><br><hr><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pun">==&gt;</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir1</span><span class="pun">/</span><span class="pln">file1B </span><span class="pun">&lt;==</span></li><li class="L1"><span class="pln">one</span></li><li class="L2"><span class="pln">&nbsp;</span></li><li class="L3"><span class="pun">==&gt;</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir2</span><span class="pun">/</span><span class="pln">file2B </span><span class="pun">&lt;==</span></li><li class="L4"><span class="pln">one</span></li><li class="L5"><span class="pln">&nbsp;</span></li><li class="L6"><span class="pun">==&gt;</span><span class="pln"> xargstest</span><span class="pun">/</span><span class="pln">dir3</span><span class="pun">/</span><span class="pln">file3B </span><span class="pun">&lt;==</span></li><li class="L7"><span class="pln">one</span></li></ol></pre><br><p>你将看到只有以“B”结尾的文件会被处理，而所有以“A”结尾的文件都被忽略了。</p><br><h3><a id="user-content-场景3对每个文件执行一个自定义脚本" class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/tech/20140928%20How%20to%20use%20xargs%20command%20in%20Linux.md#%E5%9C%BA%E6%99%AF3%E5%AF%B9%E6%AF%8F%E4%B8%AA%E6%96%87%E4%BB%B6%E6%89%A7%E8%A1%8C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%AE%9A%E4%B9%89%E8%84%9A%E6%9C%AC" target="_blank" rel="external"></a>场景3：对每个文件执行一个自定义脚本</h3><br><p>最后，你也许希望对一些文件执行一个自定义脚本（例如Bash、Python或是Perl）。要做到这一点，只要简单地用你的自定义脚本名字替换掉之前例子中的wc和head命令就好了：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file??’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> xargs myscript</span><span class="pun">.</span><span class="pln">sh </span></li></ol></pre><br><p>自定义脚本<strong>myscript.sh</strong>需要写成接受一个文件名作为参数并处理这个文件。上面的命令将为find命令找到的每个文件分别调用脚本。</p><br><p>注意一下上面的例子中的文件名并没有包含空格。通常来说，在Linux环境下操作没有空格的文件名会舒服很多。如果你实在是需要处理名字中带有空格的文件，上边的命令就不能用了，需要稍微处理一下来让它可以被接受。这可以通过find命令的-print0选项（它会打印完整的文件名到标准输出，并以空字符结尾），以及xargs命令的-0选项（它会以空字符作为字符串结束标记）来实现，就像下面的例子：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ find xargstest</span><span class="pun">/</span><span class="pln"> </span><span class="pun">-</span><span class="pln">name </span><span class="str">‘file<em>‘</em></span><span class="pln"> </span><span class="pun">-</span><span class="pln">print0 </span><span class="pun">|</span><span class="pln"> xargs </span><span class="pun">-</span><span class="lit">0</span><span class="pln"> myscript</span><span class="pun">.</span><span class="pln">sh </span></li></ol></pre><br><p>注意一下，-name选项所跟的参数已经改为’file‘，意思是所有以”file”开头而结尾可以是任意字符的文件都会被选中。</p><br><h3><a id="user-content-总结" class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/tech/20140928%20How%20to%20use%20xargs%20command%20in%20Linux.md#%E6%80%BB%E7%BB%93" target="_blank" rel="external"></a>总结</h3><br><p>在看完这篇教程后你应该会理解xargs命令的作用，以及如何应用到自己的工作中。很快你就可以有时间享受这个命令所带来的高效率，而不用把你的时间耗费在一些重复的任务上了。想了解更详细的信息以及更多的选项，你可以在终端中输入’man xargs’命令来查看xargs的文档。</p><br><hr><br><p>via:&nbsp;<a href="http://xmodulo.com/xargs-command-linux.html" target="_blank" rel="external">http://xmodulo.com/xargs-command-linux.html</a></p><br><p>作者：<a href="http://xmodulo.com/author/joshua" target="_blank" rel="external">Joshua Reed</a>&nbsp;译者：<a href="https://github.com/zpl1025" target="_blank" rel="external">zpl1025</a>&nbsp;校对：<a href="https://github.com/carolinewuyan" target="_blank" rel="external">Caroline</a></p><br><p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="external">LCTT</a>&nbsp;原创翻译，<a href="http://linux.cn/" target="_blank" rel="external">Linux中国</a>&nbsp;荣誉推出</p><br><br><div class="copyright"><br>    <div>来源： xmodulo</div>    <div><br>        原文： <a href="http://xmodulo.com/xargs-command-linux.html" target="_blank">http://xmodulo.com/xargs-command-linux.html</a>&nbsp;&nbsp;&nbsp;&nbsp;        作者： Joshua Reed    </div><br><br>    <div><br>                译者： zpl1025    </div><br><br>                    <div>本文是原创投递或翻译投递，<href="http: linux.cn="" "="">Linux中国首发地址：<a href="http://linux.cn/article-4212-1.html" target="_blank" rel="external">http://linux.cn/article-4212-1.html</a>&lt;/href=”http:&gt;</href="http:></div><div><span style="color:red;">欢迎转载，敬请在正文中标注并保留原文/译文链接和作者/译者等信息</span></div><br><br></div><br><div class="hm"><br><a title="分享到腾讯微博" href="javascript:void( share_tqq(SITEURL + 'article-4212-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201411/13/104159mkcthh5ttcdmk4m1.jpg.large.jpg') );" class="tqq_large" target="_blank" rel="external"></a><br><a title="分享到新浪微博" href="javascript:void( share_tsina(SITEURL + 'article-4212-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201411/13/104159mkcthh5ttcdmk4m1.jpg.large.jpg') );" class="tsina_large" target="_blank" rel="external"></a><br></div><br></td>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于批量重命名的一件趣事]]></title>
      <url>http://percychen.com/2014/11/11/2014-11-11-java_shell_rename/</url>
      <content type="html"><![CDATA[<p>###缘由</p>
<p>拜托一个大神给我写一个calender的数据库，大神捣鼓几个月后发给我，结果因为他们公司防火墙的缘故，发来的 java后缀，xml后缀的文件全部被加密，所以他就想到了txt文档没加密，于是将所以的文件名全部加了一个txt的后缀，然后打包发我。</p>
<p>收到后我没什么时间看，就先搁置一边，过了一天，他又发了一个java文件过来。我问他干什么的，他说在eclipse里面新建一个java工程，将这个java文件代码放进去，然后改一下执行路径和包名。然后运行就能将 txt的后缀去掉 代码详见：</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">package com.aaa.projectcopy;<br><br>import java.io.File;<br>import java.security.acl.LastOwnerException;<br><br>public class UnZip {<br>    public static void main(String[] args)<br>    {<br>        String path=”E:\workspace\calendar2”;<br>        upZip(path);<br>    }<br><br>    public static  void upZip(String path)<br>    {<br>        File f=new File(path);<br><br>        if(f.isDirectory())<br>        {<br>            File[] sub=f.listFiles();<br>            for(int i=0;i<sub.length;i++) {="" upzip(sub[i].getabsolutepath());="" }="" }else{="" renamefile(path);="" public="" static="" void="" renamefile(string="" path){="" file="" f="new" file(path);="" string="" name="f.getAbsolutePath();" if(name.contains(".txt"))="" newfile="new" file(name);="" f.renameto(newfile);="" }<="" code=""></sub.length;i++)></code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>代码相当简单，相当高大上了。我彻底就膜拜了。我问他是不是只有重命名的功能，他说是的。</p>
<p>很哭笑不得的是，语法虽然高大上，但是在linux shell里直接执行：</p>
<pre><code>for i in *.txt;do m=`echo $i | awk -F . &apos;{print $1}&apos;`;n=`echo $i | awk -F . &apos;{print $2}&apos;`;mv $i $m.$n ;done
</code></pre><p>好像就能达到重命名的功能了。</p>
<p>所以说，平时多学一门语言还是好的</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[service中用Handler更新UI]]></title>
      <url>http://percychen.com/2014/11/05/2014-11-05-android_handler/</url>
      <content type="html"><![CDATA[<blockquote>
<p>service里面更新UI还是用Handler好一点，之前一直用broadcast，发现太浪费资源了.<br>随着合进Systemui的东西越来越多，Systemui明显有延迟了，今天用handler写了状态栏网速，效果很不错。</p>
</blockquote>
<h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Message msg = <span class="keyword">new</span> Message();</div><div class="line">msg.what = MainActivity.FLAG;</div><div class="line">msg.obj=<span class="string">"haha"</span>;</div><div class="line">MainActivity.handler.sendMessage(msg);</div></pre></td></tr></table></figure>
<h3 id="Acitivity"><a href="#Acitivity" class="headerlink" title="Acitivity"></a>Acitivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">handler = <span class="keyword">new</span> Handler()&#123;</div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.handleMessage(msg);</div><div class="line">    <span class="keyword">if</span>(msg.what==FLAG)&#123;</div><div class="line">        text.setText((String)msg.obj);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[文件夹检测，同步实例]]></title>
      <url>http://percychen.com/2014/11/03/2014-11-03-inotify_diff/</url>
      <content type="html"><![CDATA[<blockquote>
<p>为了防止被黑化，我这里只讲 如何利用inotify+shell+diff进行文件夹的监控，实现简单的同步功能。<br>至于还能做什么，自己摸索与揣测，可以用来自动化工作和做某种黑客的工具。</p>
</blockquote>
<h3 id="inotify"><a href="#inotify" class="headerlink" title="inotify"></a>inotify</h3><p>百度百科的解释是：</p>
<blockquote>
<p>Inotify 是一个 Linux特性，它监控文件系统操作，比如读取、写入和创建。<br>Inotify 反应灵敏，用法非常简单，并且比 cron 任务的繁忙轮询高效得多。<br>学习如何将 inotify 集成到您的应用程序中，并发现一组可用来进一步自动化系统治理的命令行工具。</p>
</blockquote>
<p><strong>需求</strong> :</p>
<p>两个文件夹，要求在a中生成某个文件后，b中也会同时生成这个文件，a中删除后，b中也会删除，有点像link，但是这里不是通过link实现。要求两个文件实时同步</p>
<h4 id="安装inotify"><a href="#安装inotify" class="headerlink" title="安装inotify"></a>安装inotify</h4><pre><code>sudo apt-get install inotify-tools
</code></pre><h4 id="实现简单的实时检测对比同步："><a href="#实现简单的实时检测对比同步：" class="headerlink" title="实现简单的实时检测对比同步："></a>实现简单的实时检测对比同步：</h4><pre><code>notifywait -rme modify,attrib,move,close_write,create,delete,delete_self ~/a | while read event
do
    rm ~/b/*
    cp -r ~/a/* ~/b
    rm ~/b/syncxk*
</code></pre><p>这已经完全可以实现文件夹实时同步了，但是，出于性能的考虑，每次如此反复的删除和写入不仅损伤硬盘，还占用资源，浪费时间，所以我们可以使用 diff这个命令来实现同步。</p>
<h3 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h3><p>百度百科的解释是：</p>
<blockquote>
<p>diff 命令比较文本文件。它能比较单个文件或者目录内容。<br>diff 命令只有当输入为文本文件时才有效。<br>如果指定了 Directory1 和 Directory2 参数，diff 命令比较两个目录下名字相同的文本文件。列出不同的二进制文件、公共子目录和只在一个目录出现的文件。<br>diff命令用于比较两个文件的差异，它可以被制作成补丁文件，使用patch命令对相应的文件打补丁。</p>
</blockquote>
<h3 id="后台启动："><a href="#后台启动：" class="headerlink" title="后台启动："></a>后台启动：</h3><p>nohup ./XKF/syncxk &amp;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[终端中的乐趣：6个有趣的Linux命令行工具]]></title>
      <url>http://percychen.com/2014/11/01/2014-11-01-interestinglimuxcommand/</url>
      <content type="html"><![CDATA[<td id="article_content"><p>之前, 我们展示了一些有关有趣的 Linux 命令行命令的文章, 这些文章告诉我们, Linux 并不像看起来那样复杂, 如果我们知道如何使用的话, 反而会非常有趣. Linux 命令行可以简洁而完美地执行一些复杂的任务, 并且十分有趣.</p><br><ul><br><li><a href="http://linux.cn/article-2831-1.html" target="_blank" rel="external">Linux命令及Linux终端的20个趣事</a></li><br><li><a href="http://linux.cn/article-4088-1.html" target="_blank" rel="external">Linux终端的乐趣之把玩字词计数</a></li><br></ul><br><p>前者包含了20个有趣的 Linux 命令/脚本(和子命令), 得到了读者的高度赞扬. 而另一篇文章虽然没有之前那篇文章那么受欢迎，包含了一些命令/脚本和改进，让你能够玩儿转文本文件、单词和字符串.</p><br><p>这篇文章介绍了一些新的有趣命令和单行脚本，一定会让你感到欣喜.</p><br><h3 id="toc_1">1. pv 命令</h3><br><p>你也许曾经看到过电影里的模拟字幕, 它们好像是被实时敲打出来的. 如果我么能在终端里实现这样的效果, 那不是很好?</p><br><p>这是可以做到的. 我们可以安装通过 ‘<strong>apt</strong>‘ 或者 ‘<strong>yum</strong>‘ 工具在 Linux 系统上安装 ‘<strong>pv</strong>‘ 命令. 安装命令如下.</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="com"># yum install pv            [在基于 RedHat 的系统上]</span></li><li class="L1"><span class="pln">&nbsp;</span></li><li class="L2"><span class="com"># sudo apt-get install pv           [在基于 Debian 的系统上]</span></li></ol></pre><br><p>‘<strong>pv</strong>‘ 命令安装成功之后, 我们尝试运行下面的单行命令在终端查看实时文字输出的效果.</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">“Tecmint[dot]com is a community of Linux Nerds and Geeks”</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> pv </span><span class="pun">-</span><span class="pln">qL </span><span class="lit">10</span><span class="pln"> </span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233254ak99abw9u1ni0uwk.gif" alt=""></p><br><p><em>正在运行的 pv 命令</em></p><br><p><strong>注意</strong>: ‘<strong>q</strong>‘ 选项表示’安静’，没有其他输出信息, ‘<strong>L</strong>‘ 选项表示每秒转化的字节数上限. 调整数字的值(必须是整数)可以以另外的方向显示文字效果。</p><br><h3 id="toc_2">2. toilet 命令</h3><br><p>用单行脚本命令 ‘<strong>toilet</strong>‘ 在终端里显示一个添加边框的文本怎么样呢？同样, 你必须保证 ‘<strong>toilet</strong>‘ 已经安装在你的电脑上. 如果没有的话, 请使用 apt 或 yum 安装. (译者注: ‘toilet’ 并不在 Fedora 的官方仓库里, 你可以从 github 上下载源代码来安装)</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ </span><span class="kwd">while</span><span class="pln"> </span><span class="kwd">true</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">do</span><span class="pln"> echo </span><span class="pun">“</span><span class="pln">$</span><span class="pun">(</span><span class="pln">date </span><span class="pun">|</span><span class="pln"> toilet </span><span class="pun">-</span><span class="pln">f term </span><span class="pun">-</span><span class="pln">F border </span><span class="pun">–</span><span class="typ">Tecmint</span><span class="pun">)”;</span><span class="pln"> sleep </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> </span><span class="kwd">done</span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233344j2gfgogt2dpggj4d.gif" alt=""></p><br><p><em>正在运行的 toilet 命令</em></p><br><p><strong>注意</strong>: 上面的脚本需要使用 <strong>ctrl+z</strong> 键来暂停.</p><br><h3 id="toc_3">3. rig 命令</h3><br><p>这个命令每次生成一个随机的身份信息和地址. 要运行这个命令, 你需要用 apt 或 yum 安装 ‘<strong>rig</strong>‘. (译者注: ‘rig’ 不在 Fedora 的官方仓库中, 我只在 rpmseek 上找到了 Ubuntu 的 deb 包, 可以使用它来安装.)</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="com"># rig</span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233417jsi3r1rbo4b4r1yo.gif" alt=""></p><br><p><em>正在运行的 rig 命令</em></p><br><h3 id="toc_4">4. aview 命令</h3><br><p>你觉得在终端用 ASCII 格式显示图片怎么样? 我们必须用 apt 或 yum 安装软件包 ‘<strong>aview</strong>‘. (译者注: ‘avieww’ 不在 Fedora 的官方仓库中, 可以从 aview 的<a href="http://aa-project.sourceforge.net/aview/" target="_blank" rel="external">项目主页</a>上下载源代码来安装. ) 在当前工作目录下有一个名为 ‘<strong>elephant.jpg</strong>‘ 的图片, 我想用 ASCII 模式在终端查看.</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ asciiview elephant</span><span class="pun">.</span><span class="pln">jpg </span><span class="pun">-</span><span class="pln">driver curses </span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233454tf93rmx69y5moyo5.gif" alt=""></p><br><p><em>正在运行的 aview 命令</em></p><br><h3 id="toc_5">5. xeyes 命令</h3><br><p>在上一篇文章中, 我们介绍了 ‘<strong>oneko</strong>‘ 命令, 它可以显示一个追随鼠标指针运动的小老鼠. ‘<strong>xeyes</strong>‘ 是一个类似的图形程序, 当你运行它, 你可以看见小怪物的两个眼球追随你的鼠标运动.</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ xeyes</span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233549lqnv0lv6b5l6ose0.gif" alt=""></p><br><p><em>正在运行的 xeyes 命令</em></p><br><h3 id="toc_6">6. cowsay 命令</h3><br><p>你是否还记得上一次我们介绍的这个命令? 它可以显示一段预先确定的文本和一个字符构成的奶牛. 如果你想使用其它动物来代替奶牛怎么办? 查看可用的动物列表:</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ cowsay </span><span class="pun">-</span><span class="pln">l </span></li></ol></pre><br><p>如何用ASCII描绘蛇吞象？</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ cowsay </span><span class="pun">-</span><span class="pln">f elephant</span><span class="pun">-</span><span class="kwd">in</span><span class="pun">-</span><span class="pln">snake </span><span class="typ">Tecmint</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> </span><span class="typ">Best</span><span class="pln"> </span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233636sz2mvmn24tkbzntx.gif" alt=""></p><br><p><em>正在运行的 cowsay 命令</em></p><br><p>换作山羊又会怎样？</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ cowsay </span><span class="pun">-</span><span class="pln">f gnu </span><span class="typ">Tecmint</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> </span><span class="typ">Best</span><span class="pln"> </span></li></ol></pre><br><p><img src="http://img.linux.net.cn/data/attachment/album/201410/30/233656gc9r66577vjgs1pv.gif" alt=""></p><br><p><em>正在运行的 山羊cowsay 命令</em></p><br><p>今天就到这里吧. 我将带着另一篇有趣的文章回来. 不要忘记在下面留下您的评论.</p><br><hr><br><p>via: <a href="http://www.tecmint.com/linux-funny-commands/" target="_blank" rel="external">http://www.tecmint.com/linux-funny-commands/</a></p><br><p>作者：<a href="http://www.tecmint.com/author/avishek/" target="_blank" rel="external">Avishek Kumar</a> 译者：<a href="https://github.com/wangjiezhe" target="_blank" rel="external">wangjiezhe</a> 校对：<a href="https://github.com/carolinewuyan" target="_blank" rel="external">Caroline</a></p><br><p>本文由 <a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="external">LCTT</a> 原创翻译，<a href="http://linux.cn/" target="_blank" rel="external">Linux中国</a> 荣誉推出</p><br><br><div class="copyright"><br>        <div><br>        原文： <a href="http://www.tecmint.com/linux-funny-commands/" target="_blank">http://www.tecmint.com/linux-funny-commands/</a>&nbsp;&nbsp;&nbsp;&nbsp;            </div><br><br>    <div><br>                    </div><br><br>                    <div>本文是原创投递或翻译投递，<href="http: linux.cn="" "="">Linux中国首发地址：<a href="http://linux.cn/article-4128-1.html" target="_blank" rel="external">http://linux.cn/article-4128-1.html</a>&lt;/href=”http:&gt;</href="http:></div><div><span style="color:red;">欢迎转载，敬请在正文中标注并保留原文/译文链接和作者/译者等信息</span></div><br><br></div><br><div class="hm"><br><a title="分享到腾讯微博" href="javascript:void( share_tqq(SITEURL + 'article-4128-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201410/30/234015hk8rytpyhr8hmihb.jpg.large.jpg') );" class="tqq_large" target="_blank" rel="external"></a><br><a title="分享到新浪微博" href="javascript:void( share_tsina(SITEURL + 'article-4128-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201410/30/234015hk8rytpyhr8hmihb.jpg.large.jpg') );" class="tsina_large" target="_blank" rel="external"></a><br></div><br></td>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[adb查看android系统相关命令]]></title>
      <url>http://percychen.com/2014/10/31/2014-10-31-androidadb/</url>
      <content type="html"><![CDATA[<p>####其实很多命令我在其它文章中都介绍过了，今天整合一下</p>
<h3 id="备份boot-img"><a href="#备份boot-img" class="headerlink" title="备份boot.img"></a>备份boot.img</h3><p> 今天刚从独行无疆那里学的</p>
<pre><code>dd if=dev/bootimg of=sdcard/boot.img count=1 bs=$((0x1000000))
</code></pre><p>注：bs可以从分区信息中读取</p>
<h3 id="查看分区表（三种方法）"><a href="#查看分区表（三种方法）" class="headerlink" title="查看分区表（三种方法）"></a>查看分区表（三种方法）</h3><pre><code>cat /proc/emmc
adb pull /cache/recovery/last_log . &amp;&amp; cat last_log
cat /proc/dumchar_info
</code></pre><p>其中的 android分区就是 system分区</p>
<p>其中的 userdata分区就是data分区</p>
<p>对于古老的机器可以尝试:</p>
<pre><code>cat /proc/mtd
</code></pre><h3 id="测试键值"><a href="#测试键值" class="headerlink" title="测试键值"></a>测试键值</h3><pre><code>adb shell getevent
</code></pre><h3 id="查看cpu和内存事实占用情况"><a href="#查看cpu和内存事实占用情况" class="headerlink" title="查看cpu和内存事实占用情况"></a>查看cpu和内存事实占用情况</h3><pre><code>adb shell top -m 15
</code></pre><h3 id="查看内存使用详情"><a href="#查看内存使用详情" class="headerlink" title="查看内存使用详情"></a>查看内存使用详情</h3><pre><code>adb shell dumpsys meminfo
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[五种开源协议的比较]]></title>
      <url>http://percychen.com/2014/10/31/2014-10-31-OpenSourcePritocol/</url>
      <content type="html"><![CDATA[<p><strong>当我将开源当做一种习惯的时候，我突然意识到，使用一种开源协议是一件必不可少的事情了</strong></p>
<p>今天于是花时间脑补了一下开源协议。记录下来，下次补脑的时候用：</p>
<p>现今经过Open Source Initiative组织通过批准的开源协议目前有<a href="http://www.opensource.org/licenses/alphabetical" target="_blank" rel="external">58种</a>。我们在常见的开源协议如BSD, GPL, LGPL,MIT等都是OSI批准的协议。</p>
<p>如果要开源自己的代码，最好也是选择这些被批准的开源协议。</p>
<p>这里介绍五种最常用的开源协议及它们的适用范围，供那些准备开源或者使用开源产品的开发人员/厂家参考。</p>
<h3 id="BSD开源协议（original-BSD-license、FreeBSD-license、Original-BSD-license）"><a href="#BSD开源协议（original-BSD-license、FreeBSD-license、Original-BSD-license）" class="headerlink" title="BSD开源协议（original BSD license、FreeBSD license、Original BSD license）"></a>BSD开源协议（original BSD license、FreeBSD license、Original BSD license）</h3><p>BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以”为所欲为”,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。</p>
<p>但”为所欲为”的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p>
<ul>
<li>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。</li>
<li>如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。</li>
<li>不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。</li>
</ul>
<p>BSD 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p>
<h3 id="Apache-Licence-2-0（Apache-License-Version-2-0、Apache-License-Version-1-1、Apache-License-Version-1-0）"><a href="#Apache-Licence-2-0（Apache-License-Version-2-0、Apache-License-Version-1-1、Apache-License-Version-1-0）" class="headerlink" title="Apache Licence 2.0（Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0）"></a>Apache Licence 2.0（Apache License, Version 2.0、Apache License, Version 1.1、Apache License, Version 1.0）</h3><p>Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似：</p>
<ul>
<li>需要给代码的用户一份Apache Licence</li>
<li>如果你修改了代码，需要再被修改的文件中说明。</li>
<li>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</li>
<li>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。</li>
</ul>
<p>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p>
<h3 id="GPL（GNU-General-Public-License）"><a href="#GPL（GNU-General-Public-License）" class="headerlink" title="GPL（GNU General Public License）"></a>GPL（GNU General Public License）</h3><p>我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是</p>
<ul>
<li>代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用</li>
<li>不允许修改后和衍生的代码做为闭源的商业软件发布和销售。</li>
</ul>
<p>这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。</p>
<p>GPL协议的主要内容是只要在一个软件中使用(“使用”指类库引用，修改后的代码或者衍生代码)GPL 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。这就是所谓的”传染性”。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p>
<p>由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。</p>
<p>其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。</p>
<h3 id="LGPL（GNU-Lesser-General-Public-License）"><a href="#LGPL（GNU-Lesser-General-Public-License）" class="headerlink" title="LGPL（GNU Lesser General Public License）"></a>LGPL（GNU Lesser General Public License）</h3><p>LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。</p>
<ul>
<li>如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。</li>
</ul>
<p>因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p>
<p>GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品</p>
<h3 id="MIT（MIT）"><a href="#MIT（MIT）" class="headerlink" title="MIT（MIT）"></a>MIT（MIT）</h3><p>MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git cola的下载和使用]]></title>
      <url>http://percychen.com/2014/10/29/2014-10-29-gitcola/</url>
      <content type="html"><![CDATA[<p>###为什么使用它 | WHY USE IT</p>
<p>原因很简单，以前在乐蛙工作的时候用过，很喜欢这个插件，一直以为是git自带，一直没找到。今天找到了。所以介绍下。</p>
<p>###关于git cola | ABOUT GIT COLA</p>
<blockquote>
<p>Python 编写，集成常用的pull，push，commit功能，可用来对比文件不同。是一个GUI的git图形管理器</p>
</blockquote>
<p>###安装 | HOW TO INSTALL</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">arch<br>debian<br>fedora<br>gentoo<br>opensuse<br>ubuntu<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">yaourt -S git-cola<br>apt-get install git-cola<br>yum install git-cola<br>emerge git-cola<br>use the one-click install link<br>apt-get install git-cola</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###使用 | HOW TO USE</p>
<blockquote>
<p>git add –all (or  git add . )</p>
<p>git cola (此步代替git commit)</p>
<p>git push</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[广播的注册发送和接受]]></title>
      <url>http://percychen.com/2014/10/29/2014-10-29-boardcast/</url>
      <content type="html"><![CDATA[<p>###发送</p>
<p>####先注册一个动作：</p>
<pre><code>public static final String SONG_NAME = &quot;hehe&quot;;
</code></pre><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">Intent song=new Intent();<br>song.setAction(SONG_NAME);  //标记作用的<br>song.putExtra(“name”,songs.get(position).getName());//发送的消息<br>sendBroadcast(song);</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###注册</p>
<p>静态注册直接在AndroidManifest里面注册就可以了，这里主要讲动态注册：<br>先注册两个变量</p>
<pre><code>SongReceiver songReceiver;
public static final String SONG_NAME = &quot;hehe&quot;;
</code></pre><p>然后再注册接收器：</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">songReceiver =new SongReceiver();<br>IntentFilter songfilter = new IntentFilter();<br>songfilter.addAction(SONG_NAME);<br>registerReceiver(songReceiver,songfilter);</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###直接注册</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">registerReceiver(new MyReceiver(),<br>         new IntentFilter(“com.hmkcode.android.USER_ACTION”));</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###接收</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7</pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">public class SongReceiver extends BroadcastReceiver{<br>public void onReceive(Context context, Intent intent) {<br>String msg=intent.getStringExtra(“name”);//接收信息<br>list_song_name=(TextView)findViewById(R.id.list_song_name);<br>list_song_name.setText(msg);<br>}<br>}</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>


]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell读取文件每一行的方式]]></title>
      <url>http://percychen.com/2014/10/21/2014-10-21-shellreadline/</url>
      <content type="html"><![CDATA[<ul>
<li><p>使用read命令读取一行数据</p>
<pre><code>while read myline
do
echo &quot;LINE:&quot;$myline
done &lt; datafile.txt
</code></pre></li>
</ul>
<h4 id="解决read在这个语法中失效的问题："><a href="#解决read在这个语法中失效的问题：" class="headerlink" title="解决read在这个语法中失效的问题："></a>解决read在这个语法中失效的问题：</h4><pre><code>read &lt;/dev/tty   #再给它重定向一次就可以了
</code></pre><ul>
<li><p>使用read命令读取一行数据</p>
<pre><code>cat datafile.txt | while read myline
do
echo &quot;LINE:&quot;$myline
done
</code></pre></li>
<li><p>读取一行数据</p>
<pre><code>cat datafile.txt | while myline=$(line)
do
echo &quot;LINE:&quot;$myline
done
</code></pre></li>
<li><p>读取一行数据</p>
<pre><code>while myline=$(line)
do
echo &quot;LINE:&quot;$myline
done &lt; datafile.txt
</code></pre></li>
<li><p>使用read命令读取变量数据</p>
<pre><code>cat datafile.txt | while read paraa parab parac
do
echo &quot;PARAA:&quot;$paraa
echo &quot;PARAB:&quot;$parab
echo &quot;PARAC:&quot;$parac
</code></pre><p>done</p>
</li>
<li><p>使用read命令读取变量数据</p>
<pre><code>while read paraa parab parac
do
echo &quot;PARAA:&quot;$paraa
echo &quot;PARAB:&quot;$parab
echo &quot;PARAC:&quot;$parac
done &lt; datafile.txt
</code></pre></li>
</ul>
<p>原文地址：<a href="http://blog.163.com/clevertanglei900@126/blog/static/1113522592011625112619590/" target="_blank" rel="external">http://blog.163.com/clevertanglei900@126/blog/static/1113522592011625112619590/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sort的用法]]></title>
      <url>http://percychen.com/2014/10/21/2014-10-21-linuxsortcommand/</url>
      <content type="html"><![CDATA[<p>######sort命令是帮我们依据不同的数据类型进行排序，其语法及常用参数格式：</p>
<p>　　    sort [-bcfMnrtk][源文件][-o 输出文件]</p>
<p>######补充说明：sort可针对文本文件的内容，以行为单位来排序。</p>
<p>####参    数：</p>
<pre><code>-b   忽略每行前面开始出的空格字符
-c   检查文件是否已经按照顺序排序
-f   排序时，忽略大小写字母
-M   将前面3个字母依照月份的缩写进行排序
-n   依照数值的大小排序
-o (输出文件)   将排序后的结果存入指定的文件
-r   以相反的顺序来排序
-t (分隔字符)   指定排序时所用的栏位分隔字符
-k  选择以哪个区间进行排序&lt;/code&gt;&lt;/pre&gt;
</code></pre><p>#####Sort的使用</p>
<ul>
<li><p>sort将文件的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。exmaple:</p>
<pre><code>cat seq.txt---&gt;
        banana
        apple
        pear
        orange
sort seq.txt---&gt;
        apple
        banana
        orange
        pear
</code></pre></li>
<li><p>sort的-u选项,它的作用很简单，就是在输出行中去除重复行。</p>
<pre><code>        cat seq.txt---&gt;
banana
apple
pear
orange
pear
</code></pre><p> sort seq.txt—&gt;</p>
<pre><code>apple
banana
orange
pear
pear
</code></pre><p> sort -u seq.txt—&gt;</p>
<pre><code>apple
banana
orange
pear
</code></pre></li>
</ul>
<p>pear由于重复被-u选项无情的删除了。</p>
<ul>
<li><p>sort的-r选项,sort默认的排序方式是升序，如果想改成降序，就加个-r就搞定了。</p>
<pre><code>        cat number.txt ---&gt;
1
3
5
2
4
</code></pre><p> sort number.txt—&gt;</p>
<pre><code>1
2
3
4
5
</code></pre><p> sort -r number.txt—&gt;</p>
<pre><code>5
4
3
2
1
</code></pre></li>
<li><p>sort的-o选项,由于sort默认是把结果输出到标准输出，所以需要用重定向才能将结果写入文件，形如sort filename &gt; newfile。<br><br>但是，如果你想把排序结果输出到原文件中，用重定向可就不行了。</p>
<pre><code>sort -r number.txt &gt; number.txt
cat number.txt
什么都没有输出
</code></pre></li>
</ul>
<p>看，竟然将number清空了。</p>
<p>就在这个时候，-o选项出现了，它成功的解决了这个问题，让你放心的将结果写入原文件。这或许也是-o比重定向的唯一优势所在。</p>
<pre><code>[rocrocket@rocrocket programming]$ cat number.txt
1
3
5
2
4
[rocrocket@rocrocket programming]$ sort -r number.txt -o number.txt
[rocrocket@rocrocket programming]$ cat number.txt
5
4
3
2
1
</code></pre><ul>
<li>sort的-n选项</li>
</ul>
<p>你有没有遇到过10比2小的情况。我反正遇到过。出现这种情况是由于排序程序将这些数字按字符来排序了，排序程序会先比较1和2，显然1小，所以就将10放在2前面喽。这也是sort的一贯作风。</p>
<p>我们如果想改变这种现状，就要使用-n选项，来告诉sort，“要以数值来排序”！</p>
<pre><code>[rocrocket@rocrocket programming]$ cat number.txt
1
10
19
11
2
5
[rocrocket@rocrocket programming]$ sort number.txt
1
10
11
19
2
5
[rocrocket@rocrocket programming]$ sort -n number.txt
1
2
5
10
11
19
</code></pre><ul>
<li><p>sort的-t选项和-k选项,       如果有一个文件的内容是这样：</p>
<pre><code>[rocrocket@rocrocket programming]$ cat facebook.txt
banana:30:5.5
apple:10:2.5
pear:90:2.3
orange:20:3.4
</code></pre></li>
</ul>
<p>这个文件有三列，列与列之间用冒号隔开了，第一列表示水果类型，第二列表示水果数量，第三列表示水果价格。那么我想以水果数量来排序，也就是以第二列来排序，如何利用sort实现？幸好，sort提供了-t选项，后面可以设定间隔符。指定了间隔符之后，就可以用-k来指定列数了。</p>
<pre><code>[rocrocket@rocrocket programming]$ sort -n -k 2 -t ‘:’ facebook.txt
apple:10:2.5
orange:20:3.4
banana:30:5.5
pear:90:2.3
</code></pre><ul>
<li>其他的sort常用选项</li>
</ul>
<blockquote>
<p>-f会将小写字母都转换为大写字母来进行比较，亦即忽略大小写</p>
<p>-c会检查文件是否已排好序，如果乱序，则输出第一个乱序的行的相关信息，最后返回1</p>
<p>-C会检查文件是否已排好序，如果乱序，不输出内容，仅返回1</p>
<p>-M会以月份来排序，比如JAN小于FEB等等</p>
<p>-b会忽略每一行前面的所有空白部分，从第一个可见字符开始比较。</p>
</blockquote>
<p>文章转自：<a href="http://www.cnblogs.com/dong008259/archive/2011/12/08/2281214.html" target="_blank" rel="external">http://www.cnblogs.com/dong008259/archive/2011/12/08/2281214.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下 解压zip,tar等压缩文件详解]]></title>
      <url>http://percychen.com/2014/10/18/2014-10-18-zipcommand/</url>
      <content type="html"><![CDATA[<p>###zip命令</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -r myfile.zip ./*</div></pre></td></tr></table></figure>
<p>将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件.</p>
<p>要使用 zip 来压缩文件夹，在 shell 提示下键入下面的命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -r filename.zip filesdir</div></pre></td></tr></table></figure>
<p>你可以使用 zip 命令同时处理多个文件和目录，方法是将它们逐一列出，并用空格间隔：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -r filename.zip file1 file2 file3 /usr/work/school</div></pre></td></tr></table></figure>
<p>以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。</p>
<p>###unzip</p>
<p>要抽取 zip 文件的内容，键入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">unzip filename.zip</div><div class="line">unzip filename.zip <span class="string">"insidefile.xml"</span>  <span class="comment">#解压某个文件或者文件夹</span></div><div class="line">unzip -o <span class="_">-d</span> /home/yun myfile.zip</div></pre></td></tr></table></figure>
<p>把myfile.zip文件解压到 /home/yun/ <br><br>-o:不提示的情况下覆盖文件；<br><br>-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；</p>
<p>###其他</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip <span class="_">-d</span> myfile.zip smart.txt</div></pre></td></tr></table></figure>
<p>删除压缩文件中smart.txt文件</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">zip -m myfile.zip ./rpm_info.txt</div></pre></td></tr></table></figure>
<p>向压缩文件中myfile.zip中添加rpm_info.txt文件</p>
<h3 id="tar-命令详解"><a href="#tar-命令详解" class="headerlink" title="tar 命令详解"></a>tar 命令详解</h3><table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>-c:</td>
<td>建立压缩档案</td>
</tr>
<tr>
<td>-x：</td>
<td>解压</td>
</tr>
<tr>
<td>-t：</td>
<td>查看内容</td>
</tr>
<tr>
<td>-r：</td>
<td>向压缩归档文件末尾追加文件</td>
</tr>
<tr>
<td>-u：</td>
<td>更新原压缩包中的文件</td>
</tr>
</tbody>
</table>
<p>这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。</p>
<p>下面的参数-f是必须的</p>
<p>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -cf all.tar *.jpg</div></pre></td></tr></table></figure>
<blockquote>
<p>这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tar -rf all.tar *.gif</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tar -uf all.tar logo.gif</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tar -tf all.tar</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这条命令是列出all.tar包中所有文件，-t是列出文件的意思</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># tar -xf all.tar</span></div></pre></td></tr></table></figure>
<blockquote>
<p>这条命令是解出all.tar包中所有文件，-t是解开的意思</p>
</blockquote>
<p>###各种文件压缩</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tar –cvf jpg.tar *.jpg <span class="comment">#将目录里所有jpg文件打包成tar.jpg</span></div><div class="line">tar –czf jpg.tar.gz *.jpg <span class="comment">#将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</span></div><div class="line">tar –cjf jpg.tar.bz2 *.jpg <span class="comment">#将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</span></div><div class="line">tar –cZf jpg.tar.Z *.jpg <span class="comment">#将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</span></div><div class="line">rar a jpg.rar *.jpg <span class="comment">#rar格式的压缩，需要先下载rar for linux</span></div><div class="line">zip jpg.zip *.jpg <span class="comment">#zip格式的压缩，需要先下载zip for linux</span></div></pre></td></tr></table></figure>
<p>###各种文件解压</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">tar –xvf file.tar <span class="comment">#解压 tar包</span></div><div class="line">tar -xzvf file.tar.gz <span class="comment">#解压tar.gz</span></div><div class="line">tar -xjvf file.tar.bz2 <span class="comment">#解压 tar.bz2</span></div><div class="line">tar –xZvf file.tar.Z <span class="comment">#解压tar.Z</span></div><div class="line">unrar e file.rar <span class="comment">#解压rar</span></div><div class="line">unzip file.zip <span class="comment">#解压zip</span></div></pre></td></tr></table></figure>
<p>##总结</p>
<table>
<thead>
<tr>
<th>格式</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>*.tar</td>
<td>tar –xvf</td>
</tr>
<tr>
<td>*.gz</td>
<td>gzip -d或者gunzip</td>
</tr>
<tr>
<td><em>.tar.gz和</em>.tgz</td>
<td>tar –xzf</td>
</tr>
<tr>
<td>*.bz2</td>
<td>bzip2 -d或者bunzip2</td>
</tr>
<tr>
<td>*.tar.bz2</td>
<td>tar –xjf</td>
</tr>
<tr>
<td>*.Z</td>
<td>uncompress</td>
</tr>
<tr>
<td>*.tar.Z</td>
<td>tar –xZf</td>
</tr>
<tr>
<td>*.rar</td>
<td>unrar e</td>
</tr>
<tr>
<td>*.zip</td>
<td>unzip</td>
</tr>
</tbody>
</table>
<p>```</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[命令行浏览器 curl 命令详解]]></title>
      <url>http://percychen.com/2014/10/18/2014-10-18-curlcommand/</url>
      <content type="html"><![CDATA[<div id="content" class="content mod-cs-content text-content clearfix"> <p>CURL&nbsp;—&nbsp;命令行浏览器<br><br>这东西现在已经是苹果机上内置的命令行工具之一了，可见其魅力之一斑<br><br>1)<br>二话不说，先从这里开始吧！<br><br>curl&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>回车之后，www.yahoo.com&nbsp;的html就稀里哗啦地显示在屏幕上了<del>~</del><br><br>2)<br>嗯，要想把读过来页面存下来，是不是要这样呢？<br>curl&nbsp;<a href="http://www.yahoo.com&nbsp;&gt;&nbsp;page.html" target="_blank" rel="external">http://www.yahoo.com&nbsp;&gt;&nbsp;page.html</a><br><br>当然可以，但不用这么麻烦的！<br>用curl的内置option就好，存下http的结果，用这个option:&nbsp;-o<br>curl&nbsp;-o&nbsp;page.html&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>这样，你就可以看到屏幕上出现一个下载页面进度指示。等进展到100%，自然就OK咯<br><br>3)<br>什么什么？！访问不到？肯定是你的proxy没有设定了。<br>使用curl的时候，用这个option可以指定http访问所使用的proxy服务器及其端口：&nbsp;-x<br>curl&nbsp;-x&nbsp;123.45.67.89:1080&nbsp;-o&nbsp;page.html&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br><br>4)<br>访问有些网站的时候比较讨厌，他使用cookie来记录session信息。<br>像IE/NN这样的浏览器，当然可以轻易处理cookie信息，但我们的curl呢？…..<br>我们来学习这个option:&nbsp;-D&nbsp;&lt;–&nbsp;这个是把http的response里面的cookie信息存到一个特别的文件中去<br>curl&nbsp;-x&nbsp;123.45.67.89:1080&nbsp;-o&nbsp;page.html&nbsp;-D&nbsp;cookie0001.txt&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>这样，当页面被存到page.html的同时，cookie信息也被存到了cookie0001.txt里面了<br><br><br>5）<br>那么，下一次访问的时候，如何继续使用上次留下的cookie信息呢？要知道，很多网站都是靠监视你的cookie信息，<br>来判断你是不是不按规矩访问他们的网站的。<br>这次我们使用这个option来把上次的cookie信息追加到http&nbsp;request里面去：&nbsp;-b<br>curl&nbsp;-x&nbsp;123.45.67.89:1080&nbsp;-o&nbsp;page1.html&nbsp;-D&nbsp;cookie0002.txt&nbsp;-b&nbsp;cookie0001.txt&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>这样，我们就可以几乎模拟所有的IE操作，去访问网页了！<br><br><br>6）<br>稍微等等<del>~</del>我好像忘记什么了<del>~</del><br>对了！是浏览器信息<del>~~<br><br>有些讨厌的网站总要我们使用某些特定的浏览器去访问他们，有时候更过分的是，还要使用某些特定的版本</del><del><br>NND，哪里有时间为了它去找这些怪异的浏览器呢！？<br><br>好在curl给我们提供了一个有用的option，可以让我们随意指定自己这次访问所宣称的自己的浏览器信息：&nbsp;-A<br>curl&nbsp;-A&nbsp;”Mozilla/4.0&nbsp;(compatible;&nbsp;MSIE&nbsp;6.0;&nbsp;Windows&nbsp;NT&nbsp;5.0)”&nbsp;-x&nbsp;123.45.67.89:1080&nbsp;-o&nbsp;page.html&nbsp;-D&nbsp;cookie0001.txt&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>这样，服务器端接到访问的要求，会认为你是一个运行在Windows&nbsp;2000上的IE6.0，嘿嘿嘿，其实也许你用的是苹果机呢！<br><br>而”Mozilla/4.73&nbsp;[en]&nbsp;(X11;&nbsp;U;&nbsp;Linux&nbsp;2.2;&nbsp;15&nbsp;i686”则可以告诉对方你是一台PC上跑着的Linux，用的是Netscape&nbsp;4.73，呵呵呵<br><br><br>7）<br>另外一个服务器端常用的限制方法，就是检查http访问的referer。比如你先访问首页，再访问里面所指定的下载页，这第二次访问的referer地址就是第一次访问成功后的页面地址。这样，服务器端只要发现对下载页面某次访问的referer地址不&nbsp;是首页的地址，就可以断定那是个盗连了</del><del>~<br><br>讨厌讨厌</del>~我就是要盗连<del>~</del>！！<br>幸好curl给我们提供了设定referer的option：&nbsp;-e<br>curl&nbsp;-A&nbsp;”Mozilla/4.0&nbsp;(compatible;&nbsp;MSIE&nbsp;6.0;&nbsp;Windows&nbsp;NT&nbsp;5.0)”&nbsp;-x&nbsp;123.45.67.89:1080&nbsp;-e&nbsp;”mail.yahoo.com”&nbsp;-o&nbsp;page.html&nbsp;-D&nbsp;cookie0001.txt&nbsp;<a href="http://www.yahoo.com" target="_blank" rel="external">http://www.yahoo.com</a><br><br>这样，就可以骗对方的服务器，你是从mail.yahoo.com点击某个链接过来的了，呵呵呵<br><br><br>8）<br>写着写着发现漏掉什么重要的东西了！—–&nbsp;利用curl&nbsp;下载文件<br><br>刚才讲过了，下载页面到一个文件里，可以使用&nbsp;-o&nbsp;，下载文件也是一样。<br>比如，&nbsp;curl&nbsp;-o&nbsp;1.jpg&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~zzh/screen1.JPG" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/screen1.JPG</a><br>这里教大家一个新的option：&nbsp;-O<br>大写的O，这么用：&nbsp;curl&nbsp;-O&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~zzh/screen1.JPG" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/screen1.JPG</a><br>这样，就可以按照服务器上的文件名，自动存在本地了！<br><br>再来一个更好用的。<br>如果screen1.JPG以外还有screen2.JPG、screen3.JPG、….、screen10.JPG需要下载，难不成还要让我们写一个script来完成这些操作？<br>不干！<br>在curl里面，这么写就可以了：<br>curl&nbsp;-O&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~zzh/screen[1-10].JPG" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/screen[1-10].JPG</a><br><br>呵呵呵，厉害吧？！<del>~<br><br>9）<br>再来，我们继续讲解下载！<br>curl&nbsp;-O&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG</a><br><br>这样产生的下载，就是<br>~zzh/001.JPG<br>~zzh/002.JPG<br>…<br>~zzh/201.JPG<br>~nick/001.JPG<br>~nick/002.JPG<br>…<br>~nick/201.JPG<br><br>够方便的了吧？哈哈哈<br><br>咦？高兴得太早了。<br>由于zzh/nick下的文件名都是001，002…，201，下载下来的文件重名，后面的把前面的文件都给覆盖掉了</del>~<br><br>没关系，我们还有更狠的！<br>curl&nbsp;-o&nbsp;#2_#1.jpg&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG</a><br><br>–这是…..自定义文件名的下载？<br>–对头，呵呵！<br><br>#1是变量，指的是{zzh,nick}这部分，第一次取值zzh，第二次取值nick<br>#2代表的变量，则是第二段可变部分—[001-201]，取值从001逐一加到201<br>这样，自定义出来下载下来的文件名，就变成了这样：<br>原来：&nbsp;~zzh/001.JPG&nbsp;—&gt;&nbsp;下载后：&nbsp;001-zzh.JPG<br>原来：&nbsp;~nick/001.JPG&nbsp;—&gt;&nbsp;下载后：&nbsp;001-nick.JPG<br><br>这样一来，就不怕文件重名啦，呵呵<br><br><br>9）<br>继续讲下载<br>我们平时在windows平台上，flashget这样的工具可以帮我们分块并行下载，还可以断线续传。<br>curl在这些方面也不输给谁，嘿嘿<br><br>比如我们下载screen1.JPG中，突然掉线了，我们就可以这样开始续传<br>curl&nbsp;-c&nbsp;-O&nbsp;<a href="http://cgi2.tky.3wb.ne.jp/~zzh/screen1.JPG" target="_blank" rel="external">http://cgi2.tky.3wb.ne.jp/~zzh/screen1.JPG</a><br><br>当然，你不要拿个flashget下载了一半的文件来糊弄我<del>~~别的下载软件的半截文件可不一定能用哦</del>~<br><br>分块下载，我们使用这个option就可以了：&nbsp;-r<br>举例说明<br>比如我们有一个<a href="http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3&nbsp;要下载（赵老师的电话朗诵&nbsp;:D&nbsp;）" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3&nbsp;要下载（赵老师的电话朗诵&nbsp;:D&nbsp;）</a><br>我们就可以用这样的命令：<br>curl&nbsp;-r&nbsp;0-10240&nbsp;-o&nbsp;”zhao.part1”&nbsp;http:/cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3&nbsp;&amp;\<br>curl&nbsp;-r&nbsp;10241-20480&nbsp;-o&nbsp;”zhao.part1”&nbsp;http:/cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3&nbsp;&amp;\<br>curl&nbsp;-r&nbsp;20481-40960&nbsp;-o&nbsp;”zhao.part1”&nbsp;http:/cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3&nbsp;&amp;\<br>curl&nbsp;-r&nbsp;40961-&nbsp;-o&nbsp;”zhao.part1”&nbsp;http:/cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3<br><br>这样就可以分块下载啦。<br>不过你需要自己把这些破碎的文件合并起来<br>如果你用UNIX或苹果，用&nbsp;cat&nbsp;zhao.part*&nbsp;&gt;&nbsp;zhao.mp3就可以<br>如果用的是Windows，用copy&nbsp;/b&nbsp;来解决吧，呵呵<br><br>上面讲的都是http协议的下载，其实ftp也一样可以用。<br>用法嘛，<br>curl&nbsp;-u&nbsp;name:passwd&nbsp;ftp://ip:port/path/file<br>或者大家熟悉的<br>curl&nbsp;ftp://name:passwd@ip:port/path/file<br><br><br><br>10)<br>说完了下载，接下来自然该讲上传咯<br>上传的option是&nbsp;-T<br><br>比如我们向ftp传一个文件：&nbsp;curl&nbsp;-T&nbsp;localfile&nbsp;-u&nbsp;name:passwd&nbsp;ftp://upload_site:port/path/<br><br>当然，向http服务器上传文件也可以<br>比如&nbsp;curl&nbsp;-T&nbsp;localfile&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~zzh/abc.cgi" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/abc.cgi</a><br>注意，这时候，使用的协议是HTTP的PUT&nbsp;method<br><br>刚才说到PUT，嘿嘿，自然让老服想起来了其他几种methos还没讲呢！<br>GET和POST都不能忘哦。<br><br>http提交一个表单，比较常用的是POST模式和GET模式<br><br>GET模式什么option都不用，只需要把变量写在url里面就可以了<br>比如：<br>curl&nbsp;<a href="http://www.yahoo.com/login.cgi?user=nickwolfe&amp;password=12345" target="_blank" rel="external">http://www.yahoo.com/login.cgi?user=nickwolfe&amp;password=12345</a><br><br>而POST模式的option则是&nbsp;-d<br><br>比如，curl&nbsp;-d&nbsp;”user=nickwolfe&amp;password=12345”&nbsp;<a href="http://www.yahoo.com/login.cgi" target="_blank" rel="external">http://www.yahoo.com/login.cgi</a><br>就相当于向这个站点发出一次登陆申请<del>~</del><br><br>到底该用GET模式还是POST模式，要看对面服务器的程序设定。<br><br>一点需要注意的是，POST模式下的文件上的文件上传，比如<br>&lt;form&nbsp;method=”POST”&nbsp;enctype=”multipar/form-data”&nbsp;action=”<a href="http://cgi2.tky.3web.ne.jp/~zzh/up_file.cgi&quot;&amp;gt" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/up_file.cgi&quot;&amp;gt</a>;<br>&lt;input&nbsp;type=file&nbsp;name=upload&gt;<br>&lt;input&nbsp;type=submit&nbsp;name=nick&nbsp;value=”go”&gt;<br>&lt;/form&gt;<br>这样一个HTTP表单，我们要用curl进行模拟，就该是这样的语法：<br>curl&nbsp;-F&nbsp;upload=@localfile&nbsp;-F&nbsp;nick=go&nbsp;<a href="http://cgi2.tky.3web.ne.jp/~zzh/up_file.cgi" target="_blank" rel="external">http://cgi2.tky.3web.ne.jp/~zzh/up_file.cgi</a><br><br>罗罗嗦嗦讲了这么多，其实curl还有很多很多技巧和用法<br>比如&nbsp;https的时候使用本地证书，就可以这样<br>curl&nbsp;-E&nbsp;localcert.pem&nbsp;<a href="https://remote_server" target="_blank" rel="external">https://remote_server</a><br><br>再比如，你还可以用curl通过dict协议去查字典<del>~</del><br>curl&nbsp;dict://dict.org/d:computer <br></p> </div>

<p>文章转自：<a href="http://hi.baidu.com/oyvfhp/item/747ecf16e4619c3ab83180ff" target="_blank" rel="external">http://hi.baidu.com/oyvfhp/item/747ecf16e4619c3ab83180ff</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[代码布局的一些零碎语法]]></title>
      <url>http://percychen.com/2014/10/18/2014-10-18-codelayout/</url>
      <content type="html"><![CDATA[<p>###前言</p>
<p>越来越喜欢代码布局，因为它的高效和迅速，如果熟练掌握，将比xml的效率更加高。</p>
<p>虽然可读性差了点，但是，你写的代码如果足够好，谁还会拆开去看呢？</p>
<p>以下是日常研发中的一些笔记</p>
<h3 id="FrameLayout下动态设置按钮居中"><a href="#FrameLayout下动态设置按钮居中" class="headerlink" title="FrameLayout下动态设置按钮居中"></a>FrameLayout下动态设置按钮居中</h3><pre><code>FrameLayout.LayoutParams lytp = new FrameLayout.LayoutParams(80,LayoutParams.WRAP_CONTENT);
lytp .gravity = Gravity.CENTER;
btn.setLayoutParams(lytp);
</code></pre><p>###RelativeLayout下动态设置子控件居中：</p>
<pre><code>RelativeLayout.LayoutParams lp=new RelativeLayout.LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);
lp.addRule(RelativeLayout.ALIGN_PARENT_RIGHT, RelativeLayout.TRUE);
lp.addRule(RelativeLayout.ALIGN_PARENT_TOP, RelativeLayout.TRUE);
btn1.setLayoutParams(lp);
</code></pre><p>###添加一个控件（以TextView为例）：</p>
<pre><code>TextView mlocation=new TextView(context);
String mlocation1=GetLocationByNumber.getCallerInfo(phonenumber,context);
mlocation.setText(mlocation1);
        this.addView(mlocation);
</code></pre><p>###给文字设置阴影值：</p>
<pre><code>mlocation.setShadowLayer(10, 1, 1, 0xff000000);//（模糊度（半径），阴影x方向位移，阴影y方向位移，阴影颜色）
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Makefile 编译过程讲解]]></title>
      <url>http://percychen.com/2014/10/13/2014-10-13-androidmakefile/</url>
      <content type="html"><![CDATA[<p>###android make 系统</p>
<ul>
<li>arch</li>
<li>board</li>
<li>device</li>
<li>product</li>
</ul>
<p>###Android.mk中的定义变量</p>
<ul>
<li>include $(CLEAR_VARS)</li>
</ul>
<p>它对应的是在./build/core/config.mk中的CLEAR_VARS:=$(BUILD_SYSTEM)/clear_vars.mk</p>
<ul>
<li>include $(BUILD_PACKAGE)</li>
</ul>
<p>它对应的是在./build/core/config.mk中的BUILD_PACKAGE:=$(BUILD_SYSTEM)/package.mk</p>
<ul>
<li>其它以此类推</li>
</ul>
<p>###main.mk中的模块</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">.PHONY:checkbuilt<br>.PHONY:prebuilt<br>.PHONY: files<br>.PHONY: ramdisk<br>.PHONY: systemimage<br>.PHONY: userdataimage<br>.PHONY: bootimage<br>.PHONY: recoveryimage<br>.PHONY: droidcore<br>.PHONY: apps_only<br>.PHONY: sdk<br>.PHONY: clean<br>.PHONY: clobber<br>.PHONY: modules<br>.PHONY: showcommands</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###makefile的文件结构</p>
<pre><code>LOCAL_PATH:=$(call my-dir) //获取当前目录
#include $(CLEAR_VARS) //make系统为子模块定义了很多的私有变量，这个调用是为了初始化所有的私有变量
...
//里面的内容根据不同的需要会出现不同的LOCAL变量
...
#include $(BUILD_XXX) //执行编译任务
</code></pre><p>###编译apk</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_SRC_FILES:=$(call all-subdir-java-files)<br>LOCAL_PACKAGE_NAME:=packageName<br>include $(BUILD_PACKAGE)<br></code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###编译依赖静态java库的应用程序</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_STATIC_JAVA_LIBRARIES:=static-library<br>LOCAL_SRC_FILES:=$(call all-subdir-java-files)<br>LOCAL_PACKAGE_NAME:=packageName<br>include $(BUILD_PACKAGE)</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###编译一个需要用平台key签名的应用程序</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_SRC_FILES:=$(call all-subdir-java-files)<br>LOCAL_PACKAGE_NAME:=packageName<br>LOCAL_CERTIFICATE:=platform<br>include $(BUILD_PACKAGE)</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###编译一个需要特定key的应用程序</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_SRC_FILES := $(call all-subdir-java-files)<br>LOCAL_PACKAGE_NAME := LocalPackage<br>LOCAL_CERTIFICATE := vendor/example/certs/app<br>include $(BUILD_PACKAGE)</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###添加一个预编译应用程序</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_SRC_FILES := $(LOCAL_MODULE).apk<br>LOCAL_MODULE := LocalModuleName<br>LOCAL_MODULE_CLASS := APPS<br>LOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)<br>include $(BUILD_PREBUILT)<br>LOCAL_SRC_FILES := $(call all-subdir-java-files)<br>LOCAL_JAVA_LIBRARIES := android.test.runner<br>LOCAL_MODULE := sample<br>include $(BUILD_STATIC_JAVA_LIBRARY) </code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p>###常用的mk分类</p>
<ul>
<li>Android.mk 用来编译模块或者apk的，module对应native code，package对应于java</li>
<li><p>AndroidProducts.mk 设置product，设置系统包含了那些应用target<em><os>-<arch>.mk，host</arch></os></em><os>-<arch>.mk，<os>-<arch>.mk 针对不同的系统和CPU架框进行设置<br>+BoardConfig.mk 设置主板用的，比如driver的选择</arch></os></arch></os></p>
</li>
<li><p>./build/core/Makefile 定义了image是如何生成的</p>
</li>
<li><p>frameworks/base/core/java 扩展SDK时，可以向里面添加自己的类</p>
</li>
</ul>
<p>###make参数</p>
<ul>
<li><p>. build/envsetup.sh 可以设置环境，运行之后会支持mm命令，使make支持只编译一个模块<br><br><br>用户也可以通过mm来编译指定模块，或者通过make clean-module_name来删除指定模块。</p>
</li>
<li><p>make ONE_SHOT_MAKEFILE=<path to="" androiod.mk=""></path></p>
</li>
</ul>
<p>通过CREATE_MODULE_INFO_FILE，build system会将所有的模块信息列在$(PRODUCT_OUT)/module-info.txt中</p>
<ul>
<li>make CREATE_MODULE_INFO_FILE=true 产生单个的image文件，用以早期的硬件测试</li>
</ul>
<p>HOST_BUILD_TYPE 和 TARGET_BUILD_TYPE 用来设置是debug还是release，debug的带有调试信息，这两个参数也可以在 buildspec.mk中进行设置以防止在别处被重复指定</p>
<ul>
<li>其它的一些变量</li>
</ul>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">LOCAL_AAPT_FLAGS<br>LOCAL_ACP_UNAVAILABL<br>LOCAL_ADDITIONAL_JAVA_DIR<br>LOCAL_AIDL_INCLUDES<br>LOCAL_ALLOW_UNDEFINED_SYMBOLS<br>LOCAL_ARM_MODE<br>LOCAL_ASFLAGS<br>LOCAL_ASSET_DIR<br>LOCAL_ASSET_FILES 在与BUILD_PACKAGE一起时有效，表示资源文件<br>LOCAL_BUILT_MODULE_STEM<br>LOCAL_C_INCLUDES 用来指定外面的头文件路径<br>LOCAL_CC 可以指定C编译器<br>LOCAL_JAR_MANIFEST<br>LOCAL_JARJAR_RULES<br>LOCAL_JAR_PATH<br>LOCAL_SHARED_LIBRARIES 可链接动态库<br>LOCAL_SRC_FILES 编译源文件<br>LOCAL_STATIC_JAVA_LIBRARIES<br>LOCAL_STATIC_LIBRARIES 可链接静态库<br>LOCAL_UNINSTALLABLE_MODULE<br>LOCAL_WHOLE_STATIC_LIBRARIES 禁止在连接时删除库中的无用代码<br>LOCAL_FORCE_STATIC_EXECUTABLE 如果编译的可执行程序要进行静态链接(执行时不依赖于任何动态库)<br>LOCAL_JAVA_LIBRARIES 编译java应用程序和库的时候指定包含的java类库，目前有core和framework两种<br>                     多数情况下定义成：LOCAL_JAVA_LIBRARIES := core framework<br>                     注意LOCAL_JAVA_LIBRARIES不是必须的，而且编译APK时不允许定义(系统会自动添加)<br></code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>


<ul>
<li>envsetup.mk会读取由envsetup.sh写入环境变量中的一些变量来配置 编译过程中的输出目录</li>
<li>config.mk里面定义了各种module所需要的工具，以及如何来编译各个模块</li>
</ul>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">CLEAR_VARS:= $(BUILD_SYSTEM)/clear_vars.mk<br>BUILD_HOST_STATIC_LIBRARY:= $(BUILD_SYSTEM)/host_static_library.mk<br>BUILD_HOST_SHARED_LIBRARY:= $(BUILD_SYSTEM)/host_shared_library.mk<br>BUILD_STATIC_LIBRARY:= $(BUILD_SYSTEM)/static_library.mk<br>BUILD_RAW_STATIC_LIBRARY := $(BUILD_SYSTEM)/raw_static_library.mk<br>BUILD_SHARED_LIBRARY:= $(BUILD_SYSTEM)/shared_library.mk<br>BUILD_EXECUTABLE:= $(BUILD_SYSTEM)/executable.mk<br>BUILD_RAW_EXECUTABLE:= $(BUILD_SYSTEM)/raw_executable.mk<br>BUILD_HOST_EXECUTABLE:= $(BUILD_SYSTEM)/host_executable.mk<br>BUILD_PACKAGE:= $(BUILD_SYSTEM)/package.mk<br>BUILD_HOST_PREBUILT:= $(BUILD_SYSTEM)/host_prebuilt.mk<br>BUILD_PREBUILT:= $(BUILD_SYSTEM)/prebuilt.mk<br>BUILD_MULTI_PREBUILT:= $(BUILD_SYSTEM)/multi_prebuilt.mk<br>BUILD_JAVA_LIBRARY:= $(BUILD_SYSTEM)/java_library.mk<br>BUILD_STATIC_JAVA_LIBRARY:= $(BUILD_SYSTEM)/static_java_library.mk<br>BUILD_HOST_JAVA_LIBRARY:= $(BUILD_SYSTEM)/host_java_library.mk<br>BUILD_DROIDDOC:= $(BUILD_SYSTEM)/droiddoc.mk<br>BUILD_COPY_HEADERS := $(BUILD_SYSTEM)/copy_headers.mk<br>BUILD_KEY_CHAR_MAP := $(BUILD_SYSTEM)/key_char_map.mk<br>以上的*.mk中都包含了base_rules.mk</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<ul>
<li>products设置</li>
</ul>
<p>./build/target/product/AndroidProducts.mk</p>
<ul>
<li>module设置</li>
</ul>
<p>native code和java的一些通用方法都在./build/core/definitions.mk中</p>
<p>BUILD_SHARE_xxx等变量在./build/core/config.mk中</p>
<ul>
<li>Board设置</li>
</ul>
<p>./build/target/board/$(TARGET_DEVICE)/BoardConfig.mk<br>./vendor/*/$(TARGET_DEVICE)/BoardConfig.mk</p>
<ul>
<li>rules相关</li>
</ul>
<p>与 LOCAL_MODULE_TAGS相关的定义</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">include $(BUILD_STATIC_LIBRARY) 编译成静态库<br>include $(BUILD_SHARED_LIBRARY) 编译成动态库。<br>include $(BUILD_EXECUTABLE) 编译成可执行程序</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>


<p>###常用函数</p>
<table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">call my-dir<br>call all-subdir-java-files<br>call all-java-files-under<br>call all-makefiles-under,$(LOCAL_PATH)<br>call all-clean-step<br>call import-module,android/native_app_glue<br>call inherit-product,xxx.mk<br>call inherit-product-if-exists<br>call device-test<br>call include-path-for,libpagemap<br>call dist-for-goals,dist_files,$(LOCAL_BUILT_MODULE)<br>call _add-charger-image,$(_img)<br>call libfilterfw-all-java-files-under,$(1)<br>call libfilterfw_to_document,$(LOCAL_PATH)<br>call intermediates-dir-for,EXECUTABLES,$(LOCAL_MODULE,true)<br>call all-named-subdir-makefiles,$(legacy_modules)<br>call RM;call MKDIR<br>call emugl-begin-host-shared-library,libEGL_translator<br>call emugl-import,libOpenglOsUtils<br>call emugl-end-module<br>call emugl-export,LDLIBS,-lGL<br>cal emugl-export,LDFLAGS,$(GL_COMMON_LINKER_FLAGS)<br>call emugl-set-shared-library-subpath,hw<br>call emugl-export,C_INCLUDES,$(intermediates)<br>call all-makefiles-under,$(LOCAL_PATH) 这个和下面的区别还不清楚<br>call all-subdis-makefiles<br>这个是通常出现在整个makefile的尾部，以实现递归调用子目录中的makefile，使整个make系统成为一个树状结构</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table>

<p><a href="http://shine80769769.blog.163.com/blog/static/1791482452012619105744163/" target="_blank" rel="external">原文链接：http://shine80769769.blog.163.com/blog/static/1791482452012619105744163/</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转 Sublime Text 配置/快捷键/使用]]></title>
      <url>http://percychen.com/2014/10/10/2014-10-10-sublimetext/</url>
      <content type="html"><![CDATA[<p>本文节选于 <a href="http://www.kuqin.com/shuoit/20140929/342420.html" target="_blank" rel="external">Sublime Text全称指南</a></p>
<div class="entrycontent"><br>                        <div style="float:right;margin-top:20px;margin-left:0px"><br>                        <script type="text/javascript"><!--
                        google_ad_client = "ca-pub-4472781281916007";
                        /* 2012年文章页头部336&#42;280 */
                        google_ad_slot = "4736705774";
                        google_ad_width = 336;
                        google_ad_height = 280;
                        //--><br>                        </script><br>                        <script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"><br>                        </script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;"></iframe></ins></ins><br>                        </div><br>                        <h3>摘要（Abstract）</h3><br><p>本文系统全面的介绍了Sublime Text，旨在成为最优秀的Sublime Text中文教程。</p><br><h4>更新记录</h4><br><ol style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><br>    <li>2014/09/27：完成初稿</li><br>    <li>2014/09/28：<br>    <ul><br>        <li>更正打开控制台的快捷键为<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + <code>&lt;/code&gt;&lt;/li&gt;
        &lt;li&gt;更正全局替换的快捷键为&lt;code style=&quot;margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, &#39;Andale Mono&#39;, &#39;lucida console&#39;, &#39;Courier New&#39;, monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;&quot;&gt;Ctrl + Alt + Enter&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;前言（Prologue）&lt;/h3&gt;
&lt;p&gt;Sublime Text是一款跨平台代码编辑器（Code Editor），从最初的Sublime Text 1.0，到现在的Sublime Text 3.0，Sublime Text从一个不知名的编辑器演变到现在几乎是各平台首选的GUI编辑器。而这样优秀的编辑器却没有一个靠谱的中文教程，所以我试图通过本文弥补这个缺陷。&lt;/p&gt;
&lt;h4&gt;编辑器的选择（Editor Choices）&lt;/h4&gt;
&lt;p&gt;从初学编程到现在，我用过的编辑器有EditPlus、UltraEdit、Notepad++、Vim、TextMate和Sublime Text，如果让我从中推荐，我会毫不犹豫的推荐Vim和Sublime Text，原因有下面几点：&lt;/p&gt;
&lt;ol style=&quot;margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: &#39;PT Serif&#39;, Georgia, Times, &#39;Times New Roman&#39;, serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; list-style-position: initial; list-style-image: initial; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);&quot;&gt;
    &lt;li&gt;&lt;strong&gt;跨平台&lt;/strong&gt;：Vim和Sublime Text均为跨平台编辑器（在Linux、OS X和Windows下均可使用）。作为一个程序员，切换系统是常有的事情，为了减少重复学习，使用一个跨平台的编辑器是很有必要的。&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;可扩展&lt;/strong&gt;：Vim和Sublime Text都是可扩展的（Extensible），并包含大量实用插件，我们可以通过安装自己领域的插件来成倍提高工作效率。&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;互补&lt;/strong&gt;：Vim和Sublime Text分别是命令行环境（CLI）和图形界面环境（GUI）下的最佳选择，同时使用两者会大大提高工作效率。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;安装Package Control&lt;/h4&gt;
&lt;p&gt;前文提到Sublime Text支持大量插件，如何找到并管理这些插件就成了一个问题，Package Control正是为了解决这个问题而出现的，利用它我们可以很方便的浏览、安装和卸载Sublime Text中的插件。&lt;/p&gt;
&lt;p&gt;进入Package Control的&lt;a href=&quot;https://sublime.wbond.net/&quot;&gt;官网&lt;/a&gt;，里面有详细的&lt;a href=&quot;https://sublime.wbond.net/installation&quot;&gt;安装教程&lt;/a&gt;。Package Control支持Sublime Text 2和3，本文只给出3的安装流程：&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;使用&lt;code style=&quot;margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, &#39;Andale Mono&#39;, &#39;lucida console&#39;, &#39;Courier New&#39;, monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;&quot;&gt;Ctrl +</code></code>打开Sublime Text控制台。</li><br>    <li>将下面的代码粘贴到控制台里：</li><br></ul><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 4581px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">import urllib.request,os,hashlib; <br>h = ‘7183a2d3e96f11eeadd761d777e62404’ + ‘e330c659d4bb41d3bdf022e94cab3cd0’;<br>pf = ‘Package Control.sublime-package’;<br>ipp = sublime.installed_packages_path(); <br>urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <br>by = urllib.request.urlopen( ‘<a href="http://sublime.wbond.net/" target="_blank" rel="external">http://sublime.wbond.net/</a>‘ + pf.replace(‘ ‘, ‘%20’)).read();<br>dh = hashlib.sha256(by).hexdigest(); <br>print(‘Error validating download (got %s instead of %s), please try manual install’ % (dh, h)) <br>if dh != h else open(os.path.join( ipp, pf), ‘wb’ ).write(by)</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><ul><br>    <li>等待Package Control安装完成。之后使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + P</code>打开命令板，输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">PC</code>应出现Package Control：</li><br></ul><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I1L26-3.jpg" alt="Package Control安装成功"></p><br><p>成功安装Package Control之后，我们就可以方便的安装使用Sublime Text的各种插件：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I151I-4.gif" alt="使用Package Control安装插件"></p><br><h4>配置（Settings）</h4><br><p>与其他GUI环境下的编辑器不同，Sublime Text并没有一个专门的配置界面，与之相反，Sublime Text使用JSON配置文件，例如：</p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255,255,255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51,51,51) !important; background-position: 0% 0%;">1<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 757px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">{   “font_size”: 12,   “highlight_line”: true, }</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p>会将默认字体大小调整为12，并高亮当前行。</p><br><p>JSON配置文件的引入简化了Sublime Text的界面，但也使得配置变的复杂，一般我会到<a href="http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/settings.html" target="_blank" rel="external">这里</a>查看可用的Sublime Text配置。</p><br><h3>编辑（Editing）</h3><br><p>Sublime Text的编辑十分人性化——它不像Vim那样反人类（尽管我也用Vim但我还是要说Vim的快捷键设定绝壁连代谢产物都不如），少量的快捷键就可以完成绝大多数编辑任务。</p><br><h4>基本编辑（Basic Editing）</h4><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">↑↓←→</code>就是<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">↑↓←→</code>，不是<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">KJHL</code>，（没错我就是在吐槽Vim，尼玛设成<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">WSAD</code>也比这个强啊），粘贴剪切复制均和系统一致。</p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Enter</code>在当前行下面新增一行然后跳至该行；<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + Enter</code>在当前行上面增加一行并跳至该行。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14139-8.gif" alt="演示新增行"></p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + ←/→</code>进行逐词移动，相应的，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + ←/→</code>进行逐词选择。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14c5-9.gif" alt="演示逐词移动及选择"></p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + ↑/↓</code>移动当前显示区域，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + ↑/↓</code>移动当前行。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I16091-10.gif" alt="演示移动当前行"></p><br><h4>选择（Selecting）</h4><br><p>Sublime Text的一大亮点是支持多重选择——同时选择多个区域，然后同时进行编辑。</p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + D</code>选择当前光标所在的词并高亮该词所有出现的位置，再次<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + D</code>选择该词出现的下一个位置，在多重选词的过程中，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + K</code>进行跳过，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + U</code>进行回退，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Esc</code>退出多重编辑。</p><br><p>多重选词的一大应用场景就是重命名——从而使得代码更加整洁。尽管Sublime Text无法像IDE（例如Eclipse）那样进行自动重命名，但我们可以通过多重选词+多重编辑进行直观且便捷的重命名：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14L5-11.gif" alt="利用多重选词进行重命名"></p><br><p>有时我们需要对一片区域的所有行进行同时编辑，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + L</code>可以将当前选中区域打散，然后进行同时编辑：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14217-12.gif" alt="利用打散为列表套上引号"></p><br><p>有打散自然就有合并，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + J</code>可以把当前选中区域合并为一行：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I15327-13.gif" alt="合并选中行"></p><br><h4>查找&amp;替换（Finding&amp;Replacing）</h4><br><p>Sublime Text提供了强大的查找（和替换）功能，为了提供一个清晰的介绍，我将Sublime Text的查找功能分为<strong>快速查找</strong>、<strong>标准查找</strong>和<strong>多文件查找</strong>三种类型。</p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">快速查找&amp;替换</h4><br><p>多数情况下，我们需要查找文中某个关键字出现的其它位置，这时并不需要重新将该关键字重新输入一遍然后搜索，我们只需要使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + ←/→</code>或<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + D</code>选中关键字，然后<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">F3</code>跳到其下一个出现位置，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + F3</code>跳到其上一个出现位置，此外还可以用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + F3</code>选中其出现的所有位置（之后可以进行多重编辑，也就是快速替换）。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I11Y7-14.gif" alt="使用快速替换"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">标准查找&amp;替换</h4><br><p>另一种常见的使用场景是搜索某个已知但不在当前显示区域的关键字，这时可以使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + F</code>调出搜索框进行搜索：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I11P2-15.jpg" alt="Sublime Text的搜索框"></p><br><p>以及使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + H</code>进行替换：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I13P9-16.jpg" alt="Sublime Text的替换框"></p><br><h5 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 0.9em; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">关键字查找&amp;替换</h5><br><p>对于普通用户来说，常规的关键字搜索就可以满足其需求：在搜索框输入关键字后<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Enter</code>跳至关键字当前光标的下一个位置，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + Enter</code>跳至上一个位置，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Enter</code>选中其出现的所有位置（同样的，接下来可以进行快速替换）。</p><br><p>Sublime Text的查找有不同的模式：<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + C</code>切换大小写敏感（Case-sensitive）模式，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + W</code>切换整字匹配（Whole matching）模式，除此之外Sublime Text还支持在选中范围内搜索（Search in selection），这个功能没有对应的快捷键，但可以通过以下配置项自动开启。</p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255,255,255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51,51,51) !important; background-position: 0% 0%;">1<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 757px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">“auto_find_in_selection”: true</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p>这样之后在选中文本的状态下范围内搜索就会自动开启，配合这个功能，局部重命名（Local Renaming）变的非常方便：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I163N-17.gif" alt="使用范围搜索进行局部重命名"></p><br><p>使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + H</code>进行标准替换，输入替换内容后，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + H</code>替换当前关键字，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Alt + Enter</code>替换所有匹配关键字。</p><br><h5 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 0.9em; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">正则表达式查找&amp;替换</h5><br><p><a href="http://en.wikipedia.org/wiki/Regular_expression" target="_blank" rel="external">正则表达式</a>是非常强大的文本查找&amp;替换工具，Sublime Text中使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + R</code>切换正则匹配模式的开启/关闭。Sublime Text的使用<a href="http://www.boost.org/doc/libs/1_44_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html" target="_blank" rel="external">Boost里的Perl正则表达式风格</a>。</p><br><p>出于篇幅原因，本文不会对正则表达式进行详细介绍，<a href="http://regex.info/" target="_blank" rel="external">Mastering Regex</a>（中译本：<a href="/book/326524.html">精通正则表达式</a>）对正则表达式的原理和各语言下的使用进行了详细介绍。此外网上有大量正则表达式的优秀教程（<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">“正则表达式30分钟入门教程”</a>和<a href="http://msdn.microsoft.com/zh-cn/library/ae5bf541(v=vs.90" target="_blank" rel="external">MSDN正则表达式教程</a>.aspx)），以及在线测试工具（<a href="http://regexpal.com/" target="_blank" rel="external">regexpal</a>和<a href="http://www.regexr.com/" target="_blank" rel="external">regexer</a>）。</p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">多文件搜索&amp;替换</h4><br><p>使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + F</code>开启多文件搜索&amp;替换（注意此快捷键和搜狗输入法的简繁切换快捷键有冲突）：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I12M0-18.jpg" alt="多文件搜索界面"></p><br><p>多文件搜索&amp;替换默认在当前打开的文件和文件夹进行搜索/替换，我们也可以指定文件/文件夹进行搜索/替换。</p><br><h4>跳转（Jumping）</h4><br><p>Sublime Text提供了强大的跳转功能使得我们可以在不同的文件/方法/函数中无缝切换。就我的使用经验而言，目前还没有哪一款编辑器可以在这个方面超越Sublime Text。</p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">跳转到文件</h4><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + P</code>会列出当前打开的文件（或者是当前文件夹的文件），输入文件名然后<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Enter</code>跳转至该文件。</p><br><p>需要注意的是，Sublime Text使用模糊字符串匹配（Fuzzy String Matching），这也就意味着你可以通过文件名的前缀、首字母或是某部分进行匹配：例如，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">EIS</code>、<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Eclip</code>和<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Stupid</code>都可以匹配<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">EclipseIsStupid.java</code>。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I1L43-19.gif" alt="跳转到文件"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">跳转到符号</h4><br><p>尽管是一个文本编辑器，Sublime Text能够对代码符号进行一定程度的索引。<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + R</code>会列出当前文件中的符号（例如类名和函数名，但无法深入到变量名），输入符号名称<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Enter</code>即可以跳转到该处。此外，还可以使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">F12</code>快速跳转到当前光标所在符号的定义处（Jump to Definition）。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I13061-20.gif" alt="跳转到符号"></p><br><p>比较有意思的是，对于Markdown，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + R</code>会列出其大纲，非常实用。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14J3-21.jpg" alt="Markdown大纲"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">跳转到某行</h4><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + G</code>然后输入行号以跳转到指定行：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I15204-22.gif" alt="跳转到某行"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);">组合跳转</h4><br><p>在<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + P</code>匹配到文件后，我们可以进行后续输入以跳转到更精确的位置：</p><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">@</code>符号跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">@symbol</code>跳转到<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">symbol</code>符号所在的位置</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">#</code>关键字跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">#keyword</code>跳转到<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">keyword</code>所在的位置</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">:</code>行号跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">:12</code>跳转到文件的第12行。</li><br></ul><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I16123-23.gif" alt="组合跳转演示"></p><br><p>所以Sublime Text把<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + P</code>称之为<strong>“Go To Anything”</strong>，这个功能如此好用，以至于我认为没有其它编辑器能够超越它。</p><br><h4>中文输入法的问题</h4><br><p>从Sublime Text的初版（1.0）到现在（3.0 3065），中文输入法（包括日文输入法）都有一个问题：输入框不跟随。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I130G-24.jpg" alt="输入框不跟随"></p><br><p>目前官方还没有修复这个bug，解决方法是安装<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">IMESupport</code>插件，之后重启Sublime Text问题就解决了。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I142M-25.jpg" alt="修复之后输入框跟随"></p><br><h4>文件夹（Folders）</h4><br><p>Sublime Text支持以文件夹做为单位进行编辑，这在编辑一个文件夹下的代码时尤其有用。在<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">File</code>下<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Open Folder</code>：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I1B35-26.jpg" alt="文件夹视图"></p><br><p>你会发现右边多了一个侧栏，这个侧栏列出了当前打开的文件和文件夹的文件，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + K, Ctrl + B</code>显示或隐藏侧栏，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + P</code>快速跳转到文件夹里的文件。</p><br><h3>窗口&amp;标签（Windows &amp; Tabs）</h3><br><p>Sublime Text是一个多窗口多标签编辑器：我们既可以开多个Sublime Text窗口，也可以在一个Sublime Text窗口内开多个标签。</p><br><h4>窗口（Window）</h4><br><p>使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + N</code>创建一个新窗口（该快捷键再次和搜狗输入法快捷键冲突，个人建议禁用所有搜狗输入法快捷键）。</p><br><p>当窗口内没有标签时，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + W</code>关闭该窗口。</p><br><h4>标签（Tab）</h4><br><p>使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + N</code>在当前窗口创建一个新标签，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + W</code>关闭当前标签，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + T</code>恢复刚刚关闭的标签。</p><br><p>编辑代码时我们经常会开多个窗口，所以分屏很重要。<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 2</code>进行左右分屏，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 8</code>进行上下分屏，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 5</code>进行上下左右分屏（即分为四屏）。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I11544-27.gif" alt="各种分屏"></p><br><p>分屏之后，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + 数字键</code>跳转到指定屏，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + 数字键</code>将当前屏移动到指定屏。例如，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + 1</code>会跳转到1屏，而<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + 2</code>会将当前屏移动到2屏。</p><br><h4>全屏（Full Screen）</h4><br><p>Sublime Text有两种全屏模式：普通全屏和无干扰全屏。</p><br><p>个人强烈建议在开启全屏前关闭菜单栏（Toggle Menu），否则全屏效果会大打折扣。</p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">F11</code>切换普通全屏：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I140c-28.jpg" alt="普通全屏"></p><br><p><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + F11</code>切换无干扰全屏：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I1L39-29.jpg" alt="无干扰全屏"></p><br><h3>风格（Styles）</h3><br><p>风格对于任何软件都很重要，对编辑器也是如此，尤其是GUI环境下的编辑器。作为一个程序员，我希望我的编辑器足够简洁且足够个性。</p><br><p>Notepad++默认界面</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I124P-30.png" alt="Notepad++"></p><br><p>Sublime Text默认界面</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I13162-31.png" alt="Sublime Text"></p><br><p>所以在用过Sublime Text之后，我立刻就卸掉了Notepad++。</p><br><p>Sublime Text自带的风格是我喜欢的深色风格（也可以调成浅色），默认主题是<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Monokai Bright</code>，这两者的搭配已经很不错了，不过我们还可以做得更好：接下来我将会展示如何通过设置偏好项和添加自定义风格/主题使得Sublime Text更加Stylish。</p><br><h4>一些设置（Miscellaneous Settings）</h4><br><p>下面是我个人使用的设置项。</p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255,255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51, 51, 51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 757px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">“font_face”: “YaHei Consolas Hybrid”,// 设置Sans-serif（无衬线）等宽字体，以便阅读<br>“font_size”: 12, <br>“caret_style”: “phase”, // 使光标闪动更加柔和 <br>“highlight_line”: true, // 高亮当前行<br>“highlight_modified_tabs”: true,// 高亮有修改的标签 </code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p>设置之后的效果如下：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14028-32.jpg" alt="设置效果"></p><br><h4>主题（Themes）</h4><br><p>Sublime Text有大量第三方主题：[<a href="https://sublime.wbond.net/browse/labels/theme" target="_blank" rel="external">https://sublime.wbond.net/browse/labels/theme</a>]，这里我给出几个个人感觉不错的主题：</p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Soda" target="_blank" rel="external">Soda Light</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I11937-33.png" alt="浅色版"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Soda" target="_blank" rel="external">Soda Dark</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I12H6-34.png" alt="深色版"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Nexus" target="_blank" rel="external">Nexus</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I112L-35.png" alt="Nexus"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Flatland" target="_blank" rel="external">Flatland</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I15015-36.png" alt="Flatland"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Spacegray" target="_blank" rel="external">Spacegray Light</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I125C-37.png" alt="浅色版"></p><br><h4 style="margin: 0px 0px 1em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, 'Helvetica Neue', Arial, sans-serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; text-rendering: optimizelegibility; color: rgb(34, 34, 34); background-color: rgb(248, 248, 248);"><a href="https://sublime.wbond.net/packages/Theme%20-%20Spacegray" target="_blank" rel="external">Spacegray Dark</a></h4><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I1MS-38.png" alt="深色版"></p><br><h4>配色（Color）</h4><br><p><a href="http://colorsublime.com/" target="_blank" rel="external">colorsublime</a>包含了大量Sublime Text配色方案，并支持在线预览，配色方案的安装教程在<a href="http://colorsublime.com/how-to-install-a-theme" target="_blank" rel="external">这里</a>，恕不赘述。</p><br><p>我个人使用的是<a href="https://sublime.wbond.net/packages/Theme%20-%20Nexus" target="_blank" rel="external">Nexus</a>主题和<a href="https://sublime.wbond.net/packages/Theme%20-%20Flatland" target="_blank" rel="external">Flatland Dark</a>配色，配置如下：</p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255,255,255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51,51,51) !important; background-position: 0% 0%;">1<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 757px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">“theme”: “Nexus.sublime-theme”, “color_scheme”: “Packages/Theme - Flatland/Flatland Dark.tmTheme”,</code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p>效果如下：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I12234-39.jpg" alt="Nexus+Flatland"></p><br><h3>编码（Coding）</h3><br><p>优秀的编辑器使编码变的更加容易，所以Sublime Text提供了一系列功能以提高开发效率。</p><br><h4>良好实践（Good Practices）</h4><br><p>良好的代码应该是规范的，所以Google为每一门主流语言都设置了其代码规范（Code Style Guideline）。我自己通过下面的设置使以规范化自己的代码。</p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><p></p><figure class="code" style="margin: 0px 0px 1.5em; padding: 0px; border: 0px; font-family: 'PT Serif', Georgia, Times, 'Times New Roman', serif; line-height: 27.59375px; font-size: 18px; vertical-align: baseline; -webkit-box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; box-shadow: rgba(0, 0, 0, 0.0588235) 0px 0px 10px; background-image: none; background-color: rgb(248, 248, 248); color: rgb(34, 34, 34);"><br><p><br></p><table style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; font-size: 18px; vertical-align: baseline; border-collapse: collapse; border-spacing: 0px;"><br>    <tbody style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>        <tr style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: inherit; vertical-align: baseline;"><br>            <td class="gutter" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle;"><br>            <pre class="line-numbers" style="margin-bottom: 0px; border-top-style: none; border-bottom-style: none; border-left-style: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; color: rgb(255, 255, 255); text-align: right; text-shadow: rgb(2, 16, 20) 0px -1px; padding: 0.8em !important; border-right-width: 1px !important; border-right-style: solid !important; border-right-color: rgb(0, 35, 44) !important; background-image: url(http://zh.lucida.me/images/noise.png?1388941295) !important; background-color: rgb(51,51,51) !important; background-position: 0% 0%;">1<br>2<br>3<br>4<br>5<br>6<br></pre><br>            </td><br>            <td class="code" style="margin: 0px; padding: 0px; border: 0px; font-family: inherit; font-style: inherit; font-variant: inherit; line-height: inherit; font-size: 18px; vertical-align: middle; width: 749px;"><br>            <pre style="margin-bottom: 0px; padding: 0px; border: none; font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; font-size: 13px; vertical-align: baseline; -webkit-box-shadow: none; box-shadow: none; background-image: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;color: rgb(220, 220, 222);"><code style="margin: 0px; padding: 0.8em; border: 0px; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.45em; vertical-align: baseline; overflow-y: hidden; display: block; overflow-x: auto; background-color: rgb(41, 61, 73); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace !important;">“tab_size”: 2,// 设置tab的大小为2 <br>“translate_tabs_to_spaces”: true, // 使用空格代替 tab <br>“rulers”: [80, 100],// 添加行宽标尺 <br>“draw_white_space”: “all”, // 显示空白字符  <br>“trim_trailing_white_space_on_save”: true,// 保存时自动去除行末空白 <br>“ensure_newline_at_eof_on_save”: true,// 保存时自动增加文件末尾换行 </code></pre><br>            </td><br>        </tr><br>    </tbody><br></table><br><p></p><br></figure><p></p><br><p>&nbsp;</p><br><p>&nbsp;</p><br><h4>代码段（Code Snippets）</h4><br><p>Sublime Text支持代码段（Code Snippet），输入代码段名称后<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Tab</code>即可生成代码段。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I144R-40.gif" alt="代码段效果"></p><br><p>你可以通过Package Control安装第三方代码段，也可以自己创建代码段，参考<a href="http://www.hongkiat.com/blog/sublime-code-snippets/" target="_blank" rel="external">这里</a>。</p><br><h4>格式化（Formatting）</h4><br><p>Sublime Text基本的手动格式化操作包括：<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + [</code>向左缩进，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + ]</code>向右缩进，此外<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + V</code>可以以当前缩进粘贴代码（非常实用）。</p><br><p>除了手动格式化，我们也可以通过安装插件实现自动缩进和智能对齐：</p><br><ul><br>    <li><a href="https://sublime.wbond.net/packages/HTMLBeautify" target="_blank" rel="external">HTMLBeautify</a>：格式化HTML。</li><br>    <li><a href="https://sublime.wbond.net/packages/AutoPEP8" target="_blank" rel="external">AutoPEP8</a>：格式化Python代码。</li><br>    <li><a href="https://sublime.wbond.net/packages/Alignment" target="_blank" rel="external">Alignment</a>：进行智能对齐。</li><br></ul><br><h4>自动完成（Auto Completion）</h4><br><p>Sublime Text 支持一定的自动完成，按<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Tab</code>自动补全。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I14403-41.jpg" alt="自动完成"></p><br><h4>括号（Brackets）</h4><br><p>编写代码时会碰到大量的括号，利用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + M</code>可以快速的在起始括号和结尾括号间切换，<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + M</code>则可以快速选择括号间的内容，对于缩进型语言（例如Python）则可以使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + J</code>。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I13118-42.gif" alt="括号演示"></p><br><p>此外，我使用<a href="https://sublime.wbond.net/packages/BracketHighlighter" target="_blank" rel="external">BracketHighlighter</a>插件以高亮显示配对括号以及当前光标所在区域，效果如下：</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I12647-43.gif" alt="插件演示"></p><br><h4>命令行（Command Line）</h4><br><p>尽管提供了Python控制台，但Sublime Text的控制台仅支持单行输入，十分不方便，所以我使用<a href="https://sublime.wbond.net/packages/SublimeREPL" target="_blank" rel="external">Sublime​REPL</a>以进行一些编码实验（Experiments）。</p><br><p><img src="http://img.kuqin.com/upimg/allimg/140929/230I16253-44.gif" alt="SublimeREPL演示"></p><br><h3>其它（Miscellaneous）</h3><br><p>尽管我试图在本文包含尽可能多的Sublime Text实用技能，但受限于篇幅和我的个人经验，本文仍不免有所遗漏，欢迎在评论里指出本文的错误及遗漏。</p><br><p>下面是一些可能有用但我很少用到的功能：</p><br><ul><br>    <li>宏（Macro）：Sublime Text支持<a href="http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/extensibility/macros.html" target="_blank" rel="external">录制宏</a>，但我在实际工作中并未发现宏有多大用处。</li><br>    <li>其它平台（Other Platforms）：本文只介绍了Windows平台上Sublime Text的使用，不过Linux和OS X上Sublime Text的使用方式和Windows差别不大，只是在快捷键上有所差异，请参考<a href="http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/keyboard_shortcuts_win.html" target="_blank" rel="external">Windows/Linux快捷键</a>和<a href="http://sublime-text-unofficial-documentation.readthedocs.org/en/latest/reference/keyboard_shortcuts_osx.html" target="_blank" rel="external">OS X快捷键</a>。</li><br>    <li>项目（Projects）：Sublime Text支持简单的<a href="/book/324854.html">项目管理</a>，但我一般只用到文件夹。</li><br>    <li>Vim模式（Vintage）：Sublime Text自带<a href="http://www.sublimetext.com/docs/3/vintage.html" target="_blank" rel="external">Vim模式</a>。</li><br>    <li>构建（Build）：通过配置，Sublime Text可以进行<a href="http://docs.sublimetext.info/en/latest/file_processing/build_systems.html" target="_blank" rel="external">源码构建</a>。</li><br>    <li>调试（Debug）：通过安装<a href="https://sublime.wbond.net/search/debug" target="_blank" rel="external">插件</a>，Sublime Text可以对代码进行调试。</li><br></ul><br><h3>快捷键列表（Shortcuts Cheatsheet）</h3><br><p>我把本文出现的Sublime Text按其类型整理在这里，以便查阅。</p><div style="float: left;margin-top:0px;margin-right:0px"><br><script type="text/javascript"><!--
google_ad_client = "ca-pub-9317413389774415";
/* 2012年底部广告336x280, */
google_ad_slot = "9618407928";
google_ad_width = 336;
google_ad_height = 280;
//--><br></script><br><script type="text/javascript" src="http://pagead2.googlesyndication.com/pagead/show_ads.js"><br></script><ins id="aswift_1_expand" style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px;background-color:transparent"><iframe width="336" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;"></iframe></ins></ins><br></div><br><h4>通用（General）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">↑↓←→</code>：上下左右移动光标，注意不是不是<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">KJHL</code>！</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt</code>：调出菜单</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + P</code>：调出命令板（Command Palette）</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + `</code>：调出控制台</li><br></ul><br><h4>编辑（Editing）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Enter</code>：在当前行下面新增一行然后跳至该行</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + Enter</code>：在当前行上面增加一行并跳至该行</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + ←/→</code>：进行逐词移动</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + ←/→</code>进行逐词选择</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + ↑/↓</code>移动当前显示区域</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + ↑/↓</code>移动当前行</li><br></ul><br><h4>选择（Selecting）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + D</code>：选择当前光标所在的词并高亮该词所有出现的位置，再次<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + D</code>选择该词出现的下一个位置，在多重选词的过程中，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + K</code>进行跳过，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + U</code>进行回退，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Esc</code>退出多重编辑</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + L</code>：将当前选中区域打散</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + J</code>：把当前选中区域合并为一行</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + M</code>：在起始括号和结尾括号间切换</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + M</code>：快速选择括号间的内容</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + J</code>：快速选择同缩进的内容</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + Space</code>：快速选择当前作用域（Scope）的内容</li><br></ul><br><h4>查找&amp;替换（Finding&amp;Replacing）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">F3</code>：跳至当前关键字下一个位置</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + F3</code>：跳到当前关键字上一个位置</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + F3</code>：选中当前关键字出现的所有位置</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + F/H</code>：进行标准查找/替换，之后：<br>    <ul><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + C</code>：切换大小写敏感（Case-sensitive）模式</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + W</code>：切换整字匹配（Whole matching）模式</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + R</code>：切换正则匹配（Regex matching）模式</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + H</code>：替换当前关键字</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Alt + Enter</code>：替换所有关键字匹配</li><br>    </ul><br>    </li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + F</code>：多文件搜索&amp;替换</li><br></ul><br><h4>跳转（Jumping）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + P</code>：跳转到指定文件，输入文件名后可以：<br>    <ul><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">@</code>符号跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">@symbol</code>跳转到<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">symbol</code>符号所在的位置</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">#</code>关键字跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">#keyword</code>跳转到<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">keyword</code>所在的位置</li><br>        <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">:</code>行号跳转：输入<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">:12</code>跳转到文件的第12行。</li><br>    </ul><br>    </li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + R</code>：跳转到指定符号</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + G</code>：跳转到指定行号</li><br></ul><br><h4>窗口（Window）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + N</code>：创建一个新窗口</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + N</code>：在当前窗口创建一个新标签</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + W</code>：关闭当前标签，当窗口内没有标签时会关闭该窗口</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + T</code>：恢复刚刚关闭的标签</li><br></ul><br><h4>屏幕（Screen）</h4><br><ul><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">F11</code>：切换普通全屏</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Shift + F11</code>：切换无干扰全屏</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 2</code>：进行左右分屏</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 8</code>：进行上下分屏</li><br>    <li><code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Alt + Shift + 5</code>：进行上下左右分屏</li><br>    <li>分屏之后，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + 数字键</code>跳转到指定屏，使用<code style="margin: -1px 0px; padding: 0px 0.3em; border: 1px solid rgb(221, 221, 221); font-family: Menlo, Monaco, 'Andale Mono', 'lucida console', 'Courier New', monospace; font-style: inherit; font-variant: inherit; font-weight: inherit; line-height: 1.5em; font-size: 0.8em; vertical-align: baseline; display: inline-block; background-color: rgb(255, 255, 255); color: rgb(85, 85, 85); border-top-left-radius: 0.4em; border-top-right-radius: 0.4em; border-bottom-right-radius: 0.4em; border-bottom-left-radius: 0.4em; background-position: initial initial; background-repeat: initial initial;">Ctrl + Shift + 数字键</code>将当前屏移动到指定屏</li><br></ul><br><h3>延伸阅读（Further Reading）</h3><br><h4>书籍（Books）</h4><br><ul><br>    <li><a href="http://www.amazon.com/Mastering-Sublime-Community-Experience-Distilled/dp/1849698422/" target="_blank" rel="external">Mastering Sublime Text</a>：我读过的唯一一本关于Sublime Text的书籍，书中介绍的插件很实用，但对编辑技巧介绍不全。</li><br>    <li><a href="http://www.amazon.com/Instant-Sublime-Text-Starter-Haughee/dp/1849693927/" target="_blank" rel="external">Instant Sublime Text Starter</a>：另外一本关于Sublime Text的书，我没有读过。</li><br></ul><br><h4>链接（Links）</h4><br><ul><br>    <li>官方文档：<a href="http://www.sublimetext.com/docs/3/" target="_blank" rel="external">http://www.sublimetext.com/docs/3/</a></li><br>    <li>官方论坛：<a href="http://www.sublimetext.com/forum/" target="_blank" rel="external">http://www.sublimetext.com/forum/</a></li><br>    <li>Stack Overflow的Sublime Text频道：<br>    <ul><br>        <li><a href="http://stackoverflow.com/questions/tagged/sublimetext" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/sublimetext</a></li><br>        <li><a href="http://stackoverflow.com/questions/tagged/sublimetext2" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/sublimetext2</a></li><br>        <li><a href="http://stackoverflow.com/questions/tagged/sublimetext3" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/sublimetext3</a></li><br>    </ul><br>    </li><br>    <li>非官方文档：<a href="http://sublime-text-unofficial-documentation.readthedocs.org/" target="_blank" rel="external">http://sublime-text-unofficial-documentation.readthedocs.org/</a>甚至比官方文档还要全面！</li><br>    <li>Package Control：<a href="https://sublime.wbond.net/" target="_blank" rel="external">https://sublime.wbond.net/</a>大量的Sublime Text插件和主题。</li><br></ul><br><h4>视频（Videos）</h4><br><ul><br>    <li>Getting Started with SublimeText：<a href="https://www.youtube.com/watch?v=04gKiTiRlq8" target="_blank" rel="external">https://www.youtube.com/watch?v=04gKiTiRlq8</a></li><br>    <li>Sublime Text Pefect Workflow：<a href="https://www.youtube.com/watch?v=bpEp0ePIOEM&amp;list=PLuwqxbvf3olpLsnFvo06gbrkcEB5o7K0g" target="_blank" rel="external">https://www.youtube.com/watch?v=bpEp0ePIOEM&amp;list=PLuwqxbvf3olpLsnFvo06gbrkcEB5o7K0g</a></li><br></ul><br><h3>关原于作者（About Me）</h3><br><p><a href="http://zh.lucida.me/" target="_blank" rel="external">Lucida</a></p><br><ul><br>    <li>微博：<a href="http://www.weibo.com/pegong/" target="_blank" rel="external">@peng_gong</a></li><br>    <li>豆瓣：<a href="http://www.douban.com/people/figure9/" target="_blank" rel="external">@figure9</a></li><br></ul><br>                    </li></ol></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[shell 常用语法段]]></title>
      <url>http://percychen.com/2014/10/09/2014-10-09-someshellcommand/</url>
      <content type="html"><![CDATA[<h2 id="for循环语句"><a href="#for循环语句" class="headerlink" title="for循环语句"></a>for循环语句</h2><p>例子：</p>
<pre><code>for m in *.m4a;do
    echo &quot;&quot; &gt;&gt;README.md
    echo &quot;$m&quot; &gt;&gt; README.md
done
</code></pre><p>说明：　在当前文件夹中找出以m4a结尾的文件，将文件名输出到README.md中去</p>
<h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>例子</p>
<pre><code>if [ ! -d &quot;$project/build&quot; ]; then
    echo &quot;skip rm build....&quot;

fi
</code></pre><p>说明：　在如果不存在build这个文件夹，那么就输出skip rm build….语句</p>
<p>例子</p>
<pre><code>if test `expr $num % 2` == 0;then
    echo even;
else echo odd;
fi
</code></pre><p>说明：奇数偶数判断语句</p>
<h2 id="while-语句"><a href="#while-语句" class="headerlink" title="while 语句"></a>while 语句</h2><p>例子</p>
<pre><code>while [ $? = 1 ]; do
   sleep 3
done
</code></pre><p>说明：　如果上一步执行出粗，那么休眠３秒</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[awk命令详解]]></title>
      <url>http://percychen.com/2014/10/08/2014-10-08-linuxawkcommand/</url>
      <content type="html"><![CDATA[<h2 id="AWK命令介绍"><a href="#AWK命令介绍" class="headerlink" title="AWK命令介绍"></a>AWK命令介绍</h2><blockquote>
<p>awk语言的最基本功能是在文件或字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作，完整的awk脚本通常用来格式化文本文件中的信息</p>
</blockquote>
<p>###awk的简单使用</p>
<ul>
<li><p>第一种命令行方式，如:</p>
<pre><code>awk [-Field-separator] &apos;commands&apos; input-file(s)
</code></pre></li>
</ul>
<p>例如:</p>
<pre><code>awk -F ：&apos;{print $1,$4}&apos; test.xml
</code></pre><p>解释：使用‘：’来分割这一行，把这一行的第一列和第四个域打印出来 。-F是-Field-separator-F的缩写，缺省为空格。</p>
<ul>
<li><p>第二种，将所有awk命令插入一个文件，并使awk程序可执行，然后用awk命令解释器作为脚本的首行，以便通过键入脚本名称来调用它</p>
</li>
<li><p>第三种，将所有awk命令插入一个单独文件，然后调用，如:</p>
<pre><code>awk -f awk-script-file input-file
</code></pre></li>
</ul>
<p>解释： -f选项指明在文件awk-script-file的awk脚本，input-file是使用awk进行浏览的文件名</p>
<p>###awk变量使用</p>
<p>awk执行时，其浏览标记为$1，$2…$n，这种方法称为域标记。使用$1，$3表示参照第1和第3域，注意这里使用逗号分隔域，使用$0表示使用所有域。例如:</p>
<pre><code>awk &apos;{print $0}&apos; temp.txt &gt; sav.txt
</code></pre><h2 id="表示打印所有域并把结果重定向到sav-txt中"><a href="#表示打印所有域并把结果重定向到sav-txt中" class="headerlink" title="表示打印所有域并把结果重定向到sav.txt中"></a>表示打印所有域并把结果重定向到sav.txt中</h2><pre><code>awk &apos;{print $0}&apos; temp.txt|tee sav.txt
</code></pre><h2 id="和上例相似，不同的是将在屏幕上显示出来"><a href="#和上例相似，不同的是将在屏幕上显示出来" class="headerlink" title="和上例相似，不同的是将在屏幕上显示出来"></a>和上例相似，不同的是将在屏幕上显示出来</h2><pre><code>awk &apos;{print $1,$4}&apos; temp.txt
</code></pre><p>只打印出第1和第4域</p>
<pre><code>awk &apos;BEGIN {print &quot;NAME  GRADE\n----&quot;} {print $1&quot;\t&quot;$4}&apos; temp.txt
</code></pre><p>表示打信息头，即输入的内容的第一行前加上”NAME  GRADE\n————-“，同时内容以tab分开</p>
<pre><code>awk &apos;BEGIN {print &quot;being&quot;} {print $1} END {print &quot;end&quot;}&apos; temp
</code></pre><p>同时打印信息头和信息尾</p>
<p>###awk的正则</p>
<p>&lt;、&lt;=、==、!=、&gt;=、~匹配正则表达式、!~不匹配正则表达式</p>
<p>匹配:</p>
<pre><code>awk &apos;{if ($4~/ASIMA/) print $0}&apos; temp   表示如果第四个域包含ASIMA，就打印整条
</code></pre><p>精确匹配:</p>
<pre><code>awk &apos;$3==&quot;48&quot; {print $0}&apos; temp    只打印第3域等于&quot;48&quot;的记录
</code></pre><p>不匹配:</p>
<pre><code>awk &apos;$0 !~ /ASIMA/&apos; temp      打印整条不包含ASIMA的记录
</code></pre><p>不等于:</p>
<pre><code>awk &apos;$1 != &quot;asima&quot;&apos; temp
</code></pre><p>小于:</p>
<pre><code>awk &apos;{if ($1&lt;$2) print $1 &quot;is smaller&quot;}&apos; temp
</code></pre><p>设置大小写:</p>
<pre><code>awk &apos;/[Gg]reen/&apos; temp      打印整条包含Green，或者green的记录
</code></pre><p>任意字符:</p>
<pre><code>awk &apos;$1 ~/^...a/&apos; temp    打印第1域中第四个字符是a的记录，符号’^’代表行首，符合’.’代表任意字符
</code></pre><p>或关系匹配:</p>
<pre><code>awk &apos;$0~/(abc)|(efg)/&apos; temp   使用|时，语句需要括起来
</code></pre><p>AND与关系:</p>
<pre><code>awk &apos;{if ( $1==&quot;a&quot; &amp;&amp; $2==&quot;b&quot; ) print $0}&apos; temp
</code></pre><p>OR或关系:</p>
<pre><code>awk &apos;{if ($1==&quot;a&quot; || $1==&quot;b&quot;) print $0}&apos; temp
</code></pre><p>###awk内置变量:</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td>ARGC</td>
<td>命令行参数个数</td>
</tr>
<tr>
<td>NF</td>
<td>浏览记录的域个数</td>
</tr>
<tr>
<td>AGRV</td>
<td>命令行参数排列</td>
</tr>
<tr>
<td>NR</td>
<td>已读的记录数</td>
</tr>
<tr>
<td>ENVIRON</td>
<td>支持队列中系统环境变量的使用</td>
</tr>
<tr>
<td>OFS</td>
<td>输出域分隔符</td>
</tr>
<tr>
<td>FILENAME</td>
<td>awk浏览的文件名</td>
</tr>
<tr>
<td>ORS</td>
<td>输出记录分隔符</td>
</tr>
<tr>
<td>FNR</td>
<td>浏览文件的记录数</td>
</tr>
<tr>
<td>RS</td>
<td>控制记录分隔符</td>
</tr>
<tr>
<td>FS</td>
<td>设置输入域分隔符，同- F选项</td>
</tr>
<tr>
<td>NF</td>
<td>浏览记录的域个数</td>
</tr>
</tbody>
</table>
<p>例:</p>
<pre><code>awk &apos;END {print NR}&apos; temp    在最后打印已读记录条数

awk &apos;{print NF，NR，$0} END {print FILENAME}&apos; temp
</code></pre><p>至少存在一条记录且包含Brown</p>
<pre><code>awk &apos;{if (NR&gt;0 &amp;&amp; $4~/Brown/) print $0}&apos; temp
</code></pre><p>NF的另一用法:</p>
<pre><code>echo $PWD | awk -F/ &apos;{print $NF}&apos;   显示当前目录名
</code></pre><p>###awk操作符:</p>
<p>在awk中使用操作符，基本表达式可以划分成数字型、字符串型、变量型、域及数组元素</p>
<p>设置输入域到变量名:</p>
<pre><code>awk &apos;{name=$1;six=$3; if (six==&quot;man&quot;) print name &quot; is &quot; six}&apos; temp
</code></pre><p>域值比较操作:</p>
<pre><code>awk &apos;BEGIN {BASE=&quot;27&quot;} {if ($4&lt;BASE) print $0}&apos; temp
</code></pre><p>修改数值域取值:(原输入文件不会被改变)</p>
<pre><code>awk &apos;{if ($1==&quot;asima&quot;) $6=$6-1;print $1，$6，$7}&apos; temp
</code></pre><p>修改文本域:</p>
<pre><code>awk &apos;{if ($1==&quot;asima) ($1==&quot;desc&quot;);print $1}&apos; temp
</code></pre><p>只显示修改记录:(只显示所需要的，区别上一条命令，注意{})</p>
<pre><code>awk &apos;{if ($1==&quot;asima) {$1==&quot;desc&quot;;print$1}}&apos; temp
</code></pre><p>创建新的输出域:</p>
<pre><code>awk &apos;{$4=$3-$2; print $4}&apos; temp
</code></pre><p>统计列值:</p>
<pre><code>awk &apos;(tot+=$3);END {print tot}&apos; temp           会显示每列的内容

awk &apos;{(tot+=$3)};END {print tot}&apos; temp         只显示最后的结果
</code></pre><p>文件长度相加:</p>
<pre><code>ls -l|awk &apos;/^[^d]/ {print $9&quot;\t&quot;$5} {tot+=$5} END{print &quot;totKB:&quot; tot}&apos;
</code></pre><p>只列出文件名:</p>
<pre><code>ls -l|awk &apos;{print $9}&apos;     常规情况文件名是第9域
</code></pre><p>awk内置字符串函数:</p>
<ul>
<li><p>gsub(r，s)     在整个$0中用s替代r</p>
<pre><code>awk &apos;gsub(/name/，&quot;xingming&quot;) {print $0}&apos; temp
gsub(r，s，t)         在整个t中用s替代r
</code></pre></li>
<li><p>index(s，t)          返回s中字符串t的第一位置</p>
<pre><code>awk &apos;BEGIN {print index(&quot;Sunny&quot;，&quot;ny&quot;)}&apos; temp     返回4
</code></pre></li>
<li><p>length(s)           返回s的长度</p>
</li>
<li><p>match(s，r)          测试s是否包含匹配r的字符串</p>
<pre><code>awk &apos;$1==&quot;J.Lulu&quot; {print match($1，&quot;u&quot;)}&apos; temp    返回4
</code></pre></li>
<li><p>split(s，a，fs)       在fs上将s分成序列a</p>
<pre><code>awk &apos;BEGIN {print split(&quot;12#345#6789&quot;，myarray，&quot;#&quot;)&quot;&apos;
返回3，同时myarray[1]=&quot;12&quot;， myarray[2]=&quot;345&quot;， myarray[3]=&quot;6789&quot;
</code></pre></li>
<li><p>sprint(fmt，exp)     返回经fmt格式化后的exp</p>
</li>
<li><p>sub(r，s)   从$0中最左边最长的子串中用s代替r(只更换第一遇到的匹配字符串)</p>
</li>
<li><p>substr(s，p)         返回字符串s中从p开始的后缀部分</p>
</li>
<li><p>substr(s，p，n)       返回字符串s中从p开始长度为n的后缀部分</p>
</li>
</ul>
<p>###printf函数的使用:</p>
<p>字符转换:</p>
<pre><code>echo &quot;65&quot; |awk &apos;{printf &quot;%c\n&quot;，$0}&apos;    输出A
awk &apos;BEGIN {printf &quot;%f\n&quot;，999}&apos;        输出999.000000
</code></pre><p>格式化输出:</p>
<pre><code>awk &apos;{printf &quot;%-15s %s\n&quot;，$1，$3}&apos; temp 将第一个域全部左对齐显示
</code></pre><p>###其他awk用法:</p>
<p>向一行awk命令传值:</p>
<pre><code>awk &apos;{if ($5&lt;AGE) print $0}&apos; AGE=10 temp
</code></pre><p>使用环境变量</p>
<pre><code>who | awk &apos;{if ($1==user) print $1 &quot; are in &quot; $2 &apos; user=$LOGNAME
</code></pre><p>###awk脚本命令:</p>
<blockquote>
<p>开头使用 !/bin/awk -f  ，如果没有这句话自含脚本将不能执行，例子:</p>
</blockquote>
<pre><code>!/bin/awk -f
# all comment lines must start with a hash &apos;#&apos;
# name: student_tot.awk
# to call: student_tot.awk grade.txt
# prints total and average of club student points
# print a header first
BEGIN
{
    print &quot;Student    Date   Member No.  Grade  Age  Points  Max&quot;
    print &quot;Name  Joined Gained  Point Available&quot;
    print&quot;=========================================================&quot;
}
# let&apos;s add the scores of points gained
(tot+=$6);
# finished processing now let&apos;s print the total and average point
END
{
    print &quot;Club student total points :&quot; tot
    print &quot;Average Club Student points :&quot; tot/N
}
</code></pre><p>###awk数组:</p>
<p>awk的循环基本结构</p>
<pre><code>For (element in array) print array[element]

awk &apos;BEGIN {record=&quot;123#456#789&quot;;split(record，myarray，&quot;#&quot;)}

END { for (i in myarray) {print myarray[i]} }
</code></pre><p>###awk中自定义语句</p>
<ul>
<li><p>条件判断语句(if)</p>
<pre><code>if(表达式) #if ( Variable in Array )
语句1
else
语句2
</code></pre></li>
</ul>
<p>格式中”语句1”可以是多个语句，如果你为了方便Unix awk判断也方便你自已阅读，你最好将多个语句用{}括起来。Unix awk分枝结构允许嵌套，其格式为：</p>
<pre><code>if(表达式)
{语句1}
else if(表达式)
{语句2}
else
{语句3}
</code></pre><p>例：</p>
<pre><code>yun@tencent linux ~ awk &apos;BEGIN{
test=100;
if(test&gt;90)
{
    print &quot;very good&quot;;
}
else if(test&gt;60)
{
    print &quot;good&quot;;
}
else
{
    print &quot;no pass&quot;;
}
}&apos;
结果： very good
</code></pre><p>每条命令语句后面可以用“；”号结尾。</p>
<ul>
<li><p>循环语句(while,for,do)</p>
<pre><code>while语句
格式：
while(表达式)
{语句}
</code></pre></li>
</ul>
<p>例子：</p>
<pre><code>yun@tencent linux ~ awk &apos;BEGIN{
test=100;
total=0;
while(i&lt;=test)
{
    total+=i;
    i++;
}
print total;
}&apos;
结果： 5050
</code></pre><ul>
<li>for 循环</li>
</ul>
<p>for循环有两种格式：</p>
<p><strong>格式1：</strong></p>
<pre><code>for(变量 in 数组)
{语句}
</code></pre><p>例子：</p>
<pre><code>yun@tencent linux ~ awk &apos;BEGIN{
for(k in ENVIRON)
{
    print k&quot;=&quot;ENVIRON[k];
}
}&apos;
</code></pre><p>结果：</p>
<pre><code>AWKPATH=.:/usr/share/awk
OLDPWD=/home/web97
SSH_ASKPASS=/usr/libexec/openssh/gnome-ssh-askpass
SELINUX_LEVEL_REQUESTED=
SELINUX_ROLE_REQUESTED=
LANG=zh_CN.GB2312
</code></pre><p>说明：ENVIRON 是awk常量，是子典型数组。</p>
<p><strong>格式2：</strong></p>
<pre><code>for(变量;条件;表达式)
{语句}
</code></pre><p>例子：</p>
<pre><code>yun@tencent linux ~  awk &apos;BEGIN{
total=0;
for(i=0;i&lt;=100;i++)
{
    total+=i;
}
print total;
}&apos;
结果： 5050
</code></pre><ul>
<li>do循环</li>
</ul>
<p>格式：</p>
<pre><code>do
{语句}while(条件)
</code></pre><p>例子：</p>
<pre><code>yun@tencent linux ~  awk &apos;BEGIN{
total=0;
i=0;
do
{
    total+=i;
    i++;
}while(i&lt;=100)
print total;
}&apos;
结果： 5050
</code></pre><p>以上为awk流程控制语句，从语法上面大家可以看到，与c语言是一样的。有了这些语句，其实很多shell程序都可以交给awk，而且性能是非常快的。</p>
<table>
<thead>
<tr>
<th>关键字</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>break</td>
<td>当 break 语句用于 while 或 for 语句时，导致退出程序循环。</td>
</tr>
<tr>
<td>continue</td>
<td>当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。</td>
</tr>
<tr>
<td>next</td>
<td>能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。</td>
</tr>
<tr>
<td>exit</td>
<td>语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。</td>
</tr>
</tbody>
</table>
<h2 id="其他实例："><a href="#其他实例：" class="headerlink" title="其他实例："></a>其他实例：</h2><ul>
<li><p>指定多个分隔符：</p>
<pre><code>awk -F &quot;[,= ]&quot; &apos;{print $1}&apos;
</code></pre></li>
</ul>
<p></p><p>默认情况下，awk通过空格分隔输入。如果您想选择输入的第一个字段，你只需要告诉awk输出$1：</p><p></p>
<p><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $1}’</span></li></ol></pre></p>
<blockquote><br><p>one</p><br></blockquote><br><p>（是的，大括号语法是有点古怪，但我保证这是我们这节课一直会遇到。）</p><br><p>你能猜出如何选择第二，第三或第四个字段么？是的，分别用$2，$ 3，$ 4。</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $3}’</span></li></ol></pre><br><blockquote><br><p>three</p><br></blockquote><br><p>通常在文本改写时，你需要创建一个特定的数据格式，并且它覆盖不止一个单词。好消息是，awk中可以很容易地打印多个字段，甚至包含静态字符串：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln"> $ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $3,$1}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>three one</p><br></blockquote><br><hr><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print “foo:”,$3,”| bar:”,$1}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>foo: three | bar: one</p><br></blockquote><br><p>好吧，如果你的输入不是由空格分隔怎么办？只需用awk中的’-F’标志指定你的分隔符：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one mississippi,two mississippi,three mississippi,four mississippi’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="pun">-</span><span class="pln">F </span><span class="pun">,</span><span class="pln"> </span><span class="str">‘{print $4}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>four mississippi</p><br></blockquote><br><p>偶尔间，你会发现自己正在处理字段数量不同的数据，但你只知道你想要的<em>最后</em>字段。 awk中内置的$NF变量代表<em>字段的数量</em>，这样你就可以用它来抓取最后一个元素：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $NF}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>four</p><br></blockquote><br><p>你也可以用$NF做简单的数学，假如你需要倒数第二个字段：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $(NF-1)}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>three</p><br></blockquote><br><p>甚至是中间的字段：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="str">‘one two three four’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $((NF/2)+1)}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>three</p><br></blockquote><br><p>而且这一切都非常有用，同样你可以摆脱强制使用sed，cut，和grep来得到这些结果（尽管要做更多的操作）。</p><br><p>因此，我将最后为你介绍awk的一个特性，维持跨行状态。</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln"> $ echo </span><span class="pun">-</span><span class="pln">e </span><span class="str">‘one 1\ntwo 2’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{print $2}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>1</p><br><p>2</p><br></blockquote><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ echo </span><span class="pun">-</span><span class="pln">e </span><span class="str">‘one 1\ntwo 2’</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> awk </span><span class="str">‘{sum+=$2} END {print sum}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>3</p><br></blockquote><br><p>（END代表的是我们在执行完每行的处理<strong>之后</strong>只处理下面的代码块）</p><br><p>这里我使用的例子是统计web服务器请求日志的字节大小。想象一下我们有如下这样的日志：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ cat requests</span><span class="pun">.</span><span class="pln">log </span></li></ol></pre><br><blockquote><br><p>Jul 23 18:57:12 httpd[31950]: “GET /foo/bar HTTP/1.1” 200 344</p><br><p>Jul 23 18:57:13 httpd[31950]: “GET / HTTP/1.1” 200 9300</p><br><p>Jul 23 19:01:27 httpd[31950]: “GET / HTTP/1.1” 200 9300</p><br><p>Jul 23 19:01:55 httpd[31950]: “GET /foo/baz HTTP/1.1” 200 6401</p><br><p>Jul 23 19:02:31 httpd[31950]: “GET /foo/baz?page=2 HTTP/1.1” 200 6312</p><br></blockquote><br><p>我们知道最后一个字段是响应的字节大小。我们已经学习了如何使用$NF来抽取他们：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ </span><span class="pun">&lt;</span><span class="pln"> requests</span><span class="pun">.</span><span class="pln">log awk </span><span class="str">‘{print $NF}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>344</p><br><p>9300</p><br><p>9300</p><br><p>6401</p><br><p>6312</p><br></blockquote><br><p>接着我们可以将它们累加到一个变量中来收集我们的web服务其在日志中这段时间内的响应客户端的字节数量</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">$ </span><span class="pun">&lt;</span><span class="pln"> requests</span><span class="pun">.</span><span class="pln">log awk </span><span class="str">‘{totalBytes+=$NF} END {print totalBytes}’</span><span class="pln"> </span></li></ol></pre><br><blockquote><br><p>31657</p><br></blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux中的15个‘echo’ 命令实例]]></title>
      <url>http://percychen.com/2014/10/08/2014-10-08-echodemo/</url>
      <content type="html"><![CDATA[<blockquote>
<p>echo是一种最常用的与广泛使用的内置于Linux的bash和C shell的命令，通常用在脚本语言和批处理文件中来在标准输出或者文件中显示一行文本或者字符串。</p>
</blockquote>
<p><img src="http://img.linux.net.cn/data/attachment/album/201410/03/210844zi1h0ni0ij10tkdi.gif" alt="imags"></p>
<p>echo -e 处理特殊字符</p>
<p>若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出：</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>注释</th>
</tr>
</thead>
<tbody>
<tr>
<td>\a</td>
<td>发出警告声；</td>
</tr>
<tr>
<td>\b</td>
<td>删除前一个字符；</td>
</tr>
<tr>
<td>\c</td>
<td>最后不加上换行符号；</td>
</tr>
<tr>
<td>\f</td>
<td>换行但光标仍旧停留在原来的位置；</td>
</tr>
<tr>
<td>\n</td>
<td>换行且光标移至行首；</td>
</tr>
<tr>
<td>\r</td>
<td>光标移至行首，但不换行；</td>
</tr>
<tr>
<td>\t</td>
<td>插入tab；</td>
</tr>
<tr>
<td>\v</td>
<td>与\f相同；</td>
</tr>
<tr>
<td>\\</td>
<td>插入\字符；</td>
</tr>
<tr>
<td>\nnn</td>
<td>插入nnn（八进制）所代表的ASCII字符；</td>
</tr>
<tr>
<td>-e</td>
<td>选项，允许在脚本中添加 \t 和 \n 分隔符</td>
</tr>
<tr>
<td>-en</td>
<td>等待用户输入，光标一闪一闪</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[黑蚂蚁——白连春]]></title>
      <url>http://percychen.com/2014/10/08/2014-10-08-blackantpoem/</url>
      <content type="html"><![CDATA[<center><br><div class="bct fc05 fc11 nbw-blog ztag"><p style="TEXT-INDENT: 2em">只要时间够用</p><br><p style="TEXT-INDENT: 2em">你不嫌我的心</p><br><p style="TEXT-INDENT: 2em">是黑的</p><br><p style="TEXT-INDENT: 2em">我就有一个爱你的</p><br><p style="TEXT-INDENT: 2em">理由</p><br><p style="TEXT-INDENT: 2em">像花朵举起春天</p><br><p style="TEXT-INDENT: 2em">像死亡举起生命</p><br><p style="TEXT-INDENT: 2em">给你我的一切</p><br><p style="TEXT-INDENT: 2em">虽然我知道我不能</p><br><p style="TEXT-INDENT: 2em">成为你的爱人</p><br><p style="TEXT-INDENT: 2em">但是我有一颗</p><br><p style="TEXT-INDENT: 2em">黑暗的心</p><br><p style="TEXT-INDENT: 2em">你要我牺牲什么</p><br><p style="TEXT-INDENT: 2em">怎么牺牲</p><br><p style="TEXT-INDENT: 2em">我都愿意</p><br><p style="TEXT-INDENT: 2em">我有使不完的力</p><br><p style="TEXT-INDENT: 2em">而且独自流浪</p><br><p style="TEXT-INDENT: 2em">重要的是</p><br><p style="TEXT-INDENT: 2em">经历了一万个不爱</p><br><p style="TEXT-INDENT: 2em">我学会了一个爱</p><br><p style="TEXT-INDENT: 2em">我就这样爱着</p><br><p style="TEXT-INDENT: 2em">穿梭在大地</p><br><p style="TEXT-INDENT: 2em">只要时间够用</p><br><p style="TEXT-INDENT: 2em">我就能抓住泥土里的</p><br><p style="TEXT-INDENT: 2em">草根</p><br><p style="TEXT-INDENT: 2em">把我</p><br><p style="TEXT-INDENT: 2em">向你举起</p><br><p style="TEXT-INDENT: 2em">&nbsp;</p><br><p style="TEXT-INDENT: 2em">&nbsp;</p><br><p style="TEXT-INDENT: 2em">在和笋子一起吃饭的时候，突然想起了这首白连春的诗，多年前我能清楚的背下来，一遍又一遍的反复念着，走在冬天的操场上，有时候下着雨，有时候下着雪。真奇怪，那个时候，我感觉自己很接近神呢。</p><br></div></center>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[10个 Ubuntu 用户一定要知道的博客]]></title>
      <url>http://percychen.com/2014/09/28/2014-09-28-tenubuntublogs/</url>
      <content type="html"><![CDATA[<td id="article_content"><p><a href="https://camo.githubusercontent.com/402f871af354595b15fcda548d67826810926a19/687474703a2f2f697473666f73732e697473666f73732e6e6574646e612d63646e2e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031342f30392f426573745f5562756e74755f426c6f67732e6a7067" target="_blank"><img src="https://camo.githubusercontent.com/402f871af354595b15fcda548d67826810926a19/687474703a2f2f697473666f73732e697473666f73732e6e6574646e612d63646e2e636f6d2f77702d636f6e74656e742f75706c6f6164732f323031342f30392f426573745f5562756e74755f426c6f67732e6a7067" alt="" data-canonical-src="http://img.linux.net.cn/data/attachment/album/201409/27/092648ie0hlflepel1cggx.jpg"></a></p><br><p><strong>想要了解更多关于 ubuntu 的资讯，我们应该追哪些网站呢？</strong></p><br><p>这是初学者经常会问的一个问题，在这里，我会告诉你们10个我最喜欢的博客，这些博客可以帮助我们解决问题，能让我们及时了解所有 Ubuntu 版本的更新消息。不，我谈论的不是通常的 Linux 和 shell 脚本一类的东东。我是在说一个流畅的 Linux 桌面系统和一个普通的用户所要的关于 Ubuntu 的经验。</p><br><p>这些网站帮助你解决你正遇到的问题，提醒你关注各种应用和提供给你来自 Ubuntu 世界的最新消息。这个网站可以让你对 Ubuntu 更了解，所以，下面列出的是10个我最喜欢的博客，它们包括了 Ubuntu 的方方面面。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#10%E4%B8%AAubutun%E7%94%A8%E6%88%B7%E4%B8%80%E5%AE%9A%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E5%8D%9A%E5%AE%A2" name="user-content-10%E4%B8%AAubutun%E7%94%A8%E6%88%B7%E4%B8%80%E5%AE%9A%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84%E5%8D%9A%E5%AE%A2" target="_blank" rel="external"></a>10个Ubutun用户一定要知道的博客</h3><br><p>从我开始在 itsfoss 网站上写作开始，我特意把它排除在外，没有列入名单。我也并没有把<a href="http://planet.ubuntu.com/" target="_blank" rel="external">Planet Ubuntu</a>列入名单，因为它不适合初学者。废话不多说，让我们一起来看下<strong>最好的乌邦图（ubuntu）博客</strong>（排名不分先后）：</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#omg-ubuntu" name="user-content-omg-ubuntu" target="_blank" rel="external"></a><a href="http://www.omgubuntu.co.uk/" target="_blank" rel="external">OMG! Ubuntu!</a></h3><br><p>这是一个只针对 ubuntu 爱好者的网站。无论多小，只要是和乌邦图有关系的，OMG!Ubuntu 都会收入站内！博客主要包括新闻和应用。你也可以再这里找到一些关于 Ubuntu 的教程，但不是很多。</p><br><p>这个博客会让你知道 Ubuntu 世界发生的各种事情。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#web-upd8" name="user-content-web-upd8" target="_blank" rel="external"></a><a href="http://www.webupd8.org/" target="_blank" rel="external">Web Upd8</a></h3><br><p>Web Upd8 是我最喜欢的博客。除了涵盖新闻，它有很多容易理解的教程。Web Upd8 还维护了几个PPAs。博主<a href="https://plus.google.com/+AlinAndrei" target="_blank" rel="external">Andrei</a>有时会在评论里回答你的问题，这对你来说也会是很有帮助的。</p><br><p>这是一个你可以了解新闻资讯，学习教程的网站。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#noobs-lab" name="user-content-noobs-lab" target="_blank" rel="external"></a><a href="http://www.noobslab.com/" target="_blank" rel="external">Noobs Lab</a></h3><br><p>和Web Upd8一样，Noobs Lab上也有很多教程，新闻，并且它可能是PPA里最大的主题和图标集。</p><br><p>如果你是个新手，去Noobs Lab看看吧。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#linux-scoop" name="user-content-linux-scoop" target="_blank" rel="external"></a><a href="http://linuxscoop.com/" target="_blank" rel="external">Linux Scoop</a></h3><br><p>大多数的博客都是“文字博客”。你通过看说明和截图来学习教程。而 Linux Scoop 上有很多录像来帮助初学者来学习，完全是一个视频博客。</p><br><p>比起阅读来，如果你更喜欢视频，Linux Scoop应该是最适合你的。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#ubuntu-geek" name="user-content-ubuntu-geek" target="_blank" rel="external"></a><a href="http://www.ubuntugeek.com/" target="_blank" rel="external">Ubuntu Geek</a></h3><br><p>这是一个相对比较老的博客。覆盖面很广，并且有很多快速安装的教程和说明。虽然，有时我发现其中的一些教程文章缺乏深度，当然这也许只是我个人的观点。</p><br><p>想要快速小贴士，去Ubuntu Geek。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#tech-drive-in" name="user-content-tech-drive-in" target="_blank" rel="external"></a><a href="http://www.techdrivein.com/" target="_blank" rel="external">Tech Drive-in</a></h3><br><p>这个网站的更新频率好像没有以前那么快了，可能是 Manuel 在忙于他的工作，但是仍然给我们提供了很多的东西。新闻，教程，应用评论是这个博客的亮点。</p><br><p>博客经常被收入到<a href="https://lists.ubuntu.com/mailman/listinfo/ubuntu-news" target="_blank" rel="external">Ubuntu的新闻邀请邮件中</a>，Tech Drive-in肯定是一个很值得你去学习的网站。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#ubuntuhandbook" name="user-content-ubuntuhandbook" target="_blank" rel="external"></a><a href="http://ubuntuhandbook.org/" target="_blank" rel="external">UbuntuHandbook</a></h3><br><p>快速小贴士，新闻和教程是UbuntuHandbook的USP。<a href="https://plus.google.com/u/0/+JimUbuntuHandbook" target="_blank" rel="external">Jim</a>最近也在参与维护一些PPAS。我必须很认真的说，这个博客的页面其实可以做得更好看点，纯属个人观点。</p><br><p>UbuntuHandbook 真的很方便。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#unixmen" name="user-content-unixmen" target="_blank" rel="external"></a><a href="http://www.unixmen.com/" target="_blank" rel="external">Unixmen</a></h3><br><p>这个网站是由很多人一起维护的，而且并不仅仅局限于Ubuntu，它也覆盖了很多的其他的Linux发行版。它有自己的论坛来帮助用户。</p><br><p>紧跟着 Unixmen 的步伐。。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#the-mukt" name="user-content-the-mukt" target="_blank" rel="external"></a><a href="http://www.themukt.com/" target="_blank" rel="external">The Mukt</a></h3><br><p>The Mukt是Muktware新的代表。Muktware是一个逐渐消亡的Linux组织，并以Mukt重生。Muktware是一个很严谨的Linux开源的博客，The Mukt涉及很多广泛的主题，包括，科技新闻，极客新闻，有时还有娱乐新闻（听起来是否有一种混搭风的感觉？）The Mukt也包括很多你感兴趣的Ubuntu新闻。</p><br><p>The Mukt 不仅仅是一个博客，它是一种文化潮流。</p><br><h3><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#linuxg" name="user-content-linuxg" target="_blank" rel="external"></a><a href="http://linuxg.net/" target="_blank" rel="external">LinuxG</a></h3><br><p>LinuxG是一个你可以找到所有关于“怎样安装”类型文章的站点。几乎所有的文章都开始于一句话“你好，Linux geeksters,正如你所知道的……”，博客可以在不同的主题上做得更好。我经常发现有些是文章缺乏深度，并且是急急忙忙写出来的，但是它仍然是一个关注应用最新版本的好地方。</p><br><p>这是个快速浏览新的应用和它们最新的版本好地方。</p><br><p><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#%E4%BD%A0%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E7%9A%84%E7%AB%99%E7%82%B9%E5%90%97" name="user-content-%E4%BD%A0%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E7%9A%84%E7%AB%99%E7%82%B9%E5%90%97" target="_blank" rel="external"></a>你还有什么好的站点吗？</p><br><p><a class="anchor" href="https://github.com/LCTT/TranslateProject/blob/master/translated/talk/20140922%20Ten%20Blogs%20Every%20Ubuntu%20User%20Must%20Follow.md#%E8%BF%99%E4%BA%9B%E5%B0%B1%E6%98%AF%E6%88%91%E5%B9%B3%E6%97%B6%E7%BB%8F%E5%B8%B8%E6%B5%8F%E8%A7%88%E7%9A%84-ubuntu-%E5%8D%9A%E5%AE%A2%E6%88%91%E7%9F%A5%E9%81%93%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%9A%E6%88%91%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%AB%99%E7%82%B9%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%AF%94%E6%88%91%E5%88%97%E5%87%BA%E6%9D%A5%E7%9A%84%E8%BF%99%E4%BA%9B%E6%9B%B4%E5%A5%BD%E6%89%80%E4%BB%A5%E6%AC%A2%E8%BF%8E%E6%8A%8A%E4%BD%A0%E6%9C%80%E5%96%9C%E7%88%B1%E7%9A%84-ubuntu-%E5%8D%9A%E5%AE%A2%E5%86%99%E5%9C%A8%E4%B8%8B%E9%9D%A2%E8%AF%84%E8%AE%BA%E5%8C%BA" name="user-content-%E8%BF%99%E4%BA%9B%E5%B0%B1%E6%98%AF%E6%88%91%E5%B9%B3%E6%97%B6%E7%BB%8F%E5%B8%B8%E6%B5%8F%E8%A7%88%E7%9A%84-ubuntu-%E5%8D%9A%E5%AE%A2%E6%88%91%E7%9F%A5%E9%81%93%E8%BF%98%E6%9C%89%E5%BE%88%E5%A4%9A%E6%88%91%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E7%AB%99%E7%82%B9%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%AF%94%E6%88%91%E5%88%97%E5%87%BA%E6%9D%A5%E7%9A%84%E8%BF%99%E4%BA%9B%E6%9B%B4%E5%A5%BD%E6%89%80%E4%BB%A5%E6%AC%A2%E8%BF%8E%E6%8A%8A%E4%BD%A0%E6%9C%80%E5%96%9C%E7%88%B1%E7%9A%84-ubuntu-%E5%8D%9A%E5%AE%A2%E5%86%99%E5%9C%A8%E4%B8%8B%E9%9D%A2%E8%AF%84%E8%AE%BA%E5%8C%BA" target="_blank" rel="external"></a>这些就是我平时经常浏览的 Ubuntu 博客。我知道还有很多我不知道的站点，可能会比我列出来的这些更好。所以，欢迎把你最喜爱的 Ubuntu 博客写在下面评论区。</p><br><p>via:&nbsp;<a href="http://itsfoss.com/ten-blogs-every-ubuntu-user-must-follow/" target="_blank" rel="external">http://itsfoss.com/ten-blogs-every-ubuntu-user-must-follow/</a></p><br><p>作者：<a href="http://itsfoss.com/author/Abhishek/" target="_blank" rel="external">Abhishek</a>&nbsp;译者：<a href="https://github.com/barney-ro" target="_blank" rel="external">barney-ro</a>&nbsp;校对：<a href="https://github.com/carolinewuyan" target="_blank" rel="external">Caroline</a></p><br><p>本文由&nbsp;<a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="external">LCTT</a>&nbsp;原创翻译，<a href="http://linux.cn/" target="_blank" rel="external">Linux中国</a>&nbsp;荣誉推出</p><br><br><div class="copyright"><br>    <div>来源： itsfoss</div>    <div><br>        原文： <a href="http://itsfoss.com/ten-blogs-every-ubuntu-user-must-follow/" target="_blank">http://itsfoss.com/ten-blogs-every-ubuntu-user-must-follow/</a>&nbsp;&nbsp;&nbsp;&nbsp;        作者： Abhishek     </div><br><br>    <div><br>                译者： barney-ro    </div><br><br>                    <div>本文是原创投递或翻译投递，<href="http: linux.cn="" "="">Linux中国首发地址：<a href="http://linux.cn/article-3910-1.html" target="_blank" rel="external">http://linux.cn/article-3910-1.html</a>&lt;/href=”http:&gt;</href="http:></div><div><span style="color:red;">欢迎转载，敬请在正文中标注并保留原文/译文链接和作者/译者等信息</span></div><br><br></div><br><div class="hm"><br><a title="分享到腾讯微博" href="javascript:void( share_tqq(SITEURL + 'article-3910-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201409/27/092648ie0hlflepel1cggx.jpg.large.jpg') );" class="tqq_large" target="_blank" rel="external"></a><br><a title="分享到新浪微博" href="javascript:void( share_tsina(SITEURL + 'article-3910-1.html','article_title','article_content','http://img.linux.net.cn/data/attachment/album/201409/27/092648ie0hlflepel1cggx.jpg.large.jpg') );" class="tsina_large" target="_blank" rel="external"></a><br></div><br></td>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[高斯模糊动态壁纸的三段smail插值代码：]]></title>
      <url>http://percychen.com/2014/09/28/2014-09-28-fastblursmailcode/</url>
      <content type="html"><![CDATA[<ol>
<li><p>引导函数代码</p>
<pre><code>invoke-direct {p0}, Lxxx/xxx/xxx/xxx/xxxActivity;-&gt;wallpaper()V
</code></pre></li>
<li><p>wallpaper 布置代码：</p>
<pre><code>.method private wallpaper()V
.locals 4

.prologue
.line 28
invoke-static {p0}, Landroid/app/WallpaperManager;-&gt;getInstance(Landroid/content/Context;)Landroid/app/WallpaperManager;

move-result-object v2

.line 29
.local v2, &quot;wallpaperManager&quot;:Landroid/app/WallpaperManager;
invoke-virtual {v2}, Landroid/app/WallpaperManager;-&gt;getDrawable()Landroid/graphics/drawable/Drawable;

move-result-object v1

.line 30
.local v1, &quot;wallpaperDrawable&quot;:Landroid/graphics/drawable/Drawable;
check-cast v1, Landroid/graphics/drawable/BitmapDrawable;

.end local v1    # &quot;wallpaperDrawable&quot;:Landroid/graphics/drawable/Drawable;
invoke-virtual {v1}, Landroid/graphics/drawable/BitmapDrawable;-&gt;getBitmap()Landroid/graphics/Bitmap;

move-result-object v0

.line 31
.local v0, &quot;bm&quot;:Landroid/graphics/Bitmap;
const v3, 0x7f070075//布局id

invoke-virtual {p0, v3}, Lcom/android/systemui/statusbar/phone/StatusBarWindowView;-&gt;findViewById(I)Landroid/view/View;

move-result-object v3

check-cast v3, Landroid/widget/LLL;//id所在控件样式

iput-object v3, p0, Lcom/android/systemui/statusbar/phone/StatusBarWindowView;-&gt;MMM:Lxxx/xxx/xxx/xxx/xxx;//MMM表示id名称
.line 32
iget-object v3, p0, Lcom/android/systemui/statusbar/phone/StatusBarWindowView;-&gt;MMM:Lxxx/xxx/xxx/xxx/xxx;

invoke-direct {p0, v0, v3}, Lxxx/xxx/xxx/xxx/xxx;-&gt;blur(Landroid/graphics/Bitmap;Landroid/view/View;)V

.line 33
return-void
.end method
</code></pre></li>
<li><p>高斯模糊实现代码</p>
<pre><code>.method private blur(Landroid/graphics/Bitmap;Landroid/view/View;)V
.locals 13
.param p1, &quot;bkg&quot;    # Landroid/graphics/Bitmap;
.param p2, &quot;view&quot;    # Landroid/view/View;

.prologue
const/high16 v12, 0x3f800000

const/4 v11, 0x0

.line 35
const/high16 v6, 0x3f800000

.line 36
.local v6, &quot;scaleFactor&quot;:F
const/high16 v6, 0x41900000

.line 37
const/high16 v5, 0x40800000

.line 38
.local v5, &quot;radius&quot;:F
invoke-virtual {p0}, Lxxx/xxx/xxx/xxx/xxxActivity;-&gt;getWindowManager()Landroid/view/WindowManager;

move-result-object v8

invoke-interface {v8}, Landroid/view/WindowManager;-&gt;getDefaultDisplay()Landroid/view/Display;

move-result-object v2

.line 39
.local v2, &quot;mDisplay&quot;:Landroid/view/Display;
invoke-virtual {v2}, Landroid/view/Display;-&gt;getWidth()I

move-result v7

.line 40
.local v7, &quot;w&quot;:I
invoke-virtual {v2}, Landroid/view/Display;-&gt;getHeight()I

move-result v1

.line 41
.local v1, &quot;h&quot;:I
int-to-float v8, v7

div-float/2addr v8, v6

float-to-int v8, v8

.line 42
int-to-float v9, v1

div-float/2addr v9, v6

float-to-int v9, v9

sget-object v10, Landroid/graphics/Bitmap$Config;-&gt;ARGB_8888:Landroid/graphics/Bitmap$Config;

.line 41
invoke-static {v8, v9, v10}, Landroid/graphics/Bitmap;-&gt;createBitmap(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;

move-result-object v3

.line 43
.local v3, &quot;overlay&quot;:Landroid/graphics/Bitmap;
new-instance v0, Landroid/graphics/Canvas;

invoke-direct {v0, v3}, Landroid/graphics/Canvas;-&gt;&lt;init&gt;(Landroid/graphics/Bitmap;)V

.line 44
.local v0, &quot;canvas&quot;:Landroid/graphics/Canvas;
invoke-virtual {p2}, Landroid/view/View;-&gt;getLeft()I

move-result v8

neg-int v8, v8

int-to-float v8, v8

div-float/2addr v8, v6

invoke-virtual {p2}, Landroid/view/View;-&gt;getTop()I

move-result v9

neg-int v9, v9

int-to-float v9, v9

div-float/2addr v9, v6

invoke-virtual {v0, v8, v9}, Landroid/graphics/Canvas;-&gt;translate(FF)V

.line 45
div-float v8, v12, v6

div-float v9, v12, v6

invoke-virtual {v0, v8, v9}, Landroid/graphics/Canvas;-&gt;scale(FF)V

.line 46
new-instance v4, Landroid/graphics/Paint;

invoke-direct {v4}, Landroid/graphics/Paint;-&gt;&lt;init&gt;()V

.line 47
.local v4, &quot;paint&quot;:Landroid/graphics/Paint;
const/4 v8, 0x2

invoke-virtual {v4, v8}, Landroid/graphics/Paint;-&gt;setFlags(I)V

.line 48
invoke-virtual {v0, p1, v11, v11, v4}, Landroid/graphics/Canvas;-&gt;drawBitmap(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V

.line 49
float-to-int v8, v5

const/4 v9, 0x1

invoke-static {v3, v8, v9}, Lcom/android/systemui/recent/FastBlur;-&gt;doBlur(Landroid/graphics/Bitmap;IZ)Landroid/graphics/Bitmap;

move-result-object v3

.line 50
new-instance v8, Landroid/graphics/drawable/BitmapDrawable;

invoke-virtual {p0}, Lxxx/xxx/xxx/xxx/xxxActivity;-&gt;getResources()Landroid/content/res/Resources;

move-result-object v9

invoke-direct {v8, v9, v3}, Landroid/graphics/drawable/BitmapDrawable;-&gt;&lt;init&gt;(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V

invoke-virtual {p2, v8}, Landroid/view/View;-&gt;setBackgroundDrawable(Landroid/graphics/drawable/Drawable;)V

.line 51
return-void
.end method
</code></pre></li>
<li><p>com/android/systemui/recent/ 下存放 FastBlur.smail</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[流动的星空--梵高]]></title>
      <url>http://percychen.com/2014/09/26/2014-09-26-fangaoarticle/</url>
      <content type="html"><![CDATA[<embed src="http://player.youku.com/player.php/sid/XMzUxMTI4NjE2/v.swf" allowfullscreen="true" quality="high" width="800" height="667" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[adb 自动化测试]]></title>
      <url>http://percychen.com/2014/09/23/2014-09-23-androiddebug/</url>
      <content type="html"><![CDATA[<h3 id="查看常驻内存"><a href="#查看常驻内存" class="headerlink" title="查看常驻内存"></a>查看常驻内存</h3><pre><code>adb shell dumpsys meminfo
</code></pre><h3 id="模拟按键："><a href="#模拟按键：" class="headerlink" title="模拟按键："></a>模拟按键：</h3><pre><code>adb shell input keyevent 27
</code></pre><h3 id="模拟打电话："><a href="#模拟打电话：" class="headerlink" title="模拟打电话："></a>模拟打电话：</h3><pre><code>adb shell am start -a android.intent.action.CALL -d tel:185xxxxxx
</code></pre><h3 id="模拟浏览网页："><a href="#模拟浏览网页：" class="headerlink" title="模拟浏览网页："></a>模拟浏览网页：</h3><pre><code>adb shell am start -a android.intent.action.VIEW -d  http://www.baidu.com
</code></pre><h3 id="模拟模拟启动应用："><a href="#模拟模拟启动应用：" class="headerlink" title="模拟模拟启动应用："></a>模拟模拟启动应用：</h3><pre><code>adb shell am start -n com.android.contacts/.activities.DialtactsActivity
</code></pre><h3 id="模拟输入："><a href="#模拟输入：" class="headerlink" title="模拟输入："></a>模拟输入：</h3><pre><code>在编辑短信时，往文本框输入文本：adb shell input text &quot;hello&quot;
</code></pre><h3 id="模拟安装卸载"><a href="#模拟安装卸载" class="headerlink" title="模拟安装卸载"></a>模拟安装卸载</h3><pre><code>adb install d:\hello.apk
adb unstall com.huawei.hello
</code></pre><h4 id="查看系统状态和信息-系列"><a href="#查看系统状态和信息-系列" class="headerlink" title="查看系统状态和信息 系列"></a>查看系统状态和信息 系列</h4><pre><code>adb shell procrank 查询各进程内存使用情况
adb shell service list 查看services信息
adb shell cat /proc/meminfo 查看当前的内存情况
adb shell cat /proc/cpuinfo 查看CPU信息（硬件）
adb shell cat /proc/iomem  查看IO内存分区
adb shell getprop 列出系统所有属性
adb shell getprop | findstr &quot;gsm&quot; 列出包含gsm的属性
adb shell setprop &lt;key&gt; &lt;value&gt;  修改系统属性
adb shell sqlite3 可以执行sql语句查看数据库信息， 具体使用情况待调查
adb logcat -b radio — 查看缓冲区的相关的信息.
adb logcat -b events — 查看和事件相关的的缓冲区.
adb logcat -b main — 查看主要的日志缓冲区
</code></pre><p>###adb monkey 测试</p>
<ul>
<li><p>黑名单测试</p>
<pre><code>adb shell monkey -s 111111 --pkg-blacklist-file /data/blacklist.txt --throttle 300 --ignore-crashes --ignore-timeouts --monitor-native-crashes --ignore-native-crashes -v -v 500000 &gt; ~/monkey.log
</code></pre></li>
<li><p>白名单测试</p>
<pre><code>adb shell monkey -s 111111 --pkg-whitelist-file /data/whitelist.txt --throttle 300 --ignore-crashes --ignore-timeouts --monitor-native-crashes --ignore-native-crashes -v -v 500000 &gt; ./monkey.log
</code></pre></li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>android按键键值：</p>
<pre><code>1 --&gt;  &quot;KEYCODE_MENU&quot;
2 --&gt;  &quot;KEYCODE_SOFT_RIGHT&quot;
3 --&gt;  &quot;KEYCODE_HOME&quot;
4 --&gt;  &quot;KEYCODE_BACK&quot;
5 --&gt;  &quot;KEYCODE_CALL&quot;
6 --&gt;  &quot;KEYCODE_ENDCALL&quot;
7 --&gt;  &quot;KEYCODE_0&quot;
8 --&gt;  &quot;KEYCODE_1&quot;
9 --&gt;  &quot;KEYCODE_2&quot;
10 --&gt;  &quot;KEYCODE_3&quot;
11 --&gt;  &quot;KEYCODE_4&quot;
12 --&gt;  &quot;KEYCODE_5&quot;
13 --&gt;  &quot;KEYCODE_6&quot;
14 --&gt;  &quot;KEYCODE_7&quot;
15 --&gt;  &quot;KEYCODE_8&quot;
16 --&gt;  &quot;KEYCODE_9&quot;
17 --&gt;  &quot;KEYCODE_STAR&quot;
18 --&gt;  &quot;KEYCODE_POUND&quot;
19 --&gt;  &quot;KEYCODE_DPAD_UP&quot;
20 --&gt;  &quot;KEYCODE_DPAD_DOWN&quot;
21 --&gt;  &quot;KEYCODE_DPAD_LEFT&quot;
22 --&gt;  &quot;KEYCODE_DPAD_RIGHT&quot;
23 --&gt;  &quot;KEYCODE_DPAD_CENTER&quot;
24 --&gt;  &quot;KEYCODE_VOLUME_UP&quot;
25 --&gt;  &quot;KEYCODE_VOLUME_DOWN&quot;
26 --&gt;  &quot;KEYCODE_POWER&quot;
27 --&gt;  &quot;KEYCODE_CAMERA&quot;
28 --&gt;  &quot;KEYCODE_CLEAR&quot;
29 --&gt;  &quot;KEYCODE_A&quot;
30 --&gt;  &quot;KEYCODE_B&quot;
31 --&gt;  &quot;KEYCODE_C&quot;
32 --&gt;  &quot;KEYCODE_D&quot;
33 --&gt;  &quot;KEYCODE_E&quot;
34 --&gt;  &quot;KEYCODE_F&quot;
35 --&gt;  &quot;KEYCODE_G&quot;
36 --&gt;  &quot;KEYCODE_H&quot;
37 --&gt;  &quot;KEYCODE_I&quot;
38 --&gt;  &quot;KEYCODE_J&quot;
39 --&gt;  &quot;KEYCODE_K&quot;
40 --&gt;  &quot;KEYCODE_L&quot;
41 --&gt;  &quot;KEYCODE_M&quot;
42 --&gt;  &quot;KEYCODE_N&quot;
43 --&gt;  &quot;KEYCODE_O&quot;
44 --&gt;  &quot;KEYCODE_P&quot;
45 --&gt;  &quot;KEYCODE_Q&quot;
46 --&gt;  &quot;KEYCODE_R&quot;
47 --&gt;  &quot;KEYCODE_S&quot;
48 --&gt;  &quot;KEYCODE_T&quot;
49 --&gt;  &quot;KEYCODE_U&quot;
50 --&gt;  &quot;KEYCODE_V&quot;
51 --&gt;  &quot;KEYCODE_W&quot;
52 --&gt;  &quot;KEYCODE_X&quot;
53 --&gt;  &quot;KEYCODE_Y&quot;
54 --&gt;  &quot;KEYCODE_Z&quot;
55 --&gt;  &quot;KEYCODE_COMMA&quot;
56 --&gt;  &quot;KEYCODE_PERIOD&quot;
57 --&gt;  &quot;KEYCODE_ALT_LEFT&quot;
58 --&gt;  &quot;KEYCODE_ALT_RIGHT&quot;
59 --&gt;  &quot;KEYCODE_SHIFT_LEFT&quot;
60 --&gt;  &quot;KEYCODE_SHIFT_RIGHT&quot;
61 --&gt;  &quot;KEYCODE_TAB&quot;
62 --&gt;  &quot;KEYCODE_SPACE&quot;
63 --&gt;  &quot;KEYCODE_SYM&quot;
64 --&gt;  &quot;KEYCODE_EXPLORER&quot;
65 --&gt;  &quot;KEYCODE_ENVELOPE&quot;
66 --&gt;  &quot;KEYCODE_ENTER&quot;
67 --&gt;  &quot;KEYCODE_DEL&quot;
68 --&gt;  &quot;KEYCODE_GRAVE&quot;
69 --&gt;  &quot;KEYCODE_MINUS&quot;
70 --&gt;  &quot;KEYCODE_EQUALS&quot;
71 --&gt;  &quot;KEYCODE_LEFT_BRACKET&quot;
72 --&gt;  &quot;KEYCODE_RIGHT_BRACKET&quot;
73 --&gt;  &quot;KEYCODE_BACKSLASH&quot;
74 --&gt;  &quot;KEYCODE_SEMICOLON&quot;
75 --&gt;  &quot;KEYCODE_APOSTROPHE&quot;
76 --&gt;  &quot;KEYCODE_SLASH&quot;
77 --&gt;  &quot;KEYCODE_AT&quot;
78 --&gt;  &quot;KEYCODE_NUM&quot;
79 --&gt;  &quot;KEYCODE_HEADSETHOOK&quot;
80 --&gt;  &quot;KEYCODE_FOCUS&quot;
81 --&gt;  &quot;KEYCODE_PLUS&quot;
82 --&gt;  &quot;KEYCODE_MENU&quot;
83 --&gt;  &quot;KEYCODE_NOTIFICATION&quot;
84 --&gt;  &quot;KEYCODE_SEARCH&quot;
85 --&gt;  &quot;TAG_LAST_KEYCODE&quot;
KEYCODE_FOCUS 拍照对焦键 80
KEYCODE_NOTIFICATION 通知键 83
KEYCODE_MUTE 话筒静音键 91
KEYCODE_VOLUME_MUTE 扬声器静音键 164
KEYCODE_ESCAPE ESC键 111
KEYCODE_MOVE_HOME 光标移动到开始键 122
KEYCODE_MOVE_END 光标移动到末尾键 123
KEYCODE_PAGE_UP 向上翻页键 92
KEYCODE_PAGE_DOWN 向下翻页键 93
KEYCODE_FORWARD_DEL 删除键 112
KEYCODE_INSERT 插入键 124
KEYCODE_NUM_LOCK 小键盘锁 143
KEYCODE_CAPS_LOCK 大写锁定键 115
KEYCODE_BREAK Break/Pause键 121
KEYCODE_SCROLL_LOCK 滚动锁定键 116
KEYCODE_ZOOM_IN 放大键 168
KEYCODE_ZOOM_OUT 缩小键 169
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[祖国，或以梦为马--海子]]></title>
      <url>http://percychen.com/2014/09/22/2014-09-22-poemofhaizi/</url>
      <content type="html"><![CDATA[<center><br><br><br><br>            海子<br><br><br><br><br>我要做远方的忠诚的儿子<br><br>和物质的短暂情人<br><br>和所有以梦为马的诗人一样<br><br>我不得不和烈士和小丑走在同一道路上<br><br><br><br><br>万人都要将火熄灭 我一人独将此火高高举起<br><br>此火为大 开花落英于神圣的祖国<br><br>和所有以梦为马的诗人一样<br><br>我借此火得度一生的茫茫黑夜<br><br><br><br><br>此火为大 祖国的语言和乱石投筑的梁山城寨<br><br>以梦为上的敦煌——那七月也会寒冷的骨骼<br><br>如雪白的柴和坚硬的条条白雪 横放在众神之山<br><br>和所有以梦为马的诗人一样<br><br>我投入此火 这三者是囚禁我的灯盏<br><br>吐出光辉<br><br><br><br><br>万人都要从我刀口走过 去建筑祖国的语言<br><br>我甘愿一切从头开始<br><br>和所以以梦为马的诗人一样<br><br>我也愿将牢底坐穿<br><br><br><br>众神创造物中只有我最易朽 <br><br>带着不可抗拒的死亡的速度<br><br>只有粮食是我珍爱 我将她紧紧抱住<br><br>抱住她在故乡生儿育女<br><br>和所有以梦为马的诗人一样<br><br>我也愿将自己埋葬在四周高高的山上<br><br>守望平静的家园<br><br><br><br><br>面对大河我无限惭愧<br><br>我年华虚度 空有一身疲倦<br><br>和所有以梦为马的诗人一样<br><br>岁月易逝 一滴不剩 水滴中有一匹<br><br>马儿一命归天<br><br><br><br>千年后如若我再生于祖国的河岸<br><br>千年后我再次拥有中国的稻田<br><br>和周天子的雪山 天马踢踏<br><br>我选择永恒的事业<br><br>我的事业 就是要成为太阳的一生<br><br><br><br><br>他从古至今——“日”——他无比辉煌 无比光明<br><br>和所有以梦为马的诗人一样<br><br>最后我被黄昏的众神抬入不朽的太阳<br><br>太阳是我的名字<br><br>太阳是我的一生<br><br>太阳的山顶埋葬 诗歌的尸体——千年王国和我<br><br>骑着五千年凤凰和名字叫”马”的龙<br><br>——我必将失败<br><br>但诗歌本身以太阳必将胜利    <br><br></center>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java中int和string互转的方法]]></title>
      <url>http://percychen.com/2014/09/20/2014-09-20-inttostring/</url>
      <content type="html"><![CDATA[<ol>
<li>如何将字串 String 转换成整数 int? <br>有两个方法:</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>).</div><div class="line"><span class="keyword">int</span> i = Integer.parseInt([String]);</div><div class="line">或</div><div class="line">i = Integer.parseInt([String],[<span class="keyword">int</span> radix]);</div><div class="line"></div><div class="line"><span class="number">2</span>).</div><div class="line"><span class="keyword">int</span> i = Integer.valueOf(my_str).intValue();</div><div class="line"></div><div class="line">注: 字串转成 Double, Float, Long 的方法大同小异.</div></pre></td></tr></table></figure>
<ol>
<li><p>如何将整数 int 转换成字串 String ? <br>有叁种方法:</p>
<pre><code>1.) String s = String.valueOf(i);

2.) String s = Integer.toString(i);

3.) String s = &quot;&quot; + i;

注: Double, Float, Long 转成字串的方法大同小异.
</code></pre></li>
<li><p>将 Textview 转换成 String:</p>
<pre><code>String sharedFact = theFact.getText().toString();
</code></pre></li>
<li><p>裁剪字符串:</p>
<pre><code>realnumber=realnumber.substring(2,9);
</code></pre></li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[java中新的Onclick绑定跳转方法（XML加java配合）]]></title>
      <url>http://percychen.com/2014/09/19/2014-09-19-button/</url>
      <content type="html"><![CDATA[<p>直接在xml里设置点击事件。android解析到后执行函数就可以实现点击功能：</p>
<p>例子：通过点击button，从A跳转到B</p>
<ul>
<li><p>XML代码：</p>
<pre><code>&lt;Button
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;60dp&quot;
    android:onClick=&quot;back&quot;
    android:background=&quot;@drawable/yun_button&quot;
    android:text=&quot;返回主界面&quot;
    android:id=&quot;@+id/scheduleback&quot;
    android:layout_centerHorizontal=&quot;true&quot;
    android:layout_alignParentBottom=&quot;true&quot;
/&gt;
</code></pre></li>
<li><p>java代码：</p>
<pre><code>public void back(View view)
{
    Intent back = new Intent();
    back.setClass(A.this,B.class);
    startActivity(back);
}
</code></pre></li>
</ul>
<p>即可！再也不用绑定按键啦！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[老外们一些有意思的注释]]></title>
      <url>http://percychen.com/2014/09/15/2014-09-15-someinterestingNotes/</url>
      <content type="html"><![CDATA[<p>下面是<a href="http://stackoverflow.com" target="_blank" rel="external">stackoverflow</a>网站上网友针对<a href="http://stackoverflow.com/questions/184618/what-is-the-best-comment-in-source-code-you-have-ever-encountered?page=1&amp;tab=votes#tab-top" target="_blank" rel="external">你看到过的最好的代码注释是什么样的？</a></p>
<p>这个问题给出的回答的前10条：</p>
<p>原文：</p>
<pre><code>//
// Dear maintainer:
//
// Once you are done trying to &apos;optimize&apos; this routine,
// and have realized what a terrible mistake that was,
// please increment the following counter as a warning
// to the next guy:
//
// total_hours_wasted_here = 42
//
</code></pre><p>翻译：</p>
<pre><code>// 亲爱的维护者：
// 如果你尝试了对这段程序进行‘优化’，
// 并认识到这种企图是大错特错，请增加
// 下面这个计数器的个数，用来对后来人进行警告：
// 浪费在这里的总时间 = 42h
</code></pre><p>原文：</p>
<pre><code>/**
* For the brave souls who get this far: You are the chosen ones,
* the valiant knights of programming who toil away, without rest,
* fixing our most awful code. To you, true saviors, kings of men,
* I say this: never gonna give you up, never gonna let you down,
* never gonna run around and desert you. Never gonna make you cry,
* never gonna say goodbye. Never gonna tell a lie and hurt you.
*/
</code></pre><p>翻译：</p>
<pre><code>/** * 致终于来到这里的勇敢的人：
你是被上帝选中的人，英勇的、不辞劳苦的、不眠不修的来修改
我们这最棘手的代码的编程骑士。你，我们的救世主，人中之龙，
我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己。
永远不要哭啼，永远不要说再见。永远不要说谎来伤害自己。 */
</code></pre><p>原文：</p>
<pre><code>Exception up = new Exception(&quot;Something is really wrong.&quot;); throw up; // ha ha
</code></pre><p>翻译：</p>
<pre><code>Exception up = new Exception(&quot;尼玛这里真的错了&quot;); throw up; //哈哈
这尼玛是我们国家的哪个逗比写的？
</code></pre><p>原文：</p>
<pre><code>// somedev1 -  6/7/02 Adding temporary tracking of Login screen
// somedev2 -  5/22/07 Temporary my ass
</code></pre><p>翻译：</p>
<pre><code>// 一些修改1 - 2002/6/7 增加临时的跟踪登录界面
// 一些修改2 - 2007/5/22 我临时的犯傻
</code></pre><p>原文：</p>
<pre><code>#define TRUE FALSE
//Happy debugging suckers
</code></pre><p>翻译：</p>
<pre><code>#define TRUE FALSE // 逗一逗调试程序的傻瓜们
</code></pre><p>原文：</p>
<pre><code>if (/*you*/ $_GET[&apos;action&apos;]) { //celebrate
</code></pre><p>翻译：</p>
<pre><code>if (/*you*/ $_GET[&apos;action&apos;]) { //恭喜
</code></pre><p>原文：</p>
<pre><code>//if this code work fine,then it writed by Paul DiLascia
//if not ,who knows!
</code></pre><p>翻译：</p>
<pre><code>// 如果这段代码好用，那它是Paul DiLascia写的。
// 如果不好用，我不知道是谁写的。
</code></pre><p>原文：</p>
<pre><code>//When I wrote this, only God and I understood what I was doing
//Now, God only knows
</code></pre><p>翻译：</p>
<pre><code>// 写这段代码的时候，只有上帝和我知道它是干嘛的
// 现在，只有上帝知道
</code></pre><p>原文：</p>
<pre><code>// drunk, fix later
</code></pre><p>翻译：</p>
<pre><code>// 晕了，以后再修改
</code></pre><p>原文：</p>
<pre><code>// Magic. Do not touch.
</code></pre><p>翻译：</p>
<pre><code>// 神奇。勿动。
</code></pre><p>补充一条：</p>
<pre><code>//佛祖开光，无bug
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编译一个android ROM中文指南]]></title>
      <url>http://percychen.com/2014/09/12/2014-09-12-makeandroid/</url>
      <content type="html"><![CDATA[<p>###关于 <a href="http://baike.baidu.com/subview/1241829/9322617.htm?fr=aladdin" target="_blank" rel="external">Android</a><br>android是一个开源系统，意味着任何人都可以参与到android的开发中来，除了可以开发应用层外，你甚至可以重写framework层和C层，牛逼一点还可以重写虚拟机。本文是给那些入门的人写一个基本的编译教程。</p>
<p>###准备条件</p>
<ul>
<li>一台cm支持的设备。</li>
<li>一台搭载linux 64位系统的电脑。</li>
<li>会一点python，shell或者C（非必须）</li>
</ul>
<p>###为什么是cm？</p>
<p>圈内的人都知道cm，CM是<a href="http://baike.baidu.com/view/5079569.htm" target="_blank" rel="external">CyanogenMod</a>的简称。Cyanogen团队是目前全球最大的Android第三方编译团队。cm算是三方ROM包的鼻祖了，cm支持的机型特别多，一般国际上热门的机型都会支持。了解详情请去<a href="http://wiki.cyanogenmod.org/w/Main_Page?setlang=zh-cn" target="_blank" rel="external">CM的wiki百科</a></p>
<p>###linux 64位操作系统</p>
<p>严格的来说，linux 32位系统和windows下用cywin也能编译，同样用虚拟机跑linux也是可以编译一个ROM包的，但是32位的linux编译起来问题比较多，而cywin和虚拟机编译效率低下，本来编译时间就比较漫长，为了节省时间，建议自己装一个linux，楼主现在就是纯linux工作的。<br><br>在linux的阵营中建议新手选择ubuntu，ubuntu使用久了人可以转而使用mint，debian或者其它，楼主使用过redhat，opensuse，debian，mint，ubuntu，deepin，elementary os等linux，推荐使用mint，稳定高效，界面也可以忍受，目前楼主在用deepin，主要是因为它的sublime text能够输入中文，而且原生支持搜狗输入法。</p>
<p>###需要什么语法基础</p>
<p>实际上，你什么语法都不会也是可以编译出来的，不过编译过程中没有错误几乎是不可能的，编译脚本使用python写的，中间调用了些shell脚本，这个脚本用来编写java和C文件。如果这些你都不懂，也没关系，但是Makefile中文指南你必须得去看一下，楼主当年战斗力负100的时候，去实习，就看了一周的makefile。Android的编译配置文件大多是以.mk结尾的文件，这些文件都遵循makefile语法布局。所以，即便是你看不懂，最好也要愁一点时间看看。</p>
<h2 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h2><p>###1. 准备设备私有文件</p>
<p>如果你的设备是CM官方支持的机型，那么私有文件肯定是可以在github上找到的，你可以直接在github上搜索：</p>
<pre><code>android_devices_xxxx_xxxx
android_kernel_xxxx_xxxx
</code></pre><p>比如oppo的find7 你就可以分别搜索：</p>
<pre><code>android_devices_oppo_find7
android_kernel_oppo_find7
</code></pre><p>搜索到后clone就ok。</p>
<pre><code>git clone 网址
</code></pre><p>###2. 安装SDK</p>
<p>SDK是包含在ADT中的，所以你可以百度“ADT”然后进入下载ADT得到，如果下载不下来，或者某个网页打不来，呵呵，你懂的，请自行准备梯子FQ。<br>下载得到的adt压缩包和，解压得到一个sdk文件夹和eclipse文件夹，解压开放在你的用户目录。<br><br>另外，建议将sdk/platform-tools加入系统环境变量，这样你就可以adb和fastboot了。</p>
<p>###3. 安装编译依赖包</p>
<p>没什么要说的，打开终端输入：</p>
<pre><code>sudo apt-get install bison build-essential curl flex git gnupg gperf libesd0-dev libncurses5-dev libsdl1.2-dev libwxgtk2.8-dev libxml2 libxml2-utils lzop openjdk-6-jdk openjdk-6-jre pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev g++-multilib gcc-multilib lib32ncurses5-dev lib32readline-gplv2-dev lib32z1-dev
</code></pre><p>安装完后,你的环境和jdk都会搭好了。如果出现部分包无法安装，请自行百度，每个linux收录的包的多少都有些不同。请自行解决。</p>
<p>###4.建立文件夹，准备获取代码</p>
<p>直接在终端里输入：</p>
<pre><code>mkdir -p ~/bin
mkdir -p ~/code
</code></pre><p>第一个文件夹用来装repo下载工具，第二个文件用来装代码。所以第一个文件夹需要放进环境变量，最近的ubuntu和mint版本不需要，但是其它版本就不知道了。怎么加入环境变量请百度。<br><br></p>
<ul>
<li><p><strong>下载repo</strong></p>
<pre><code>curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo
 chmod a+x ~/bin/repo
</code></pre></li>
</ul>
<p>###5.下载android源码</p>
<pre><code>cd ~/code
mkdir cm-11
repo init -u git://github.com/CyanogenMod/android.git -b cm-11.0
repo sync
</code></pre><p>同步时间比较久，毕竟是几十G的代码，CM11好像有尽30G，如果同步出错，请自己写一个断线自动同步代码，在我的其它文章里有。我最近在同步4.4.4的代码，同步三天了，还没同步完，哎。</p>
<p>###6. 装载私有文件</p>
<p>将第一步下载好的device文件夹里面的文件放到源码目录下的 device/品牌名/设备名里面去。<br><br>将下载好的kernel文件夹里面的文件放到源码目录下的 kernel/品牌名/设备名里面去.<br><br>比如oppo find7 文件夹里面文件和文件夹放置到</p>
<pre><code>device/oppo/find7
kernel/oppo/find7
</code></pre><p>放好后就可以摩拳擦掌，准备编译了。</p>
<p>###7. <strong>编译</strong></p>
<p>编译步骤太多，就不解释啦，直接上代码：</p>
<pre><code>cd ~/code/cm-11/vendor/cm
./get-prebuilts
</code></pre><p>上面两步是为了获取预制资源，一般是终端什么的，也可以跳过,如果你执行了上面一步，在执行下一步之前，你需要回到源码目录下：</p>
<pre><code>cd ~/code/cm-11
</code></pre><p>然后再继续</p>
<pre><code>. build/envsetup.sh
</code></pre><p>初始化所有编译环境，将编译脚本加载到终端</p>
<pre><code>breakfast find7
</code></pre><p>初始化find7的编译文件</p>
<pre><code>cd ~/code/cm-11/device/oppo/find7
./extract-files.sh (需要连接设备)
</code></pre><p>上面两步是获取vendor资源。</p>
<pre><code>export USE_CCACHE=1
prebuilts/misc/linux-x86/ccache/ccache -M 50G
</code></pre><p>上面两步是加速你的编译(可不选)</p>
<pre><code>croot
brunch find7 -j32或者 brunch find7
</code></pre><p>最后编译就OK了。</p>
<p>###测试</p>
<p>包位于 out/target/product的机型文件夹里，刷人测试就ok！</p>
<p>一个个字码起来的，转载请保留原地址：<a href="http://yun-percy.github.io/android/2014/09/12/makeandroid.html" target="_blank" rel="external">http://yun-percy.github.io/android/2014/09/12/makeandroid.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android ROM大神的友情链接]]></title>
      <url>http://percychen.com/2014/09/11/2014-09-11-romerlinks/</url>
      <content type="html"><![CDATA[<p>###Ruling 爆乳</p>
<p><a href="http://www.1024team.com" target="_blank" rel="external">网址：http://www.1024team.com/</a><br><a href="http://weibo.com/rulingghost" target="_blank" rel="external">微博：http://weibo.com/rulingghost</a></p>
<p>###apktools 晴天</p>
<p><a href="http://www.apktools.com/" target="_blank" rel="external">网址：http://www.apktools.com/</a><br><a href="http://weibo.com/timesunday" target="_blank" rel="external">微博：http://weibo.com/timesunday</a></p>
<p>###Cofface</p>
<p><a href="http://www.cofface.com/" target="_blank" rel="external">网址：http://www.cofface.com/</a><br><a href="http://weibo.com/cofface" target="_blank" rel="external">微博：http://weibo.com/cofface</a></p>
<p>###大侠阿木</p>
<p><a href="http://www.daxiaamu.com" target="_blank" rel="external">网址：http://www.daxiaamu.com</a></p>
<p>###明月浩空</p>
<p><a href="http://limh.me" target="_blank" rel="external">网址：http://limh.me</a><br><a href="http://weibo.com/u/3496187780" target="_blank" rel="external">微博：http://weibo.com/u/3496187780</a></p>
<p>###杨万荣</p>
<p><a href="http://sndnvaps.github.io" target="_blank" rel="external">网址：http://sndnvaps.github.io</a><br><a href="http://weibo.com/210124187" target="_blank" rel="external">微博：http://weibo.com/210124187</a></p>
<p>###格诺</p>
<p><a href="http://iamgeno.com/" target="_blank" rel="external">网址：http://iamgeno.com/</a><br><a href="http://weibo.com/geno" target="_blank" rel="external">微博：http://weibo.com/geno</a></p>
<p>###秋叶随风</p>
<p><a href="http://www.3rdos.com" target="_blank" rel="external">网址：http://www.3rdos.com</a><br><a href="http://weibo.com/hqiwu" target="_blank" rel="external">微博：http://weibo.com/hqiwu</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[sublime_text 常用快捷键]]></title>
      <url>http://percychen.com/2014/09/11/2014-09-11-sublimetextkey/</url>
      <content type="html"><![CDATA[<table border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-yfti-tbllook:1184;mso-padding-alt:0cm 5.4pt 0cm 5.4pt"><br><tbody><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;background:white; mso-background-themecolor:background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+L</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;background:#F8eDeD;mso-background-themecolor: accent2;mso-background-themetint:25;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span style="font-family: 宋体;">选择整行</span></b><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span></b><b><span style="font-family: 宋体;">按住</span></b><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">-</span></b><b><span style="font-family: 宋体;">继续选择下行</span></b><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></b></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+KK</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">从光标处删除至行尾</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+K</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">删除整行</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+D</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">复制光标所在整行，插入在该行之前</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+J</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">合并行</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">已选择需要合并的多行时</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+KU</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">改为大写</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+KL</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">改为小写</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+D</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">选词</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">按住</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">-</span><span style="font-family: 宋体;">继续选择下个相同的字符串</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+M</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">光标移动至括号内开始或结束的位置</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+M</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">选择括号内的内容</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">按住</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">-</span><span style="font-family: 宋体;">继续选择父括号</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+/</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">注释整行</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">如已选择内容，同</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">“Ctrl+Shift+/”</span><span style="font-family: 宋体;">效果</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+/</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">注释已选择内容</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Space</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">自动完成</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(win</span><span style="font-family: 宋体;">与系统快捷键冲突，需修改</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Z</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">撤销</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Y</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">恢复撤销</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+V</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">粘贴并自动缩进</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">其它兄弟写的，实测</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">win</span><span style="font-family: 宋体;">系统自动缩进无效</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">)</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+M</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">光标跳至对应的括号</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Alt+.</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">闭合当前标签</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+A</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">选择光标位置父标签对儿</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+[</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">折叠代码</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+]</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">展开代码</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+KT</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">折叠属性</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+K0</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">展开所有</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+U</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">软撤销</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+T</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">词互换</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Enter</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">插入行后</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift<br>Enter</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">插入行前</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+K<br>Backspace</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">从光标处删除至行首</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+UP</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">与上行互换</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Ctrl+Shift+DOWN</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">与下行互换</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Shift+Tab</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">去除缩进</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">Tab</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;mso-border-alt:solid #C0504D 1.0pt; mso-border-themecolor:accent2;mso-border-left-alt:solid #C0504D .75pt; mso-border-left-themecolor:accent2;background:#DFA7A6;mso-background-themecolor: accent2;mso-background-themetint:127;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">缩进</span></p><br></td><br></tr><br><tr><br><td width="114" valign="top" style="width:85.45pt;border:none;border-top:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:white;mso-background-themecolor: background1;padding:0cm 5.4pt 0cm 5.4pt"><br><p><b><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">F9</span></b></p><br></td><br><td width="454" valign="top" style="width:340.65pt;border:solid #C0504D 1.0pt; mso-border-themecolor:accent2;border-top:none;mso-border-top-alt:solid #C0504D 1.0pt; mso-border-top-themecolor:accent2;background:#eFD3D2;mso-background-themecolor: accent2;mso-background-themetint:63;padding:0cm 5.4pt 0cm 5.4pt"><br><p><span style="font-family: 宋体;">行排序</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">(</span><span style="font-family: 宋体;">按</span><span lang="EN-US" style="font-family: Cambria, serif;" xml:lang="EN-US">a-z)</span></p><br></td><br></tr><br></tbody><br></table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[vim常用快捷键]]></title>
      <url>http://percychen.com/2014/09/11/2014-09-11-vimkey/</url>
      <content type="html"><![CDATA[<p>###一、移动光标</p>
<pre><code>h,j,k,l           上，下，左，右
ctrl-e              移动页面
ctrl-f                 上翻一页
ctrl-b                 下翻一页
ctrl-u                 上翻半页
ctrl-d                 下翻半页
w                     跳到下一个字首，按标点或单词分割
W                    跳到下一个字首，长跳，如end-of-line被认为是一个字
e                     跳到下一个字尾
E                     跳到下一个字尾，长跳
b                     跳到上一个字
B                     跳到上一个字，长跳
0                     跳至行首，不管有无缩进，就是跳到第0个字符
^                     跳至行首的第一个字符
$                    跳至行尾
gg                     跳至文首
G                   调至文尾
5gg/5G              调至第5行
gd                     跳至当前光标所在的变量的声明处
fx                     在当前行中找x字符，找到了就跳转至
;                     重复上一个f命令，而不用重复的输入fx
*                    查找光标所在处的单词，向下查找
\#                     查找光标所在处的单词，向上查找
</code></pre><p>###二、删除复制</p>
<pre><code>dd                     删除光标所在行
dw                  删除一个字(word)
d$/D                删除到行末
x                   删除当前字符
X                     删除前一个字符
yy                     复制一行
yw                     复制一个字
y$/Y                 复制到行末
p                     粘贴粘贴板的内容到当前行的下面
P                     粘贴粘贴板的内容到当前行的上面
</code></pre><p>###三、插入模式</p>
<pre><code>i                     从当前光标处进入插入模式
I                     进入插入模式，并置光标于行首
a                     追加模式，置光标于当前光标之后
A                     追加模式，置光标于行末
o                     在当前行之下新加一行，并进入插入模式
O                     在当前行之上新加一行，并进入插入模式
Esc                 退出插入模式
</code></pre><p>###四、编辑</p>
<pre><code>J                     将下一行和当前行连接为一行
cc                    删除当前行并进入编辑模式
cw                     删除当前字，并进入编辑模式
c$                     擦除从当前位置至行末的内容，并进入编辑模式
s                     删除当前字符并进入编辑模式
S                     删除光标所在行并进入编辑模式
xp                     交换当前字符和下一个字符
u                     撤销
ctrl+r                 重做
~                     切换大小写，当前字符
\&gt;&gt;                 将当前行右移一个单位
\&lt;&lt;                  将当前行左移一个单位(一个tab符)
\==                    自动缩进当前行
</code></pre><p>###五、查找替换</p>
<pre><code>/pattern             向后搜索字符串pattern
?pattern             向前搜索字符串pattern
&quot;\c&quot;                 忽略大小写
&quot;\C&quot;                 大小写敏感
n                     下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)
N                     上一个匹配(同上)
:%s/old/new/g          搜索整个文件，将所有的old替换为new
:%s/old/new/gc         搜索整个文件，将所有的old替换为new，每次都要你确认是否替换
</code></pre><p>###六、退出编辑器</p>
<pre><code>:w                    将缓冲区写入文件，即保存修改
:wq                 保存修改并退出
:x                     保存修改并退出
:q                     退出，如果对缓冲区进行过修改，则会提示
:q!                 强制退出，放弃修改
</code></pre><p>###七、多文件编辑</p>
<pre><code>vim file1..         同时打开多个文件
:args                   显示当前编辑文件
:next                   切换到下个文件
:prev                   切换到前个文件
:next！             不保存当前编辑文件并切换到下个文件
:prev！             不保存当前编辑文件并切换到上个文件
:wnext              保存当前编辑文件并切换到下个文件
:wprev              保存当前编辑文件并切换到上个文件
:first                  定位首文件
:last                   定位尾文件
ctrl+^                  快速在最近打开的两个文件间切换
:split[sp]          把当前文件水平分割
:split file             把当前窗口水平分割, file
:vsplit[vsp] file     当前窗口垂直分割, file
:new file            同split file
:close               关闭当前窗口
:only                只显示当前窗口, 关闭所有其他的窗口
:all                     打开所有的窗口
:vertical all        打开所有的窗口, 垂直打开
:qall                 对所有窗口执行：q操作
：qall!                对所有窗口执行：q!操作
:wall                 对所有窗口执行：w操作
:wqall                 对所有窗口执行：wq操作
ctrl-w h             跳转到左边的窗口
ctrl-w j             跳转到下面的窗口
ctrl-w k             跳转到上面的窗口
ctrl-w l             跳转到右边的窗口
ctrl-w t             跳转到最顶上的窗口
ctrl-w b             跳转到最底下的窗口
</code></pre><p>###八、多标签编辑</p>
<pre><code>:tabedit file         在新标签中打开文件file
:tab split file         在新标签中打开文件file
:tabp                 切换到前一个标签
:tabn                 切换到后一个标签
:tabc                  关闭当前标签
:tabo                  关闭其他标签
gt                        到下一个tab
gT                        到上一个tab
0gt                   跳到第一个tab
5gt                   跳到第五个tab
</code></pre><p>###九、执行shell命令</p>
<pre><code>1、在命令模式下输入&quot;:sh&quot;，可以运行相当于在字符模式下，到输入结束想回到VIM编辑器中用exit，ctrl+D返回VIM编辑器
2、可以&quot;!command&quot;，运行结束后自动回到VIM编辑器中
3、用“Ctrl+Z“回到shell，用fg返回编辑
4、:!make -&gt; 直接在当前目录下运行make指令
</code></pre><p>###十、VIM启动项</p>
<pre><code>-o[n] 以水平分屏的方式打开多个文件
-O[n] 以垂直分屏的方式打开多个文件
</code></pre><p>###十一、自动排版</p>
<pre><code>在粘贴了一些代码之后，vim变得比较乱，只要执行gg=G就能搞定
</code></pre><p>###十二、如何在vim中编译程序</p>
<pre><code>在vim中可以完成make,而且可以将编译的结果也显示在vim里，先执行 :copen 命令，将结果输出的窗口打开，然后执行 :make
编译后的结果就显示在了copen打开的小窗口里了，而且用鼠标双击错误信息，就会跳转到发生错误的行。
</code></pre><p>###十三、buffer操作</p>
<pre><code>1、buffer状态
- （非活动的缓冲区）
a （当前被激活缓冲区）
h （隐藏的缓冲区）
% （当前的缓冲区）
# （交换缓冲区）
= （只读缓冲区）
+ （已经更改的缓冲区）
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一些常用的shell 语句片段]]></title>
      <url>http://percychen.com/2014/09/11/2014-09-11-shellcode/</url>
      <content type="html"><![CDATA[<h2 id="失败重复执行"><a href="#失败重复执行" class="headerlink" title="失败重复执行"></a>失败重复执行</h2><p>####语法</p>
<pre><code>while [ $? = 1 ]; do
#失败的命令
done
</code></pre><p>例子： 自动同步脚本</p>
<pre><code>repo sync
while [ $? = 1 ]; do
    repo sync
done
</code></pre><h2 id="shell传值问题"><a href="#shell传值问题" class="headerlink" title="shell传值问题"></a>shell传值问题</h2><blockquote>
<p>$1 ~ $9表示依次传进去的9个值，如果传了10个以上的值，在引用的时候请务必加上{}号。例如${10}<br>$0 表示程序名 ，为了不读出路径可以加上 basename的命令例如：</p>
</blockquote>
<pre><code>filename=`basename $0`
</code></pre><blockquote>
<p>传入参数计数，使用$#来统计传入多少参数，例如，传入2个参数使用加法，三个参数使用乘法，其他报错</p>
</blockquote>
<pre><code>if [  $# -eq 2 ]
then
    answer=$[ $1+$2 ]
    echo $answer
elif [[ $# -eq 3 ]]; then
    answer=$[ $1*$2*$3 ]
    echo $answer
else echo please input 2 or 3 para
fi
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android.mk 变量讲解]]></title>
      <url>http://percychen.com/2014/09/11/2014-09-11-makefilecode/</url>
      <content type="html"><![CDATA[<p>####今天逛 @杨万荣 网站看到的。访问太慢，就直接clone文章，重新用markdown排了版。<br><a href="http://sndnvaps.github.io/" target="_blank" rel="external">原文地址:http://sndnvaps.github.io/</a></p>
<p>这些变量，你会经常在Android.mk文件中见到，下面以字表表的顺序列出来，并进行一一讲解其作用。<br></p>
<ul>
<li>LOCAL_</li>
</ul>
<p>这个变量会在每个模块(module,也可以解释为程序). 当出现 include $(CLEAR_VARS)变量的时候，它们当初设置的变量，会清空。在你使用的大部分变量中，它存在于模块中的定义都会像 LOCAL_variables(variables 为变量的名字)<br></p>
<ul>
<li>PRIVATE_</li>
</ul>
<p>这个是定义私有的变量。 只有有特别的模块中，这个变量才有起效。<br><br>HOST<em> 和 TARGET</em>    定义编译生成的文件是运行在什么平台的。<br><br>不要随便使用 HOST<em> 或者是 TARGET</em> 变量在你的makefile(对应的文件是Android.mk文件）文件中。<br></p>
<ul>
<li>BUILD_ 和 CLEAR_VARS</li>
</ul>
<p>变量 ， 它们是已经预先定义的模块makefile文件。<br>下面提供一个简单的例子: CLEAR_VARS 和 BUILD_HOST_PACKAGE</p>
<h2 id="—————————————-正式讲解———————–"><a href="#—————————————-正式讲解———————–" class="headerlink" title="—————————————-正式讲解———————–"></a>—————————————-正式讲解———————–</h2><ul>
<li>LOCAL_ARM_MODE</li>
</ul>
<p>ARM使用的模式</p>
<ul>
<li>LOCAL_ASSERT_FILES</li>
</ul>
<p>Android.mk中定义的模块需要包含 ‘include $(BUILD_PACKAGE)’ ，一般形式:</p>
<pre><code>LOCAL_ASSET_FILES += $(call find-subdir-assets)
</code></pre><ul>
<li>LOCAL_C_INCLUDES</li>
</ul>
<p>当编译C/C++文件的时候，这个变量指定的路径是用于编译器查找头文件的。例子:</p>
<pre><code>LOCAL_C_INCLUDES += extlibs/zlib-1.2.3
</code></pre><ul>
<li>LOCAL_CC</li>
</ul>
<p>如果你想使用第三方的C编译器，编译当前的程    序。就用LOCAL_CC设置第三方编译的位置</p>
<ul>
<li>LOCAL_CERTIFICATE</li>
</ul>
<p>签名用的证书的名字 ，也可以用于指明特别的签名证书(例如自己创建的证书)</p>
<ul>
<li>LOCAL_CFLAGS</li>
</ul>
<p>如果需要给C/C++编译传递自己的参数，那么你就需要这个变量了。例子:</p>
<pre><code>LOCAL_CFLAGS += -DLIBBUILTS_NATIVE=1
</code></pre><ul>
<li>LOCAL_COPY_HEADERS</li>
</ul>
<p>用于复制头文件，需要和LOCAL_COPY_HEADRES_TO 变量一起使用</p>
<ul>
<li>LOCAL_COPY_HEADERS_TO</li>
</ul>
<p>需要和LOCAL_COPY_HEADERS 变量一起使用，用于复制头文件</p>
<ul>
<li>LOCAL_CPP_EXTENSION</li>
</ul>
<p>如果你的C++文件的后序不是cpp,而是其它的，你就需要用这个变量定义一下了。例子:</p>
<pre><code>LOCAL_CPP_EXTENSION := .cc
</code></pre><ul>
<li>LOCAL_CPPFLAGS</li>
</ul>
<p>这个用于传递编译指令到唯一的C++编译器中。例子:</p>
<pre><code>LOCAL_CPPFLAGS += -ffriend-injection
</code></pre><ul>
<li>LOCAL_CPPFLAGS</li>
</ul>
<p>在编译器接收的指令中，迟于LOCAL_CFLAGS ,所以你可以用它来覆盖LOCAL_CFLAGS定义的指令</p>
<ul>
<li>LOCAL_CXX</li>
</ul>
<p>如果你想用第三方的C++编译器，编译当前的程序或者是模块，你可以使用这个变量，和变量LOCAL_CC的使用方法一样。</p>
<ul>
<li>LOCAL_FORCE_STATIC_EXECUTABLE</li>
</ul>
<p>如果你编译的程序，需要被链接成静态文件，不包含动态链接，作如下的设置:</p>
<pre><code>LOCAL_FORCE_STATIC_EXECUTABLE := true 。
</code></pre><p>这样编译出来的程序可以在没有动态库支持的根目录下面运行。</p>
<ul>
<li>LOCAL_GENERATED_SOURCES</li>
</ul>
<p>后面的定义的变量，会被自动转换成你所需要的文件的格式</p>
<ul>
<li>LOCAL_JAR_MANIFEST</li>
</ul>
<p>定义jar文件需要用到的manifest文件</p>
<ul>
<li>LOCAL_JAVA_LIBRARIES</li>
</ul>
<p>当编译生成java程序或者是库文件的时候，LOCAL_JAVA_LIBRARIES, 定义的是要被编译成程序或者是库的文件。下面来一个简单的例子，需要链接的库文件为core 和 framework.</p>
<pre><code>LOCAL_JAVA_LIBRARIES := core framework
</code></pre><p>注意: 在Android.mk的模块中设置 LOCAL_JAVA_LIBRARIE ，一般不需要(或者不允许)当编译一个APK 程序，模块中包含了 “include $(BUILD_PACKAGE)”。 那么这些必要的核心文件会自动包含进去。</p>
<ul>
<li>LOCAL_LDFLAGS</li>
</ul>
<p>你可以往链接器(linker)传递一些自己的指令，通过设置 “LOCAL_LDFLAGS”。不过要时刻记住，传递到链接器的参数是非常重要的，必须要事件进行一些测试。</p>
<ul>
<li>LOCAL_LDLIBS</li>
</ul>
<p>用于指定一些第三方的动态库或者是静态库文件，需要用-lxxx格式，这些文件不在你的编译计划中。例子:</p>
<pre><code>LOCAL_LDLIBS += -lcurses -lpthread
LOCAL_LDLIBS += -Wl, -z,origin
</code></pre><ul>
<li>LOCAL_MODULE</li>
</ul>
<p>“LOCAL_MODULE” 是一个你定义在Android.mk文件中的一个程序的名字。例如，库文件”libkjs”, 相应的对应为: LOCAL_MODULE 是 “libkjs”(编译的平台会自动给它加上后序，例如 .so, .dylib, .dll)。对于 APK程序，将会使用LOCAL_PACKAGE_NAME 而不是 LOCAL_MODULE</p>
<ul>
<li>LOCAL_MODULE_PATH</li>
</ul>
<p>告诉编译平台，如何把编译出来的程序或者是模块放到特定的位置。如果你需要定义这个变量，确保你同时定义了”LOCAL_UNSTRIPPED_PATH” 如果你编译生成的文件是可执行文件或者是动态库，这样就可以确保没有去符号(unstripped)链接的二进制文件有位置可去了。如果你没有进行定义，就有可能发生错误————–</p>
<ul>
<li>LOCAL_MODULE_TAGS</li>
</ul>
<p>用于指定生成的程序是什么类型的。有以下的几个变量：</p>
<pre><code>user: 将会使用 user/userdebug模式去编译程序
eng:  将会使用 eng模式去编译程序
tests: 将会使用testing模式编译程序
optional: 不建议使用这个模式
</code></pre><ul>
<li>LOCAL_PACKAGE_NAME</li>
</ul>
<p>用于设置APK程序的名字，例如: Dialer, Contacts</p>
<ul>
<li>LOCAL_POST_PROCESS_COMMAND</li>
</ul>
<p>用于生成本机的可执行文件，当程序被编译好后，你可以给它传递一条命令。下面是例子:</p>
<pre><code>module := $(HOST_OUT_EXECUTABLES)/$(LOCAL_MODULE)
LOCAL_POST_PROCESS_COMMAND := /Developer/Tools/Rez -d __DARWIN__ -t APPL\
-d __WXMAC__ -o $(module) Carbon.r
</code></pre><ul>
<li>LOCAL_PREBUILT_EXECUTABLES</li>
</ul>
<p>当Android.mk文件中包含 $(BUILD_PREBUILT) 或者是 $(BUILD_HOST_PREBUILT), 你可以使用这个变量去定义，你要复制到哪个目录。这样它就可以自动被复制到特定的目录了。</p>
<ul>
<li>LOCAL_PREBUILT_LIBS</li>
</ul>
<p>解释和LOCAL_PREBUILT_EXECUTABLES 一样。</p>
<ul>
<li>LOCAL_REQUIRED_MODULES</li>
</ul>
<p>不知道怎样解释，直接上英文:</p>
<pre><code>Set LOCAL_REQUIRED_MODULES to any number of whitespace-separated module names, like &quot;libblah&quot; or &quot;Email&quot;. If this module is installed, all of the modules that it requires will be installed as well. This can be used to, e.g., ensure that necessary shared libraries or providers are installed when a given app is installed.
</code></pre><ul>
<li>LOCAL_SDK_VERSION</li>
</ul>
<p>设置本地的sdk版本号</p>
<ul>
<li>LOCAL_SHARED_LIBRARIES</li>
</ul>
<p>定义的内容为要链接的动态库的名字，不需要后序。例子:</p>
<pre><code>LOCAL_SHARED_LIBRARIES := \
    libutils \
    libui \
    libaudio \
    libexpat \
    libsgl
</code></pre><ul>
<li>LOCAL_SRC_FILES</li>
</ul>
<p>编译系统会查找 定义在LOCAL_SRC_FILES后面的值，去查找需要编译的源代码，例如 <em>.c, </em>.cpp, <em>.y, </em>.l, *.java。对于lex 和 yacc文件，需要定义一下传递的指令。如果是C/cpp，它会自动处理。如果包含的文件在二级目录下面，也可以直接进行定义。例子:</p>
<pre><code>LOCAL_SRC_FILES := \
file1.cpp \
dir/file2.cpp
</code></pre><ul>
<li>LOCAL_STATIC_LIBRARIES</li>
</ul>
<p>解释和LOCAL_SHARED_LIBRARIES大致一样。不过这次要链接的是静态库文件。</p>
<ul>
<li>LOCAL_UNSTRIPPED_PATH</li>
</ul>
<p>定义放置没有去符号链接的文件的位置，如果你同时定义了LOCAL_MODULE_PATH ,而编译的程序是可执行程序或者是动态库文件。那么出现错误是在所难免的。</p>
<ul>
<li>LOCAL_WHOLE_STATIC_LIBRARIES</li>
</ul>
<p>用于把静态库链接到程序中，而不允许链接器去掉其中没有用的符号链接。如果你想把静态库编译进动态库中，而在静态库中已经包含了动态库中的符号链接，这个时候就特别有用了。<br>例子:</p>
<pre><code>LOCAL_WHOLE_STATIC_LIBRARIES := \libsqlite3_android
</code></pre><ul>
<li>LOCAL_YACCFLAGS</li>
</ul>
<p>用于把编译指令传递给yacc模块。例子:</p>
<pre><code>LOCAL_YACCFLAGS := -p kjsyy
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[专业设计师最常用的中文字体]]></title>
      <url>http://percychen.com/2014/09/10/2014-09-10-somefonts/</url>
      <content type="html"><![CDATA[<p>原文地址：<a href="http://www.80ue.com/chinese-fonts-for-designer/" target="_blank" rel="external">http://www.80ue.com/chinese-fonts-for-designer/</a></p>
<div class="post" id="post-1086"><br><br><br>        <div class="entry"><br>                以下这些中文字体是我根据一些知名的设计师推荐及网络流行程度收集的，好不好使请自己看。<br><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_56.png" alt="80ue_fonts_cn_56.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_46.png" alt="80ue_fonts_cn_46.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_66.png" alt="80ue_fonts_cn_66.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_62.png" alt="80ue_fonts_cn_62.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_08.png" alt="80ue_fonts_cn_08.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_34.png" alt="80ue_fonts_cn_34.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_16.png" alt="80ue_fonts_cn_16.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_87.png" alt="80ue_fonts_cn_87.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_24.png" alt="80ue_fonts_cn_24.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_32.png" alt="80ue_fonts_cn_32.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_83.png" alt="80ue_fonts_cn_83.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_64.png" alt="80ue_fonts_cn_64.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_30.png" alt="80ue_fonts_cn_30.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_20.png" alt="80ue_fonts_cn_20.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_26.png" alt="80ue_fonts_cn_26.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_88.png" alt="80ue_fonts_cn_88.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_80.png" alt="80ue_fonts_cn_80.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_38.png" alt="80ue_fonts_cn_38.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_89.png" alt="80ue_fonts_cn_89.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_18.png" alt="80ue_fonts_cn_18.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_76.png" alt="80ue_fonts_cn_76.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_70.png" alt="80ue_fonts_cn_70.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_40.png" alt="80ue_fonts_cn_40.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_10.png" alt="80ue_fonts_cn_10.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_42.png" alt="80ue_fonts_cn_42.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_72.png" alt="80ue_fonts_cn_72.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_14.png" alt="80ue_fonts_cn_14.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_52.png" alt="80ue_fonts_cn_52.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_50.png" alt="80ue_fonts_cn_50.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_03.png" alt="80ue_fonts_cn_03.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_54.png" alt="80ue_fonts_cn_54.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_44.png" alt="80ue_fonts_cn_44.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_84.png" alt="80ue_fonts_cn_84.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_58.png" alt="80ue_fonts_cn_58.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_12.png" alt="80ue_fonts_cn_12.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_68.png" alt="80ue_fonts_cn_68.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_60.png" alt="80ue_fonts_cn_60.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_06.png" alt="80ue_fonts_cn_06.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_36.png" alt="80ue_fonts_cn_36.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_86.png" alt="80ue_fonts_cn_86.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_48.png" alt="80ue_fonts_cn_48.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_28.png" alt="80ue_fonts_cn_28.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_85.png" alt="80ue_fonts_cn_85.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_78.png" alt="80ue_fonts_cn_78.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_82.png" alt="80ue_fonts_cn_82.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_22.png" alt="80ue_fonts_cn_22.png"></p><p><img src="http://img.80ue.com/fonts/cn/80ue_fonts_cn_74.png" alt="80ue_fonts_cn_74.png"></p><br><br>                            </div>

<pre><code>                        &lt;div class=&quot;dlBox&quot;&gt;
            &lt;h3&gt;下载专业设计师最常用的中文字体:&lt;/h3&gt;
            &lt;ul&gt;
                                                            &lt;li&gt;
                    &lt;a href=&quot;http://www.80ue.com/download/1107&quot;&gt;常用的中文字体下载&lt;/a&gt;
                    &lt;span&gt;133.2M&lt;/span&gt;
                &lt;/li&gt;
                                &lt;/ul&gt;
                                                &lt;/div&gt;


&lt;/div&gt;
</code></pre></div>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[便签的发布！]]></title>
      <url>http://percychen.com/2014/09/10/2014-09-10-notes/</url>
      <content type="html"><![CDATA[<h1 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h1><p>####这个apk基于MIUI 的便签，感谢他们无偿贡献的代码！</p>
<p>####这些代码大部分是miui的源码，本人稍微做了布局修改，精简了代码，并且修改风格为实时磨砂透明背景</p>
<p>更新说明</p>
<blockquote>
<p>2014年9月10日增加长微博功能</p>
</blockquote>
<h2 id="便签源代码地址："><a href="#便签源代码地址：" class="headerlink" title="便签源代码地址："></a>便签源代码地址：</h2><p><a href="https://github.com/YunLiCode/packages_notes" target="_blank" rel="external">https://github.com/YunLiCode/packages_notes</a></p>
<h2 id="截图预览"><a href="#截图预览" class="headerlink" title="截图预览:"></a>截图预览:</h2><p><img src="https://raw.githubusercontent.com/YunLiCode/packages_notes/master/prevew1.png" alt="github" title="日记列表"><br><img src="https://raw.githubusercontent.com/YunLiCode/packages_notes/master/preview2.png" alt="github" title="编辑日记"><br><img src="https://raw.githubusercontent.com/YunLiCode/packages_notes/master/preview.png" alt="github" title="长微博列表"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[转载：4 款漂亮的 Linux 图标主题]]></title>
      <url>http://percychen.com/2014/09/08/2014-09-08-linuxtheme/</url>
      <content type="html"><![CDATA[<td id="article_content"><p>来自 OmgUbuntu 的四款漂亮的Linux 图标主题，让你的桌面不再单调。Ubuntu 默认图标主题在近5年里没有太大的改变，除了新增一些奇怪的新图标。如果你厌倦了默认的官方图标主题，下面去看看一些华丽的替代品。</p><br><h3>Captiva</h3><br><p><img src="http://img.linux.net.cn/data/attachment/album/201409/07/161059cyyp8zdvxs5msrlv.jpg" alt=""></p><br><p>Captiva 是一款相对较新的图标主题，回避了柔和、扁平，拥有圆润的外观。微妙的阴影和色彩丰富的调色板增添魅力。</p><br><p>Ubuntu 14.04 用户可通过PPA安装：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">sudo add</span><span class="pun">-</span><span class="pln">apt</span><span class="pun">-</span><span class="pln">repository ppa</span><span class="pun">:</span><span class="pln">captiva</span><span class="pun">/</span><span class="pln">ppa</span></li><li class="L1"><span class="pln">sudo apt</span><span class="pun">-</span><span class="kwd">get</span><span class="pln"> update</span></li><li class="L2"><span class="pln">sudo apt</span><span class="pun">-</span><span class="kwd">get</span><span class="pln"> install captiva</span><span class="pun">-</span><span class="pln">icon</span><span class="pun">-</span><span class="pln">theme</span></li></ol></pre><br><p>然后使用 Ubuntu tweak tool 调节。</p><br><p>其他Linux系统下载图标主题包安装：</p><br><p><a href="http://bokehlicia.deviantart.com/art/Captiva-Icon-Theme-479302805" target="_blank">下载 Captiva 图标主题</a></p><br><h3>Square Beam</h3><br><p><img src="http://img.linux.net.cn/data/attachment/album/201409/07/161119opg5l9sgp3pj4isg.jpg" alt=""></p><br><p>Square Beam 提供了一个更壮观的视觉声明，颜色鲜明。声称有超过 30000 个不同的图标。</p><br><p><a href="http://gnome-look.org/content/show.php/Square-Beam?content=165094" target="_blank">下载 Square Beam 图标主题</a></p><br><h3>Moka &amp; Faba</h3><br><p><img src="http://img.linux.net.cn/data/attachment/album/201409/07/161224b3j3hl3hs93h0sis.jpg" alt=""></p><br><p>关于 Moka 主题不许多说了，IMCN 以前有过介绍，这是一款很漂亮的主题。用轻淡柔和的颜色，边缘柔和简单图标的艺术品，Moka 是一款真正出色的和全面的应用程序图标。Faba 是一款 Moka 姐妹主题，继承 Moka 所有的系统图标、文件夹、面板图标等综合作用，闪亮你的眼睛。<br>如何在 Ubuntu 上安装可访问项目的官方网站，下面的链接。</p><br><p><a href="http://mokaproject.com/moka-icon-theme/download/ubuntu/" target="_blank">Moka &amp; Faba 主题下载</a></p><br><h3>Compass</h3><br><p><a href="http://imcn.me/wp-content/uploads/2014/09/compass.jpg" target="_blank" rel="external"><img class="aligncenter size-medium wp-image-21835" src="http://imcn.me/wp-content/uploads/2014/09/compass-570x282.jpg" alt="compass" width="570" height="282"></a></p><br><p>Compass 带扁平化的设计，与其他主题视觉上有所不同。</p><br><p>可以下载手动安装，通过gnome-look下载（链接如下）或通过nitrux艺术品PPA：</p><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">sudo add</span><span class="pun">-</span><span class="pln">apt</span><span class="pun">-</span><span class="pln">repository ppa</span><span class="pun">:</span><span class="pln">nitrux</span><span class="pun">/</span><span class="pln">nitrux</span><span class="pun">-</span><span class="pln">artwork</span></li><li class="L1"><span class="pln">sudo apt</span><span class="pun">-</span><span class="kwd">get</span><span class="pln"> update</span></li><li class="L2"><span class="pln">sudo apt</span><span class="pun">-</span><span class="kwd">get</span><span class="pln"> install compass</span><span class="pun">-</span><span class="pln">icon</span><span class="pun">-</span><span class="pln">theme</span></li></ol></pre><br><p><a href="http://gnome-look.org/content/show.php/Compass?content=160629" target="_blank">Compass 主题下载</a></p><br><br><div class="copyright"><br>    <div>来源： IMCN</div>    <div><br>        原文： <a href="http://imcn.me/html/y2014/21831.html" target="_blank">http://imcn.me/html/y2014/21831.html</a>&nbsp;&nbsp;&nbsp;&nbsp;            </div><br><br>    <div><br>                    </div><br><br>                    <div><span style="color:red;">转载本文请遵循原文要求</span></div><br></div><br></td>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[win7下使用easybcd硬盘安装linux+分区建议]]></title>
      <url>http://percychen.com/2014/09/05/2014-09-05-win7installlinux/</url>
      <content type="html"><![CDATA[<p>#####Mint是Ubuntu的衍生版，所以硬盘安装Mint和Ubuntu的步骤基本上是一致的，本文的方法，我已经在ubuntu10.04和和Mint 14以上全部试用通过。引导的方法很多，有用wubi，也有用变色龙的，这里用easybcd安装。</p>
<p>#####安装前请先用磁盘分区软件对硬盘分区，如果你是要做android开发，请先分三个区：</p>
<ul>
<li>一个分区10G的样子（土豪请随意），格式化为ext4或者ext3，用来挂载 / 目录。</li>
<li>一个分区至少100G（我自己分区分的800G，代码太多），格式化ext4 或者ext3，用来挂载/home目录。</li>
<li>另外一个分区6G以上内存可以不需要，建议大小4G，格式化swap。</li>
</ul>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><p>在Windows7中<a href="http://ftp-idc.pconline.com.cn/5b7cb8d32b9e31df505f20bc2f8f087c/pub/download/201010/EasyBCD_2.2.exe" target="_blank" rel="external">点击下载</a>并安装EasyBCD.</p>
</li>
<li><p>将Ubuntu或者Mint的镜像文件复制到<strong><span style="COLOR: #ff0000">C盘根目录</span></strong>，用压缩软件或者虚拟光驱打开，再打开casper目录，把<strong><span style="COLOR: #ff0000">initrd.lz、 vmlinuz</span></strong>二个文件解压到C盘根目录下；把.disk文件夹也解压到C盘</p><p></p>
</li>
<li><p>运行EasyBCD进入操作窗口后，点Add New Entry，再点右上角的NeoGrub，再点Install：  (如下图)<br><img src="http://up.2cto.com/2012/0107/20120107044957237.jpg" alt="github" title="Easy配制图"></p>
</li>
<li><p>然后点击Configure，在弹出的窗口中输入如下内容：</p>
<pre><code>root
kernel /vmlinuz iso-scan/filename=/(ubuntu/mint映像文件名).iso boot=casper splash
initrd /initrd.lz
boot&lt;/p&gt;
</code></pre></li>
</ol>
<ol>
<li>电脑重启后，就会发现启动菜单会多了一项NeoGrub，选择后会进入Ubuntu/Mint的光盘系统，就是传说的是livecd模式，点击桌面上的图标进行相应的安装即可。</li>
</ol>
<p>6.创建分区的时候建议选择 专家模式，也就是高级模式。</p>
<ul>
<li>将10G的分区格式化为ext4 并且挂载点为/</li>
<li>将100G（就是最大的那个分区），挂载点为/home 如果之前是ext3文件系统，建议格式化ext4。如果已经是ext4,那就随意咯。一般来说，这里面用来存代码的话，不要格式化，避免代码丢失。</li>
<li>将4G的swap分区挂载点设为 swap ，格不格式化无所谓。</li>
</ul>
<p>7.安装完毕后重启生效。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Remarkable：Linux平台下一个新的MarkDown编辑器]]></title>
      <url>http://percychen.com/2014/09/04/2014-09-04-markdownedit/</url>
      <content type="html"><![CDATA[<td id="article_content"><p><img src="http://img.linux.net.cn/data/attachment/album/201409/02/212700fiihhhy877i7ny1h.png" alt=""></p><br><p><a href="http://remarkableapp.net/" target="_blank" rel="external">Remarkable</a>是一个全新，免费，功能齐全的Linux发行版Markdown编辑器。它拥有许多特性，比如：在线预览，这让你的Markdown编辑变得更加容易。它是一个轻量级的编辑器，而且它还有一个简洁的用户界面(UI)。</p><br><p>下面是Remarkable的主要特性：</p><br><ul><br><li>实时预览</li><br><li>支持Github Markdown 语法</li><br><li>支持导出为PDF和HTML</li><br><li>自定义CSS</li><br><li>语法高亮</li><br><td id="article_content"><p><img src="http://img.linux.net.cn/data/attachment/album/201409/02/212700fiihhhy877i7ny1h.png" alt=""></p><br><p><a href="http://remarkableapp.net/" target="_blank" rel="external">Remarkable</a>是一个全新，免费，功能齐全的Linux发行版Markdown编辑器。它拥有许多特性，比如：在线预览，这让你的Markdown编辑变得更加容易。它是一个轻量级的编辑器，而且它还有一个简洁的用户界面(UI)。</p><br><p>下面是Remarkable的主要特性：</p><br><ul><br><li>实时预览</li><br><li>支持Github Markdown 语法</li><br><li>支持导出为PDF和HTML</li><br><li>自定义CSS</li><br><li>语法高亮</li><br><li>高度可定制</li><br><li><br><p class="p1">字数实时计数</p><br></li><br><li>键盘快捷键</li><br></ul><br><p><img src="http://img.linux.net.cn/data/attachment/album/201409/02/212702wus2fwm77y6uuu97.png" alt="" width="700"></p><br><p>你可以观看<a href="https://www.youtube.com/watch?v=UpjAIcXti9s" target="_blank" rel="external">这部YouTube视频</a>（请自备梯子:-]）了解Linux下的Remakable。</p><br><h3 id="toc_1">安装</h3><br><p>根据不同的Linux发行版本，Remarkable拥有许多可供使用的安装源，下面是不同Linux发行版以及它们对应的安装文件</p><br><h4 id="toc_2">Ubuntu / Linux Mint:</h4><br><ul><br><li><a href="http://remarkableapp.net/files/remarkable_0.965_all.deb" target="_blank" rel="external">Dowbnload .DEB</a></li><br></ul><br><h4 id="toc_3">Fedora:</h4><br><ul><br><li><a href="http://remarkableapp.net/files/remarkable-0.965.rpm" target="_blank" rel="external">Download .RPM</a></li><br></ul><br><h4 id="toc_4">Arch Linux (AUR):</h4><br><pre class="prettyprint linenums prettyprinted" style=""><ol class="linenums"><li class="L0"><span class="pln">sudo yaourt </span><span class="pun">-</span><span class="pln">S remarkable</span></li></ol></pre><br><p>喜欢吗？</p><br><hr><br><p>via: <a href="http://www.unixmen.com/remarkable-new-markdown-editor-linux/" target="_blank" rel="external">http://www.unixmen.com/remarkable-new-markdown-editor-linux/</a></p><br><p>作者：<a href="http://www.unixmen.com/author/seth/" target="_blank" rel="external">Enock Seth Nyamador</a> 译者：<a href="https://github.com/su-kaiyao" target="_blank" rel="external">su-kaiyao</a> 校对：<a href="https://github.com/carolinewuyan" target="_blank" rel="external">Caroline</a></p><br><p>本文由 <a href="https://github.com/LCTT/TranslateProject" target="_blank" rel="external">LCTT</a> 原创翻译，<a href="http://linux.cn/" target="_blank" rel="external">Linux中国</a> 荣誉推出</p><br><br><div class="copyright"><br>    <div>来源： unixmen</div>    <div><br>        原文： <a href="http://www.unixmen.com/remarkable-new-markdown-editor-linux/" target="_blank">http://www.unixmen.com/remarkable-new-markdown-editor-linux/</a>&nbsp;&nbsp;&nbsp;&nbsp;        作者： Enock Seth Nyamador    </div><br><br>    <div><br>                译者： su-kaiyao    </div><br><br>                    <div>本文是原创投递或翻译投递，<href="http: linux.cn="" "="">Linux中国首发地址：<a href="http://linux.cn/article-3741-1.html" target="_blank" rel="external">http://linux.cn/article-3741-1.html</a>&lt;/href=”http:&gt;</href="http:></div><div><span style="color:red;">欢迎转载，敬请在正文中标注并保留原文/译文链接和作者/译者等信息</span></div><br><br></div><br></td>
</ul></td>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[颜色代码表]]></title>
      <url>http://percychen.com/2014/09/03/2014-09-03-color/</url>
      <content type="html"><![CDATA[
<div style="width:800px;overflow: hidden;"><p><font color="#0080ff">颜色代码表：以下样色显示您可能觉得不够精确，这和电脑显示器有直接关系。您可查看颜色代码，绝对正确，绝无重复。</font></p><font color="#ff8000">
<center>
<table height="478" cellspacing="1" width="100%" border="0">
<tbody>
<tr>
<td width="112%" colspan="10" height="19">
<p align="center"><font color="#ff8000">红色和粉红色，以及它们的16进制代码。</font></p>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#990033" height="25"><font color="#ffffff">#990033</font>
</td><td align="middle" width="11%" bgcolor="#cc6699" height="25"><font color="#ffffff">#CC6699</font>
</td><td align="middle" width="11%" bgcolor="#ff6699" height="25"><font color="#ffffff">#FF6699</font>
</td><td align="middle" width="11%" bgcolor="#ff3366" height="25"><font color="#ffffff">#FF3366</font>
</td><td align="middle" width="11%" bgcolor="#993366" height="25"><font color="#ffffff">#993366</font>
</td><td align="middle" width="11%" bgcolor="#cc0066" height="25"><font color="#ffffff">#CC0066</font>
</td><td align="middle" width="11%" bgcolor="#cc0033" height="25"><font color="#ffffff">#CC0033</font>
</td><td align="middle" width="11%" bgcolor="#ff0066" height="25"><font color="#ffffff">#FF0066</font>
</td><td align="middle" width="12%" bgcolor="#ff0033" height="25"><font color="#ffffff">#FF0033</font>
</td><td valign="center" align="middle" width="12%" bgcolor="#cc3399" height="25"><font color="#ffffff">..#CC3399..</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ff3399" height="25"><font color="#ffffff">#FF3399</font>
</td><td align="middle" width="11%" bgcolor="#ff9999" height="25"><font color="#ffffff">#FF9999</font>
</td><td align="middle" width="11%" bgcolor="#ff99cc" height="25"><font color="#ffffff">#FF99CC</font>
</td><td align="middle" width="11%" bgcolor="#ff0099" height="25"><font color="#ffffff">#FF0099</font>
</td><td align="middle" width="11%" bgcolor="#cc3366" height="25"><font color="#ffffff">#CC3366</font>
</td><td align="middle" width="11%" bgcolor="#ff66cc" height="25"><font color="#ffffff">#FF66CC</font>
</td><td align="middle" width="11%" bgcolor="#ff33cc" height="25"><font color="#ffffff">#FF33CC</font>
</td><td align="middle" width="11%" bgcolor="#ffccff" height="25"><font color="#ffffff">#FFCCFF</font>
</td><td align="middle" width="12%" bgcolor="#ff99ff" height="25"><font color="#ffffff">#FF99FF</font>
</td><td align="middle" width="12%" bgcolor="#ff00cc" height="25"><font color="#ffffff">#FF00CC</font>
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="19">
<p align="center"><font color="#ff8000">紫红色，以及它们的16进制代码。</font></p>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ff66ff" height="19"><font color="#ffffff">#FF66FF</font>
</td><td align="middle" width="11%" bgcolor="#cc33cc" height="19"><font color="#ffffff">#CC33CC</font>
</td><td align="middle" width="11%" bgcolor="#cc00ff" height="19"><font color="#ffffff">#CC00FF</font>
</td><td align="middle" width="11%" bgcolor="#ff33ff" height="19"><font color="#ffffff">#FF33FF</font>
</td><td align="middle" width="11%" bgcolor="#cc99ff" height="19"><font color="#ffffff">#CC99FF</font>
</td><td align="middle" width="11%" bgcolor="#9900cc" height="19"><font color="#ffffff">#9900CC</font>
</td><td align="middle" width="11%" bgcolor="#ff00ff" height="19"><font color="#ffffff">#FF00FF</font>
</td><td align="middle" width="11%" bgcolor="#cc66ff" height="19"><font color="#ffffff">#CC66FF</font>
</td><td align="middle" width="12%" bgcolor="#990099" height="19"><font color="#ffffff">#990099</font>
</td><td align="middle" width="12%" bgcolor="#cc0099" height="19"><font color="#ffffff">#CC0099</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#cc33ff" height="19"><font color="#ffffff">#CC33FF</font>
</td><td align="middle" width="11%" bgcolor="#cc99cc" height="19"><font color="#ffffff">#CC99CC</font>
</td><td align="middle" width="11%" bgcolor="#990066" height="19"><font color="#ffffff">#990066</font>
</td><td align="middle" width="11%" bgcolor="#993399" height="19"><font color="#ffffff">#993399</font>
</td><td align="middle" width="11%" bgcolor="#cc66cc" height="19"><font color="#ffffff">#CC66CC</font>
</td><td align="middle" width="11%" bgcolor="#cc00cc" height="19"><font color="#ffffff">#CC00CC</font>
</td><td align="middle" width="11%" bgcolor="#663366" height="19"><font color="#ffffff">#663366</font>
</td><td align="middle" width="11%" height="19">
</td><td align="middle" width="12%" height="19">
</td><td align="middle" width="12%" height="19">
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="16"><font color="#ff8000">蓝色，以及它们的16进制代码。</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#660099" height="16"><font color="#ffffff">#660099</font>
</td><td align="middle" width="11%" bgcolor="#666ff" height="16"><font color="#ffffff">#666FF</font>
</td><td align="middle" width="11%" bgcolor="#000cc" height="16"><font color="#ffffff">#000CC</font>
</td><td align="middle" width="11%" bgcolor="#9933cc" height="16"><font color="#ffffff">#9933CC</font>
</td><td align="middle" width="11%" bgcolor="#666699" height="16"><font color="#ffffff">#666699</font>
</td><td align="middle" width="11%" bgcolor="#660066" height="16"><font color="#ffffff">#660066</font>
</td><td align="middle" width="11%" bgcolor="#333366" height="16"><font color="#ffffff">#333366</font>
</td><td align="middle" width="11%" bgcolor="#0066cc" height="16"><font color="#ffffff">#0066CC</font>
</td><td align="middle" width="12%" bgcolor="#9900ff" height="16"><font color="#ffffff">#9900FF</font>
</td><td align="middle" width="12%" bgcolor="#333399" height="16"><font color="#ffffff">#333399</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#99ccff" height="16"><font color="#ffffff">#99CCFF</font>
</td><td align="middle" width="11%" bgcolor="#9933ff" height="16"><font color="#ffffff">#9933FF</font>
</td><td align="middle" width="11%" bgcolor="#330099" height="16"><font color="#ffffff">#330099</font>
</td><td align="middle" width="11%" bgcolor="#6699ff" height="16"><font color="#ffffff">#6699FF</font>
</td><td align="middle" width="11%" bgcolor="#9966cc" height="16"><font color="#ffffff">#9966CC</font>
</td><td align="middle" width="11%" bgcolor="#3300cc" height="16"><font color="#ffffff">#3300CC</font>
</td><td align="middle" width="11%" bgcolor="#003366" height="16"><font color="#ffffff">#003366</font>
</td><td align="middle" width="11%" bgcolor="#330033" height="16"><font color="#ffffff">#330033</font>
</td><td align="middle" width="12%" bgcolor="#3300ff" height="16"><font color="#ffffff">#3300FF</font>
</td><td align="middle" width="12%" bgcolor="#6699cc" height="16"><font color="#ffffff">#6699CC</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#663399" height="16"><font color="#ffffff">#663399</font>
</td><td align="middle" width="11%" bgcolor="#3333ff" height="16"><font color="#ffffff">#3333FF</font>
</td><td align="middle" width="11%" bgcolor="#006699" height="16"><font color="#ffffff">#006699</font>
</td><td align="middle" width="11%" bgcolor="#6633cc" height="16"><font color="#ffffff">#6633CC</font>
</td><td align="middle" width="11%" bgcolor="#3333cc" height="16"><font color="#ffffff">#3333CC</font>
</td><td align="middle" width="11%" bgcolor="#3399cc" height="16"><font color="#ffffff">#3399CC</font>
</td><td align="middle" width="11%" bgcolor="#6600cc" height="16"><font color="#ffffff">#6600CC</font>
</td><td align="middle" width="11%" bgcolor="#0066ff" height="16"><font color="#ffffff">#0066FF</font>
</td><td align="middle" width="12%" bgcolor="#0099cc" height="16"><font color="#ffffff">#0099CC</font>
</td><td align="middle" width="12%" bgcolor="#9966ff" height="16"><font color="#ffffff">#9966FF</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#0033ff" height="16"><font color="#ffffff">#0033FF</font>
</td><td align="middle" width="11%" bgcolor="#66ccff" height="16"><font color="#ffffff">#66CCFF</font>
</td><td align="middle" width="11%" bgcolor="#330066" height="16"><font color="#ffffff">#330066</font>
</td><td align="middle" width="11%" bgcolor="#3366ff" height="16"><font color="#ffffff">#3366FF</font>
</td><td align="middle" width="11%" bgcolor="#3399ff" height="16"><font color="#ffffff">#3399FF</font>
</td><td align="middle" width="11%" bgcolor="#6600ff" height="16"><font color="#ffffff">#6600FF</font>
</td><td align="middle" width="11%" bgcolor="#3366cc" height="16"><font color="#ffffff">#3366CC</font>
</td><td align="middle" width="11%" bgcolor="#003399" height="16"><font color="#ffffff">#003399</font>
</td><td align="middle" width="12%" bgcolor="#6633ff" height="16"><font color="#ffffff">#6633FF</font>
</td><td align="middle" width="12%" bgcolor="#000066" height="16"><font color="#ffffff">#000066</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#0099ff" height="16"><font color="#ffffff">#0099FF</font>
</td><td align="middle" width="11%" bgcolor="#ccccff" height="16"><font color="#ffffff">#CCCCFF</font>
</td><td align="middle" width="11%" bgcolor="#000033" height="16"><font color="#ffffff">#000033</font>
</td><td align="middle" width="11%" bgcolor="#33ccff" height="16"><font color="#ffffff">#33CCFF</font>
</td><td align="middle" width="11%" bgcolor="#9999ff" height="16"><font color="#ffffff">#9999FF</font>
</td><td align="middle" width="11%" bgcolor="#0000ff" height="16"><font color="#ffffff">#0000FF</font>
</td><td align="middle" width="11%" bgcolor="#00ccff" height="16"><font color="#ffffff">#00CCFF</font>
</td><td align="middle" width="11%" bgcolor="#9999cc" height="16"><font color="#ffffff">#9999CC</font>
</td><td align="middle" width="12%" bgcolor="#000099" height="16"><font color="#ffffff">#000099</font>
</td><td align="middle" width="12%" bgcolor="#6666cc" height="16"><font color="#ffffff">#6666CC</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#0033cc" height="16"><font color="#ffffff">#0033CC</font>
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="12%" height="16">
</td><td align="middle" width="12%" height="16">
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="14"><font color="#ff8000">黄色、褐色、玫瑰色和橙色，以及它们的16进制代码。</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ffffcc" height="16"><font color="#000000">#FFFFCC</font>
</td><td align="middle" width="11%" bgcolor="#ffcc00" height="16"><font color="#ffffff">#FFCC00</font>
</td><td align="middle" width="11%" bgcolor="#cc9000" height="16"><font color="#ffffff">#CC99090</font>
</td><td align="middle" width="11%" bgcolor="#663300" height="16"><font color="#ffffff">#663300</font>
</td><td align="middle" width="11%" bgcolor="#ff6600" height="16"><font color="#ffffff">#FF6600</font>
</td><td align="middle" width="11%" bgcolor="#663333" height="16"><font color="#ffffff">#663333</font>
</td><td align="middle" width="11%" bgcolor="#cc6666" height="16"><font color="#ffffff">#CC6666</font>
</td><td align="middle" width="11%" bgcolor="#ff6666" height="16"><font color="#ffffff">#FF6666</font>
</td><td align="middle" width="12%" bgcolor="#ff0000" height="16"><font color="#ffffff">#FF0000</font>
</td><td align="middle" width="12%" bgcolor="#ffff99" height="16"><font color="#000000">#FFFF99</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ffcc66" height="16"><font color="#ffffff">#FFCC66</font>
</td><td align="middle" width="11%" bgcolor="#ff9900" height="16"><font color="#ffffff">#FF9900</font>
</td><td align="middle" width="11%" bgcolor="#ff9966" height="16"><font color="#ffffff">#FF9966</font>
</td><td align="middle" width="11%" bgcolor="#cc3300" height="16"><font color="#ffffff">#CC3300</font>
</td><td align="middle" width="11%" bgcolor="#996666" height="16"><font color="#ffffff">#996666</font>
</td><td align="middle" width="11%" bgcolor="#ffcccc" height="16"><font color="#ffffff">#FFCCCC</font>
</td><td align="middle" width="11%" bgcolor="#660000" height="16"><font color="#ffffff">#660000</font>
</td><td align="middle" width="11%" bgcolor="#ff3300" height="16"><font color="#ffffff">#FF3300</font>
</td><td align="middle" width="12%" bgcolor="#ff6666" height="16"><font color="#ffffff">#FF6666</font>
</td><td align="middle" width="12%" bgcolor="#ffcc33" height="16"><font color="#ffffff">#FFCC33</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#cc6600" height="16"><font color="#ffffff">#CC6600</font>
</td><td align="middle" width="11%" bgcolor="#ff6633" height="16"><font color="#ffffff">#FF6633</font>
</td><td align="middle" width="11%" bgcolor="#996633" height="16"><font color="#ffffff">#996633</font>
</td><td align="middle" width="11%" bgcolor="#cc9999" height="16"><font color="#ffffff">#CC9999</font>
</td><td align="middle" width="11%" bgcolor="#ff3333" height="16"><font color="#ffffff">#FF3333</font>
</td><td align="middle" width="11%" bgcolor="#990000" height="16"><font color="#ffffff">#990000</font>
</td><td align="middle" width="11%" bgcolor="#cc9966" height="16"><font color="#ffffff">#CC9966</font>
</td><td align="middle" width="11%" bgcolor="#ffff33" height="16"><font color="#000000">#FFFF33</font>
</td><td align="middle" width="12%" bgcolor="#cc9933" height="16"><font color="#ffffff">#CC9933</font>
</td><td align="middle" width="12%" bgcolor="#993300" height="16"><font color="#ffffff">#993300</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ff9933" height="16"><font color="#ffffff">#FF9933</font>
</td><td align="middle" width="11%" bgcolor="#330000" height="16"><font color="#ffffff">#330000</font>
</td><td align="middle" width="11%" bgcolor="#993333" height="16"><font color="#ffffff">#993333</font>
</td><td align="middle" width="11%" bgcolor="#cc3333" height="16"><font color="#ffffff">#CC3333</font>
</td><td align="middle" width="11%" bgcolor="#cc0000" height="16"><font color="#ffffff">#CC0000</font>
</td><td align="middle" width="11%" bgcolor="#ffcc99" height="16"><font color="#ffffff">#FFCC99</font>
</td><td align="middle" width="11%" bgcolor="#ffff00" height="16"><font color="#000000">#FFFF00</font>
</td><td align="middle" width="11%" bgcolor="#996600" height="16"><font color="#ffffff">#996600</font>
</td><td align="middle" width="12%" bgcolor="#cc6633" height="16"><font color="#ffffff">#CC6633</font>
</td><td align="middle" width="12%" height="16">
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="14"><font color="#ff8000">绿色，以及它们的16进制代码。</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#99ffff" height="16">#99FFFF
</td><td align="middle" width="11%" bgcolor="#33cccc" height="16">#33CCCC
</td><td align="middle" width="11%" bgcolor="#00cc99" height="16">#00CC99
</td><td align="middle" width="11%" bgcolor="#99ff99" height="16">#99FF99
</td><td align="middle" width="11%" bgcolor="#009966" height="16">#009966
</td><td align="middle" width="11%" bgcolor="#33ff33" height="16">#33FF33
</td><td align="middle" width="11%" bgcolor="#33ff00" height="16">#33FF00
</td><td align="middle" width="11%" bgcolor="#99cc33" height="16">#99CC33
</td><td align="middle" width="12%" bgcolor="#ccc33" height="16">#CCC33
</td><td align="middle" width="12%" bgcolor="#66ffff" height="16">#66FFFF
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#66cccc" height="16">#66CCCC
</td><td align="middle" width="11%" bgcolor="#66ffcc" height="16">#66FFCC
</td><td align="middle" width="11%" bgcolor="#66ff66" height="16">#66FF66
</td><td align="middle" width="11%" bgcolor="#009933" height="16">#009933
</td><td align="middle" width="11%" bgcolor="#00cc33" height="16">#00CC33
</td><td align="middle" width="11%" bgcolor="#66ff00" height="16">#66FF00
</td><td align="middle" width="11%" bgcolor="#336600" height="16">#336600
</td><td align="middle" width="11%" bgcolor="#33300" height="16"><font color="#ffffff">#33300</font>
</td><td align="middle" width="12%" bgcolor="#33ffff" height="16">#33FFFF
</td><td align="middle" width="12%" bgcolor="#339999" height="16">#339999
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#99ffcc" height="16">#99FFCC
</td><td align="middle" width="11%" bgcolor="#339933" height="16">#339933
</td><td align="middle" width="11%" bgcolor="#33ff66" height="16">#33FF66
</td><td align="middle" width="11%" bgcolor="#33cc33" height="16">#33CC33
</td><td align="middle" width="11%" bgcolor="#99ff00" height="16">#99FF00
</td><td align="middle" width="11%" bgcolor="#669900" height="16">#669900
</td><td align="middle" width="11%" bgcolor="#666600" height="16">#666600
</td><td align="middle" width="11%" bgcolor="#00ffff" height="16">#00FFFF
</td><td align="middle" width="12%" bgcolor="#336666" height="16">#336666
</td><td align="middle" width="12%" bgcolor="#00ff99" height="16">#00FF99
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#99cc99" height="16">#99CC99
</td><td align="middle" width="11%" bgcolor="#00ff66" height="16">#00FF66
</td><td align="middle" width="11%" bgcolor="#66ff33" height="16">#66FF33
</td><td align="middle" width="11%" bgcolor="#66cc00" height="16">#66CC00
</td><td align="middle" width="11%" bgcolor="#99cc00" height="16">#99CC00
</td><td align="middle" width="11%" bgcolor="#999933" height="16">#999933
</td><td align="middle" width="11%" bgcolor="#00cccc" height="16">#00CCCC
</td><td align="middle" width="11%" bgcolor="#006666" height="16">#006666
</td><td align="middle" width="12%" bgcolor="#339966" height="16">#339966
</td><td align="middle" width="12%" bgcolor="#66ff99" height="16">#66FF99
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ccffcc" height="16">#CCFFCC
</td><td align="middle" width="11%" bgcolor="#00ff00" height="16">#00FF00
</td><td align="middle" width="11%" bgcolor="#00cc00" height="16">#00CC00
</td><td align="middle" width="11%" bgcolor="#ccff66" height="16">#CCFF66
</td><td align="middle" width="11%" bgcolor="#cccc66" height="16">#CCCC66
</td><td align="middle" width="11%" bgcolor="#009999" height="16">#009999
</td><td align="middle" width="11%" bgcolor="#003333" height="16"><font color="#ffffff">#003333</font>
</td><td align="middle" width="11%" bgcolor="#006633" height="16">#006633
</td><td align="middle" width="12%" bgcolor="#33ff99" height="16">#33FF99
</td><td align="middle" width="12%" bgcolor="#ccff99" height="16">#CCFF99
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#66cc33" height="16">#66CC33
</td><td align="middle" width="11%" bgcolor="#33cc00" height="16">#33CC00
</td><td align="middle" width="11%" bgcolor="#ccff33" height="16">#CCFF33
</td><td align="middle" width="11%" bgcolor="#666633" height="16">#666633
</td><td align="middle" width="11%" bgcolor="#669999" height="16">#669999
</td><td align="middle" width="11%" bgcolor="#00ffcc" height="16">#00FFCC
</td><td align="middle" width="11%" bgcolor="#336633" height="16">#336633
</td><td align="middle" width="11%" bgcolor="#33cc66" height="16">#33CC66
</td><td align="middle" width="12%" bgcolor="#99ff66" height="16">#99FF66
</td><td align="middle" width="12%" bgcolor="#006600" height="16">#006600
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#339900" height="16">#339900
</td><td align="middle" width="11%" bgcolor="#ccff00" height="16">#CCFF00
</td><td align="middle" width="11%" bgcolor="#999966" height="16">#999966
</td><td align="middle" width="11%" bgcolor="#99cccc" height="16">#99CCCC
</td><td align="middle" width="11%" bgcolor="#33ffcc" height="16">#33FFCC
</td><td align="middle" width="11%" bgcolor="#669966" height="16">#669966
</td><td align="middle" width="11%" bgcolor="#00cc66" height="16">#00CC66
</td><td align="middle" width="11%" bgcolor="#99ff33" height="16">#99FF33
</td><td align="middle" width="12%" bgcolor="#003300" height="16"><font color="#ffffff">#003300</font>
</td><td align="middle" width="12%" bgcolor="#99cc66" height="16">#99CC66
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#999900" height="16">#999900
</td><td align="middle" width="11%" bgcolor="#cccc99" height="16">#CCCC99
</td><td align="middle" width="11%" bgcolor="#ccffff" height="16">#CCFFFF
</td><td align="middle" width="11%" bgcolor="#33cc99" height="16">#33CC99
</td><td align="middle" width="11%" bgcolor="#66cc66" height="16">#66CC66
</td><td align="middle" width="11%" bgcolor="#66cc99" height="16">#66CC99
</td><td align="middle" width="11%" bgcolor="#00ff33" height="16">#00FF33
</td><td align="middle" width="11%" bgcolor="#009900" height="16">#009900
</td><td align="middle" width="12%" bgcolor="#669900" height="16">#669900
</td><td align="middle" width="12%" bgcolor="#669933" height="16">#669933
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#cccc00" height="16">#CCCC00
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="12%" height="16">
</td><td align="middle" width="12%" height="16">
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="16"><font color="#ff8000">白色、灰色和黑色，以及它们的16进制代码。</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#fffff" height="16">#FFFFF
</td><td align="middle" width="11%" bgcolor="#cccccc" height="16">#CCCCCC
</td><td align="middle" width="11%" bgcolor="#999999" height="16"><font color="#ffffff">#999999</font>
</td><td align="middle" width="11%" bgcolor="#666666" height="16"><font color="#ffffff">#666666</font>
</td><td align="middle" width="11%" bgcolor="#333333" height="16"><font color="#ffffff">#333333</font>
</td><td align="middle" width="11%" bgcolor="#000000" height="16"><font color="#ffffff">#000000</font>
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="11%" height="16">
</td><td align="middle" width="12%" height="16">
</td><td align="middle" width="12%" height="16">
</td></tr><tr>
<td align="middle" width="112%" colspan="10" height="16"><font color="#ff8000">16色和它们的16进制代码。</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#00ffff" height="16"><font color="#000000">Aqua</font>
</td><td align="middle" width="11%" bgcolor="#000000" height="16"><font color="#ffffff">Black</font>
</td><td align="middle" width="11%" bgcolor="#ff00ff" height="16"><font color="#ffffff">Fuchsia</font>
</td><td align="middle" width="11%" bgcolor="#800000" height="16"><font color="#ffffff">Gray</font>
</td><td align="middle" width="11%" bgcolor="#008000" height="16"><font color="#ffffff">Gree</font>
</td><td align="middle" width="11%" bgcolor="#00ff00" height="16"><font color="#000000">Lime</font>
</td><td align="middle" width="11%" bgcolor="#800000" height="16"><font color="#ffffff">Maroon</font>
</td><td align="middle" width="11%" bgcolor="#000080" height="16"><font color="#ffffff">Navy</font>
</td><td align="middle" width="12%" bgcolor="#808000" height="16"><font color="#ffffff">Olive</font>
</td><td align="middle" width="12%" bgcolor="#800080" height="16"><font color="#ffffff">Purple</font>
</td></tr><tr>
<td align="middle" width="11%" bgcolor="#ff0000" height="18"><font color="#ffffff">Red</font>
</td><td align="middle" width="11%" bgcolor="#c0c0c0" height="18"><font color="#ffffff">Silver</font>
</td><td align="middle" width="11%" bgcolor="#008080" height="18"><font color="#ffffff">Teal</font>
</td><td align="middle" width="11%" bgcolor="#ffffff" height="18"><font color="#000000">White</font>
</td><td align="middle" width="11%" bgcolor="#ffff00" height="18"><font color="#000000">Yellow</font>
</td><td align="middle" width="11%" bgcolor="#0000ff" height="18"><font color="#ffffff">Blue</font>
</td><td align="middle" width="11%" height="18">
</td><td align="middle" width="11%" height="18">
</td><td align="middle" width="12%" height="18">
</td><td align="middle" width="12%" height="18"></td></tr></tbody></table><u><strong><font color="#000000"></font></strong></u><!--msnavigation--><!--msnavigation--></center>
</font><p align="center"><font color="#ff8000">
<table width="615" border="0">
<tbody>
<tr>
<td>当你要给你的网页添加颜色时，有时，你能够直接使用该颜色的名称，但是大多情况下，你只能使用十六进制代码来使用这些颜色。（浏览器能够理解这些代码。）<br>为了方便你去使用这些代码，我们制作了这个列表，右边是颜色，左边是十六进制代码。 </td></tr></tbody></table>
<table cellspacing="0" cellpadding="0" border="0">
<tbody>
<tr>
<td valign="top">
<table cellspacing="2" cellpadding="2" width="100%" border="0">
<tbody>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><img height="1" src="" width="58" border="0"></td>
<td><img height="1" src="" width="58" border="0"></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFFFF</font></td>
<td bgcolor="#ffffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFFCC</font></td>
<td bgcolor="#ffffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFF99</font></td>
<td bgcolor="#ffff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFF66</font></td>
<td bgcolor="#ffff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFF33</font></td>
<td bgcolor="#ffff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFFF00</font></td>
<td bgcolor="#ffff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCCFF</font></td>
<td bgcolor="#ffccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCCCC</font></td>
<td bgcolor="#ffcccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCC99</font></td>
<td bgcolor="#ffcc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCC66</font></td>
<td bgcolor="#ffcc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCC33</font></td>
<td bgcolor="#ffcc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FFCC00</font></td>
<td bgcolor="#ffcc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF99FF</font></td>
<td bgcolor="#ff99ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF99CC</font></td>
<td bgcolor="#ff99cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF9999</font></td>
<td bgcolor="#ff9999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF9966</font></td>
<td bgcolor="#ff9966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF9933</font></td>
<td bgcolor="#ff9933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF9900</font></td>
<td bgcolor="#ff9900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF66FF</font></td>
<td bgcolor="#ff66ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF66CC</font></td>
<td bgcolor="#ff66cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF6699</font></td>
<td bgcolor="#ff6699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF6666</font></td>
<td bgcolor="#ff6666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF6633</font></td>
<td bgcolor="#ff6633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF6600</font></td>
<td bgcolor="#ff6600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF33FF</font></td>
<td bgcolor="#ff33ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF33CC</font></td>
<td bgcolor="#ff33cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF3399</font></td>
<td bgcolor="#ff3399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF3366</font></td>
<td bgcolor="#ff3366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF3333</font></td>
<td bgcolor="#ff3333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF3300</font></td>
<td bgcolor="#ff3300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF00FF</font></td>
<td bgcolor="#ff00ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF00CC</font></td>
<td bgcolor="#ff00cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF0099</font></td>
<td bgcolor="#ff0099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF0066</font></td>
<td bgcolor="#ff0066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF0033</font></td>
<td bgcolor="#ff0033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#FF0000</font></td>
<td bgcolor="#ff0000">&nbsp;</td></tr>
<tr>
<td><br></td></tr>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FFFF</font></td>
<td bgcolor="#66ffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FFCC</font></td>
<td bgcolor="#66ffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FF99</font></td>
<td bgcolor="#66ff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FF66</font></td>
<td bgcolor="#66ff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FF33</font></td>
<td bgcolor="#66ff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66FF00</font></td>
<td bgcolor="#66ff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CCFF</font></td>
<td bgcolor="#66ccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CCCC</font></td>
<td bgcolor="#66cccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CC99</font></td>
<td bgcolor="#66cc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CC66</font></td>
<td bgcolor="#66cc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CC33</font></td>
<td bgcolor="#66cc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#66CC00</font></td>
<td bgcolor="#66cc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6699FF</font></td>
<td bgcolor="#6699ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6699CC</font></td>
<td bgcolor="#6699cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#669999</font></td>
<td bgcolor="#669999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#669966</font></td>
<td bgcolor="#669966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#669933</font></td>
<td bgcolor="#669933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#669900</font></td>
<td bgcolor="#669900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6666FF</font></td>
<td bgcolor="#6666ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6666CC</font></td>
<td bgcolor="#6666cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#666699</font></td>
<td bgcolor="#666699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#666666</font></td>
<td bgcolor="#666666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#666633</font></td>
<td bgcolor="#666633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#666600</font></td>
<td bgcolor="#666600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6633FF</font></td>
<td bgcolor="#6633ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6633CC</font></td>
<td bgcolor="#6633cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#663399</font></td>
<td bgcolor="#663399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#663366</font></td>
<td bgcolor="#663366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#663333</font></td>
<td bgcolor="#663333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#663300</font></td>
<td bgcolor="#663300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6600FF</font></td>
<td bgcolor="#6600ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#6600CC</font></td>
<td bgcolor="#6600cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#660099</font></td>
<td bgcolor="#660099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#660066</font></td>
<td bgcolor="#660066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#660033</font></td>
<td bgcolor="#660033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#660000</font></td>
<td bgcolor="#660000">&nbsp;</td></tr></tbody></table></td>
<td></td>
<td valign="top">
<table cellspacing="2" cellpadding="2" width="100%" border="0">
<tbody>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><img height="1" src="" width="58" border="0"></td>
<td><img height="1" src="" width="58" border="0"></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFFFF</font></td>
<td bgcolor="#ccffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFFCC</font></td>
<td bgcolor="#ccffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFF99</font></td>
<td bgcolor="#ccff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFF66</font></td>
<td bgcolor="#ccff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFF33</font></td>
<td bgcolor="#ccff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCFF00</font></td>
<td bgcolor="#ccff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCCFF</font></td>
<td bgcolor="#ccccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCCCC</font></td>
<td bgcolor="#cccccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCC99</font></td>
<td bgcolor="#cccc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCC66</font></td>
<td bgcolor="#cccc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCC33</font></td>
<td bgcolor="#cccc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CCCC00</font></td>
<td bgcolor="#cccc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC99FF</font></td>
<td bgcolor="#cc99ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC99CC</font></td>
<td bgcolor="#cc99cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC9999</font></td>
<td bgcolor="#cc9999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC9966</font></td>
<td bgcolor="#cc9966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC9933</font></td>
<td bgcolor="#cc9933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC9900</font></td>
<td bgcolor="#cc9900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC66FF</font></td>
<td bgcolor="#cc66ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC66CC</font></td>
<td bgcolor="#cc66cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC6699</font></td>
<td bgcolor="#cc6699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC6666</font></td>
<td bgcolor="#cc6666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC6633</font></td>
<td bgcolor="#cc6633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC6600</font></td>
<td bgcolor="#cc6600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC33FF</font></td>
<td bgcolor="#cc33ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC33CC</font></td>
<td bgcolor="#cc33cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC3399</font></td>
<td bgcolor="#cc3399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC3366</font></td>
<td bgcolor="#cc3366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC3333</font></td>
<td bgcolor="#cc3333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC3300</font></td>
<td bgcolor="#cc3300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC00FF</font></td>
<td bgcolor="#cc00ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC00CC</font></td>
<td bgcolor="#cc00cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC0099</font></td>
<td bgcolor="#cc0099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC0066</font></td>
<td bgcolor="#cc0066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC0033</font></td>
<td bgcolor="#cc0033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#CC0000</font></td>
<td bgcolor="#cc0000">&nbsp;</td></tr>
<tr>
<td><br></td></tr>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FFFF</font></td>
<td bgcolor="#33ffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FFCC</font></td>
<td bgcolor="#33ffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FF99</font></td>
<td bgcolor="#33ff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FF66</font></td>
<td bgcolor="#33ff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FF33</font></td>
<td bgcolor="#33ff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33FF00</font></td>
<td bgcolor="#33ff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CCFF</font></td>
<td bgcolor="#33ccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CCCC</font></td>
<td bgcolor="#33cccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CC99</font></td>
<td bgcolor="#33cc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CC66</font></td>
<td bgcolor="#33cc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CC33</font></td>
<td bgcolor="#33cc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#33CC00</font></td>
<td bgcolor="#33cc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3399FF</font></td>
<td bgcolor="#3399ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3399CC</font></td>
<td bgcolor="#3399cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#339999</font></td>
<td bgcolor="#339999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#339966</font></td>
<td bgcolor="#339966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#339933</font></td>
<td bgcolor="#339933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#339900</font></td>
<td bgcolor="#339900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3366FF</font></td>
<td bgcolor="#3366ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3366CC</font></td>
<td bgcolor="#3366cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#336699</font></td>
<td bgcolor="#336699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#336666</font></td>
<td bgcolor="#336666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#336633</font></td>
<td bgcolor="#336633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#336600</font></td>
<td bgcolor="#336600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3333FF</font></td>
<td bgcolor="#3333ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3333CC</font></td>
<td bgcolor="#3333cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#333399</font></td>
<td bgcolor="#333399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#333366</font></td>
<td bgcolor="#333366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#333333</font></td>
<td bgcolor="#333333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#333300</font></td>
<td bgcolor="#333300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3300FF</font></td>
<td bgcolor="#3300ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#3300CC</font></td>
<td bgcolor="#3300cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#330099</font></td>
<td bgcolor="#330099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#330066</font></td>
<td bgcolor="#330066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#330033</font></td>
<td bgcolor="#330033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#330000</font></td>
<td bgcolor="#330000">&nbsp;</td></tr></tbody></table></td>
<td></td>
<td valign="top">
<table cellspacing="2" cellpadding="2" width="100%" border="0">
<tbody>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><img height="1" src="" width="58" border="0"></td>
<td><img height="1" src="" width="58" border="0"></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FFFF</font></td>
<td bgcolor="#99ffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FFCC</font></td>
<td bgcolor="#99ffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FF99</font></td>
<td bgcolor="#99ff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FF66</font></td>
<td bgcolor="#99ff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FF33</font></td>
<td bgcolor="#99ff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99FF00</font></td>
<td bgcolor="#99ff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CCFF</font></td>
<td bgcolor="#99ccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CCCC</font></td>
<td bgcolor="#99cccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CC99</font></td>
<td bgcolor="#99cc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CC66</font></td>
<td bgcolor="#99cc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CC33</font></td>
<td bgcolor="#99cc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#99CC00</font></td>
<td bgcolor="#99cc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9999FF</font></td>
<td bgcolor="#9999ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9999CC</font></td>
<td bgcolor="#9999cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#999999</font></td>
<td bgcolor="#999999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#999966</font></td>
<td bgcolor="#999966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#999933</font></td>
<td bgcolor="#999933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#999900</font></td>
<td bgcolor="#999900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9966FF</font></td>
<td bgcolor="#9966ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9966CC</font></td>
<td bgcolor="#9966cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#996699</font></td>
<td bgcolor="#996699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#996666</font></td>
<td bgcolor="#996666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#996633</font></td>
<td bgcolor="#996633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#996600</font></td>
<td bgcolor="#996600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9933FF</font></td>
<td bgcolor="#9933ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9933CC</font></td>
<td bgcolor="#9933cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#993399</font></td>
<td bgcolor="#993399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#993366</font></td>
<td bgcolor="#993366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#993333</font></td>
<td bgcolor="#993333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#993300</font></td>
<td bgcolor="#993300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9900FF</font></td>
<td bgcolor="#9900ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#9900CC</font></td>
<td bgcolor="#9900cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#990099</font></td>
<td bgcolor="#990099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#990066</font></td>
<td bgcolor="#990066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#990033</font></td>
<td bgcolor="#990033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#990000</font></td>
<td bgcolor="#990000">&nbsp;</td></tr>
<tr>
<td><br></td></tr>
<tr>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Hex Code</b></font></td>
<td bgcolor="#336699"><font face="Verdana, Helvetica, Sans-serif" color="#ffffff" size="1"><b>Color</b></font></td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FFFF</font></td>
<td bgcolor="#00ffff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FFCC</font></td>
<td bgcolor="#00ffcc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FF99</font></td>
<td bgcolor="#00ff99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FF66</font></td>
<td bgcolor="#00ff66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FF33</font></td>
<td bgcolor="#00ff33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00FF00</font></td>
<td bgcolor="#00ff00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CCFF</font></td>
<td bgcolor="#00ccff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CCCC</font></td>
<td bgcolor="#00cccc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CC99</font></td>
<td bgcolor="#00cc99">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CC66</font></td>
<td bgcolor="#00cc66">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CC33</font></td>
<td bgcolor="#00cc33">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#00CC00</font></td>
<td bgcolor="#00cc00">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0099FF</font></td>
<td bgcolor="#0099ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0099CC</font></td>
<td bgcolor="#0099cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#009999</font></td>
<td bgcolor="#009999">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#009966</font></td>
<td bgcolor="#009966">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#009933</font></td>
<td bgcolor="#009933">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#009900</font></td>
<td bgcolor="#009900">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0066FF</font></td>
<td bgcolor="#0066ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0066CC</font></td>
<td bgcolor="#0066cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#006699</font></td>
<td bgcolor="#006699">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#006666</font></td>
<td bgcolor="#006666">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#006633</font></td>
<td bgcolor="#006633">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#006600</font></td>
<td bgcolor="#006600">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0033FF</font></td>
<td bgcolor="#0033ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0033CC</font></td>
<td bgcolor="#0033cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#003399</font></td>
<td bgcolor="#003399">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#003366</font></td>
<td bgcolor="#003366">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#003333</font></td>
<td bgcolor="#003333">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#003300</font></td>
<td bgcolor="#003300">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0000FF</font></td>
<td bgcolor="#0000ff">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#0000CC</font></td>
<td bgcolor="#0000cc">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#000099</font></td>
<td bgcolor="#000099">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#000066</font></td>
<td bgcolor="#000066">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#000033</font></td>
<td bgcolor="#000033">&nbsp;</td></tr>
<tr>
<td><font face="Verdana, Helvetica, Sans-serif" size="1">#000000</font></td>
<td bgcolor="#000000">&nbsp; </td></tr></tbody></table></td></tr></tbody></table></font></p></div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[双击退出程序-java代码]]></title>
      <url>http://percychen.com/2014/09/03/2014-09-03-doubleexit/</url>
      <content type="html"><![CDATA[<h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><p>###直接在函数最后一个括号“}”之前黏贴一下代码即可</p>
<pre><code>@Override
public boolean onKeyDown(int keyCode, KeyEvent event) {
    // TODO Auto-generated method stub
    if(keyCode == KeyEvent.KEYCODE_BACK)
       {  
           exitBy2Click();      //调用双击退出函数
       }
    return false;
}
private static Boolean isExit = false;

private void exitBy2Click() {
    Timer tExit = null;
    if (isExit == false) {
        isExit = true; // 准备退出
        Toast.makeText(this, &quot;再按一次退出程序&quot;, Toast.LENGTH_SHORT).show();
        tExit = new Timer();
        tExit.schedule(new TimerTask() {
            @Override
            public void run() {
                isExit = false; // 取消退出
            }
        }, 2000); // 如果2秒钟内没有按下返回键，则启动定时器取消掉刚才执行的任务

    } else {
        finish();
        System.exit(0);
    }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 系统初始值修改(源码)]]></title>
      <url>http://percychen.com/2014/09/03/2014-09-03-Android_change_initial_value/</url>
      <content type="html"><![CDATA[<h2 id="1-在4-1上修改默认字体大小："><a href="#1-在4-1上修改默认字体大小：" class="headerlink" title="1.在4.1上修改默认字体大小："></a>1.在4.1上修改默认字体大小：</h2><blockquote>
<p>比如改成大：</p>
</blockquote>
<pre><code>def_font_scale&quot;&gt;115%
</code></pre><h2 id="2-修改浏览器的默认标签"><a href="#2-修改浏览器的默认标签" class="headerlink" title="2.修改浏览器的默认标签"></a>2.修改浏览器的默认标签</h2><p>###分别在以下资源文件中添加自定义的标签</p>
<blockquote>
<p>编辑packages\apps\Browser\res\values\strings.xml</p>
</blockquote>
<pre><code>Google
http://www.google.com/

Picasa
http://picasaweb.google.com/

Yahoo!
http://www.yahoo.com/

MSN
http://www.msn.com/

Twitter
http://twitter.com/

Facebook
http://www.facebook.com/

Wikipedia
http://www.wikipedia.org/

eBay
http://www.ebay.com/

CNN
http://www.cnn.com/

NY Times
http://www.nytimes.com/

ESPN
http://espn.com/

Amazon
http://www.amazon.com/

Weather Channel
http://www.weather.com/

BBC
http://www.bbc.co.uk/
</code></pre><p>###编辑 packages\apps\Browser\res\values\bookmarks_icons.xml ，</p>
<blockquote>
<p>注意：这里每个网站对应一个缩略图和一个favicon</p>
</blockquote>
<pre><code>@raw/favicon_google
@raw/thumb_google
@raw/favicon_picasa
@raw/thumb_picasa
@raw/favicon_yahoo
@raw/thumb_yahoo
@raw/favicon_msn
@raw/thumb_msn
@raw/favicon_twitter
@raw/thumb_twitter
@raw/favicon_facebook
@raw/thumb_facebook
@raw/favicon_wikipedia
@raw/thumb_wikipedia
@raw/favicon_ebay
@raw/thumb_ebay
@raw/favicon_cnn
@raw/thumb_cnn
@raw/favicon_nytimes
@raw/thumb_nytimes
@raw/favicon_espn
@raw/thumb_espn
@raw/favicon_amazon
@raw/thumb_amazon
@raw/favicon_weatherchannel
@raw/thumb_weatherchannel
@raw/favicon_bbc
@raw/thumb_bbc
</code></pre><blockquote>
<p>对应的图片在 packages\apps\Browser\res\raw</p>
</blockquote>
<h2 id="3-LockScreen-解锁界面四个方向添加一个setting入口"><a href="#3-LockScreen-解锁界面四个方向添加一个setting入口" class="headerlink" title="3.LockScreen 解锁界面四个方向添加一个setting入口"></a>3.LockScreen 解锁界面四个方向添加一个setting入口</h2><p>###frameworks\base\core\res\res\values/arrays.xml</p>
<pre><code>@drawable/ic_lockscreen_unlock
@drawable/ic_action_assist_generic
@drawable/ic_lockscreen_camera
@drawable/ic_lockscreen_settings
</code></pre><p>###在 frameworks\base\core\res\res\drawable 增加 ic_lockscreen_settings.xml 文件 并添加 ic_lockscreen_settings_normal.phg ic_lockscreen_settings_activated.png 资源文件</p>
<pre><code>http://schemas.android.com/apk/res/android&quot;&gt;
    android:state_active=&quot;false&quot;
    android:state_focused=&quot;false&quot;
    android:drawable=&quot;@drawable/ic_lockscreen_settings_normal&quot; /&gt;
    android:state_enabled=&quot;true&quot;
    android:state_active=&quot;true&quot;
    android:state_focused=&quot;false&quot;
    android:drawable=&quot;@drawable/ic_lockscreen_settings_activated&quot; /&gt;
    android:state_enabled=&quot;true&quot;
    android:state_active=&quot;false&quot;
    android:state_focused=&quot;true&quot;
    android:drawable=&quot;@drawable/ic_lockscreen_settings_activated&quot; /&gt;
</code></pre><p>###打开 frameworks\base\policy\src\com\android\internal\policy\impl\LockScreen.java</p>
<pre><code>public void onTrigger(View v, int target) {
       final int resId = mGlowPadView.getResourceIdForTarget(target);
       switch (resId) {
            case com.android.internal.R.drawable.ic_lockscreen_settings: //启动setting 应用
               launchActivity(new Intent().setComponent(new ComponentName(&quot;com.android.settings&quot;,&quot;com.android.settings.Settings&quot;)));
               mCallback.pokeWakelock();
               break;
</code></pre><p>###进入frameworks/base/media/java/android/media/AudioService.java</p>
<pre><code>private final int[] MAX_STREAM_VOLUME = new int[] {
        5,  // STREAM_VOICE_CALL
        7,  // STREAM_SYSTEM
        7,  // STREAM_RING
        15, // STREAM_MUSIC
        7,  // STREAM_ALARM
        7,  // STREAM_NOTIFICATION
        15, // STREAM_BLUETOOTH_SCO
        7,  // STREAM_SYSTEM_ENFORCED
        15, // STREAM_DTMF
        15  // STREAM_TTS
    };
</code></pre><p>###进入frameworks/base/media/java/android/media/AudioManager.java</p>
<pre><code>public static final int[] DEFAULT_STREAM_VOLUME = new int[] {
        4,  // STREAM_VOICE_CALL
        7,  // STREAM_SYSTEM
        5,  // STREAM_RING
        11, // STREAM_MUSIC
        6,  // STREAM_ALARM
        5,  // STREAM_NOTIFICATION
        7,  // STREAM_BLUETOOTH_SCO
        7,  // STREAM_SYSTEM_ENFORCED
        11, // STREAM_DTMF
        11  // STREAM_TTS
    };
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[（未完成）Android系统拼包移植各个系统驱动对应的so文件]]></title>
      <url>http://percychen.com/2014/09/03/2014-09-03-androidplantso/</url>
      <content type="html"><![CDATA[<h2 id="为什么要写这篇文章"><a href="#为什么要写这篇文章" class="headerlink" title="为什么要写这篇文章"></a>为什么要写这篇文章</h2><p>前段时间跟几个做移植的romer聊天，<br>发现他们所有的经验都是靠一个个对比得到的，<br>对于很多so文件的功能由于看不到C文件，所以不知道它的功能，<br>所以今天花点时间写一下各个java和C最后编译生成的so，可能对romer没什么用，<br>但多少能帮到点。</p>
<h2 id="硬件模块"><a href="#硬件模块" class="headerlink" title="硬件模块"></a>硬件模块</h2><ul>
<li><p>/system/lib/hw 下</p>
<pre><code>gralloc.default.so 表示默认的Gralloc 模块
sensors.goldffish.so 表示默认的传感模块
</code></pre></li>
<li><p>音频驱动</p>
<pre><code>framework/base/libs/audioflinger ----&gt; libaudioflinger.so  Audio系统本地服务
framework/base/media/libmedia      ----&gt; libmedia.so 提供Audio部分接口，media库中audio的一部分
framework/base/core/jni             ----&gt; libandroid_runtime.so 音频的jni接口封在这里面
AudioHardwareInterface AudioStreamOut AudioStreamIn 这三个类编译生成 libaudio.so 是音频的硬件抽象层
</code></pre></li>
<li><p>相机驱动</p>
<pre><code>framworks/base/libs/ui            -----&gt;libui.so     相机本地框架代码(如果有)
frameworks/base/libs/camera        -----&gt;libcamera_client.so  相机本地框架
</code></pre></li>
</ul>
<h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><ul>
<li><p>hw_get_module 函数报错</p>
<pre><code>这个函数执行的是一个动态查找的过程，当没有动态库的时候就会打开默认的库文件 （*.default.so).
</code></pre></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CPU性能天梯图（2014年7月）]]></title>
      <url>http://percychen.com/2014/09/03/2014-09-03-2014CPUarrange/</url>
      <content type="html"><![CDATA[<h2 id="点击图片查看高清无码大图"><a href="#点击图片查看高清无码大图" class="headerlink" title="点击图片查看高清无码大图"></a><strong>点击图片查看高清无码大图</strong></h2><div class="tile" data-scale="2.4" data-image="/img/20140903cpu.jpg"></div>

<p><br><a href="/img/20140903cpu.jpg"><img src="https://raw.githubusercontent.com/yun-percy/yun-percy.github.io/master/img/20140903cpu.jpg" alt="CPU"></a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[jekyll搭建过程中的错误解决办法]]></title>
      <url>http://percychen.com/2014/09/02/2014-09-02-jekyllerrorfix/</url>
      <content type="html"><![CDATA[<h2 id="错误1"><a href="#错误1" class="headerlink" title="错误1"></a>错误1</h2><pre><code>终端安装：yunsun@chenyun:~$ gem install --verbose rdiscount
报错如下：
ERROR:  While executing gem ... (Gem::FilePermissionError)
You don&apos;t have write permissions into the /var/lib/gems/1.9.1 directory.
yunsun@chenyun:~$ sudo gem install rdiscount
Building native extensions.  This could take a while...
ERROR:  Error installing rdiscount:
ERROR: Failed to build gem native extension.

        /usr/bin/ruby1.9.1 extconf.rb
/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require&apos;: cannot load such file -- mkmf (LoadError)
    from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require&apos;
    from extconf.rb:1:in `&lt;main&gt;&apos;
</code></pre><p>###解决<br>        终端输入：<br>        sudo apt-get install ruby1.9.1-dev<br>        再次尝试安装：<br>         rdiscount RedCloth</p>
<pre><code>终端输入：sudo gem --verbose install jekyll

安装完成！
</code></pre><h2 id="错误2"><a href="#错误2" class="headerlink" title="错误2"></a>错误2</h2><p>###运行jekyll报错</p>
<pre><code>终端输入： jekyll new blog 报错如下
*****in `autodetect&apos;: Could not find a JavaScript runtime.....
解决办法：终端输入：
sudo gem install --verbose execjs
sudo gem install --verbose therubyracer
sudo apt-get install  nodejs
再次执行，搞定
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一些linux下的零碎语法和命令]]></title>
      <url>http://percychen.com/2014/09/02/2014-09-02-somelinuxcode/</url>
      <content type="html"><![CDATA[<h2 id="查看计算机状态"><a href="#查看计算机状态" class="headerlink" title="- 查看计算机状态"></a>- 查看计算机状态</h2><pre><code>who: 查看有谁在线
netstat -a :网络的联机状态
ps -aux: 察看后台执行的程序
ps aux --sort=pid （后面字母需小写，比如vsz）查看linux下的进程 排序问题
whereis  :查看命令所在文件夹
ls -lht  查看当前文件夹下面每个文件的权限，信息和大小
</code></pre><h2 id="关机命令"><a href="#关机命令" class="headerlink" title="- 关机命令"></a>- 关机命令</h2><pre><code>shutdown
reboot
halt
poweroff
用法： sudo shutdown -h 3   (-h:关机 -r：重启 3代表时间，可以设置为now立即执行)
</code></pre><h2 id="adb命令"><a href="#adb命令" class="headerlink" title="- adb命令"></a>- adb命令</h2><p>###直接启动应用 ：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb shell am start -n <span class="string">"包名/类名"</span></div></pre></td></tr></table></figure>
<p>###查看包名类名：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">aapt dump badging XX.apk</div></pre></td></tr></table></figure>
<h2 id="apt-get"><a href="#apt-get" class="headerlink" title="apt-get"></a>apt-get</h2><p>###ia32-libs</p>
<p>这是一个32位依赖包，很多常用软件依旧在是用这个依赖包，但是在ubuntu和mint的软件源里已经把这个依赖包给去掉了，那我们怎么来安装？<br>添加软件源，下文中要添加的软件源是现在还能用的，也许以后就没了，因为安装过程中要经常使用sudo的授权，所以第一步我们就直接临时进root了。使用完了记得退出。<br>直接上链接：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo -i</div><div class="line"><span class="built_in">cd</span> /etc/apt/sources.list.d</div><div class="line"><span class="built_in">echo</span> <span class="string">"deb http://archive.ubuntu.com/ubuntu/ raring main restricted universe multiverse"</span> &gt;ia32-libs-raring.list</div><div class="line">apt-get update</div><div class="line">apt-get <span class="_">-f</span> install</div><div class="line">apt-get install ia32-libs</div></pre></td></tr></table></figure>
<p>搞定</p>
<p>###find 命令</p>
<pre><code>find . -name &quot;*.mk&quot;  -exec grep -l &quot;love&quot; {} \;
</code></pre><p>在所有后缀名为.mk中查找带love的文件，并且列出文件名</p>
<p>###高通开机splash.img文件制作</p>
<pre><code>convert -depth 8 logo.png  bgr:splash.img
</code></pre><p>###linux下bootanimation制作</p>
<pre><code>zip -0 bootanimation.zip part0/*PNG part1/*PNG desc.txt
</code></pre><p>###ls命令参数</p>
<pre><code>-h 将文件大小转换为方便阅读的单位
-R 遍历所有目录
-F 添加文件类型标记
-S 按文件大小排序输出
-t 按文件修改时间排序输出
-X 按文件类型输出
</code></pre><h3 id="修改系统日期和时间"><a href="#修改系统日期和时间" class="headerlink" title="修改系统日期和时间"></a>修改系统日期和时间</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo dpkg-reconfigure tzdata   <span class="comment">#修改系统时区</span></div><div class="line">sudo hwclock --hctosys     <span class="comment">#同步系统时间和硬件时间</span></div></pre></td></tr></table></figure>
<h3 id="使-51-Android生效"><a href="#使-51-Android生效" class="headerlink" title="使 51 Android生效"></a>使 51 Android生效</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/udev restart</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[般若波罗蜜多心经]]></title>
      <url>http://percychen.com/2014/09/02/2014-09-02-Iloveyou/</url>
      <content type="html"><![CDATA[<h2 id="玄奘译本"><a href="#玄奘译本" class="headerlink" title="玄奘译本"></a>玄奘译本</h2><center><br>观自在菩萨<br>行深般若波罗蜜多时<br>照见五蕴皆空<br>度一切苦厄<br><br>舍利子<br>色不异空，空不异色<br>色即是空，空即是色<br>受想行识，亦复如是<br><br>舍利子，是诸法空相<br>不生不灭，不垢不净，不增不减<br>是故空中无色，无受想行识<br>无眼耳鼻舌身意，无色声香味触法<br>无眼界，乃至无意识界<br>无无明，亦无无明尽<br>乃至无老死，亦无老死尽<br>无苦集灭道，无智亦无得<br>以无所得故，菩提萨埵<br><br>依般若波罗蜜多故，心无挂碍<br>无挂碍故，无有恐怖<br>远离颠倒梦想<br>究竟涅槃,三世诸佛<br>依般若波罗蜜多故<br>得阿耨多罗三藐三菩提<br>故知般若波罗蜜多<br>是大神咒，是大明咒<br>是无上咒，是无等等咒<br>能除一切苦，真实不虚<br><br>故说般若波罗蜜多咒，即说咒曰：<br>揭谛揭谛，波罗揭谛<br>波罗僧揭谛，菩提萨婆诃。<br></center>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[android 外部启动activity，自定义action，action常量大全]]></title>
      <url>http://percychen.com/2014/08/07/2014-08-07-androidactivity/</url>
      <content type="html"><![CDATA[<p><strong><em>转自：<a href="http://www.qylk.blog.163.com/blog/static/13468735620130913043889/" target="_blank" rel="external">http://www.qylk.blog.163.com/blog/static/13468735620130913043889/</a></em></strong></p>
<p>###从任意app，启动另外一个app的activity：</p>
<ul>
<li><p>第一种方式</p>
<pre><code>Intent i = new Intent();
 ComponentName cn = new ComponentName(&quot;com.book.android2&quot;,  &quot;com.book.android2.AndroidSearch&quot;);
 i.setComponent(cn);
 i.setAction(&quot;android.intent.action.MAIN&quot;);
 startActivity(i); //or startActivityForResult(i, RESULT_OK);
</code></pre></li>
</ul>
<p>&gt;<br>我用这种方法时，绝大部分应用可以启动，但是像RootExplorer却无法启动，出现FC对话框,因此建议使用下面这种方式：</p>
<ul>
<li><p>第二种方式</p>
<pre><code>Intent it = new Intent(&quot;android.intent.action.MAIN&quot;);
     it.setClassName(&quot;com.speedsoftware.rootexplorer&quot;,&quot;com.speedsoftware.rootexplorer.RootExplorer&quot;);
startActivity(it);
</code></pre></li>
</ul>
<p>&gt;<br>如果你需要启动一个你自己写的另一个app的activity，你可以在那个的menifest.xml里自定义activity的action:<br>其他地方启动它：</p>
<pre><code>Intent it = new Intent(&quot;com.qylk.call.main&quot;);
startActivity(it);
</code></pre><p>###使用adb启动activity：</p>
<ul>
<li><p>启动RootExolorer：</p>
<pre><code>am start -a android.intent.action.MAIN -n com.speedsoftware.rootexplorer/.RootExplorer
</code></pre></li>
<li><p>启动系统设置：</p>
<pre><code>am start -a android.settings.SETTINGS
</code></pre></li>
</ul>
<h2 id="附（转载）：android系统Action常量-其实不算全"><a href="#附（转载）：android系统Action常量-其实不算全" class="headerlink" title="附（转载）：android系统Action常量(其实不算全)"></a>附（转载）：android系统Action常量(其实不算全)</h2><p>####android intent和intent action大全</p>
<ol>
<li><p>从google搜索内容</p>
<pre><code>Intent intent = new Intent();
intent.setAction(Intent.ACTION_WEB_SEARCH);
intent.putExtra(SearchManager.QUERY,&quot;searchString&quot;)
startActivity(intent);
</code></pre></li>
<li><p>浏览网页</p>
<pre><code>Uri uri = Uri.parse(&quot;http://www.google.com&quot;);
Intent it  = new Intent(Intent.ACTION_VIEW,uri);
startActivity(it);
</code></pre></li>
<li><p>显示地图</p>
<pre><code>Uri uri = Uri.parse(&quot;geo:38.899533,-77.036476&quot;);
Intent it = new Intent(Intent.Action_VIEW,uri);
startActivity(it);
</code></pre></li>
<li><p>路径规划</p>
<pre><code>Uri uri = Uri.parse(&quot;http://maps.google.com/maps?f=dsaddr=startLat startLng&amp;daddr=endLat endLng&amp;hl=en&quot;);
Intent it = new Intent(Intent.ACTION_VIEW,URI);
startActivity(it);
</code></pre></li>
<li><p>拨打电话</p>
<pre><code>Uri uri = Uri.parse(&quot;tel:xxxxxx&quot;);
Intent it = new Intent(Intent.ACTION_DIAL, uri);
startActivity(it);
</code></pre></li>
</ol>
<ol>
<li><p>调用发短信的程序</p>
<pre><code>Intent it = new Intent(Intent.ACTION_VIEW);
it.putExtra(&quot;sms_body&quot;, &quot;The SMS text&quot;);
it.setType(&quot;vnd.android-dir/mms-sms&quot;);
startActivity(it);
</code></pre></li>
<li><p>发送短信</p>
<pre><code>Uri uri = Uri.parse(&quot;smsto:0800000123&quot;);
Intent it = new Intent(Intent.ACTION_SENDTO, uri);
it.putExtra(&quot;sms_body&quot;, &quot;The SMS text&quot;);
startActivity(it);

String body=&quot;this is sms demo&quot;;
Intent mmsintent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(&quot;smsto&quot;, number, null));
mmsintent.putExtra(Messaging.KEY_ACTION_SENDTO_MESSAGE_BODY, body);
mmsintent.putExtra(Messaging.KEY_ACTION_SENDTO_COMPOSE_MODE, true);
mmsintent.putExtra(Messaging.KEY_ACTION_SENDTO_EXIT_ON_SENT, true);
startActivity(mmsintent);
</code></pre></li>
<li><p>发送彩信</p>
<p>  Uri uri = Uri.parse(“content://media/external/images/media/23”);<br>  Intent it = new Intent(Intent.ACTION_SEND);<br>  it.putExtra(“sms_body”, “some text”);<br>  it.putExtra(Intent.EXTRA_STREAM, uri);<br>  it.setType(“image/png”);<br>  startActivity(it);</p>
<p>  StringBuilder sb = new StringBuilder();<br>  sb.append(“file://“);<br>  sb.append(fd.getAbsoluteFile());<br>  Intent intent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(“mmsto”, number, null));<br>  // Below extra datas are all optional.<br>  intent.putExtra(Messaging.KEY_ACTION_SENDTO_MESSAGE_SUBJECT, subject);<br>  intent.putExtra(Messaging.KEY_ACTION_SENDTO_MESSAGE_BODY, body);<br>  intent.putExtra(Messaging.KEY_ACTION_SENDTO_CONTENT_URI, sb.toString());<br>  intent.putExtra(Messaging.KEY_ACTION_SENDTO_COMPOSE_MODE, composeMode);<br>  intent.putExtra(Messaging.KEY_ACTION_SENDTO_EXIT_ON_SENT, exitOnSent);<br>  startActivity(intent);</p>
</li>
<li><p>发送Email</p>
<pre><code>Uri uri = Uri.parse(&quot;mailto:xxx@abc.com&quot;);
Intent it = new Intent(Intent.ACTION_SENDTO, uri);
startActivity(it);

Intent it = new Intent(Intent.ACTION_SEND);
it.putExtra(Intent.EXTRA_EMAIL, &quot;me@abc.com&quot;);
it.putExtra(Intent.EXTRA_TEXT, &quot;The email body text&quot;);
it.setType(&quot;text/plain&quot;);

startActivity(Intent.createChooser(it, &quot;Choose Email Client&quot;));
Intent it=new Intent(Intent.ACTION_SEND);
String[] tos={&quot;me@abc.com&quot;};
String[] ccs={&quot;you@abc.com&quot;};
it.putExtra(Intent.EXTRA_EMAIL, tos);
it.putExtra(Intent.EXTRA_CC, ccs);
it.putExtra(Intent.EXTRA_TEXT, &quot;The email body text&quot;);
it.putExtra(Intent.EXTRA_SUBJECT, &quot;The email subject text&quot;);
it.setType(&quot;message/rfc822&quot;);
startActivity(Intent.createChooser(it, &quot;Choose Email Client&quot;));

Intent it = new Intent(Intent.ACTION_SEND);
it.putExtra(Intent.EXTRA_SUBJECT, &quot;The email subject text&quot;);
it.putExtra(Intent.EXTRA_STREAM, &quot;file:///sdcard/mysong.mp3&quot;);
sendIntent.setType(&quot;audio/mp3&quot;);
startActivity(Intent.createChooser(it, &quot;Choose Email Client&quot;));
</code></pre></li>
<li><p>播放多媒体</p>
<pre><code>Intent it = new Intent(Intent.ACTION_VIEW);
Uri uri = Uri.parse(&quot;file:///sdcard/song.mp3&quot;);
it.setDataAndType(uri, &quot;audio/mp3&quot;);
startActivity(it);

Uri uri = Uri.withAppendedPath(MediaStore.Audio.Media.INTERNAL_CONTENT_URI, &quot;1&quot;);
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);
</code></pre></li>
<li><p>卸载</p>
<pre><code>Uri uri = Uri.fromParts(&quot;package&quot;, strPackageName, null);
Intent it = new Intent(Intent.ACTION_DELETE, uri);
startActivity(it);
</code></pre></li>
<li><p>安装</p>
<pre><code>Uri installUri = Uri.fromParts(&quot;package&quot;, &quot;xxx&quot;, null);
returnIt = new Intent(Intent.ACTION_PACKAGE_ADDED, installUri);
</code></pre></li>
<li><p>打开照相机</p>
<pre><code>Intent i = new Intent(Intent.ACTION_CAMERA_BUTTON, null);
this.sendBroadcast(i);

long dateTaken = System.currentTimeMillis();
String name = createName(dateTaken) + &quot;.jpg&quot;;
fileName = folder + name;
ContentValues values = new ContentValues();
values.put(Images.Media.TITLE, fileName);
values.put(&quot;_data&quot;, fileName);
values.put(Images.Media.PICASA_ID, fileName);
values.put(Images.Media.DISPLAY_NAME, fileName);
values.put(Images.Media.DESCRIPTION, fileName);
values.put(Images.ImageColumns.BUCKET_DISPLAY_NAME, fileName);
Uri photoUri = getContentResolver().insert(
                MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);
Intent inttPhoto = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
inttPhoto.putExtra(MediaStore.EXTRA_OUTPUT, photoUri);
startActivityForResult(inttPhoto, 10);
</code></pre></li>
<li><p>从gallery选取图片</p>
<pre><code>Intent i = new Intent();
i.setType(&quot;image/*&quot;);
i.setAction(Intent.ACTION_GET_CONTENT);
startActivityForResult(i, 11);
</code></pre></li>
<li><p>打开录音机</p>
<pre><code>Intent mi = new Intent(Media.RECORD_SOUND_ACTION);
startActivity(mi);
</code></pre></li>
<li><p>显示应用详细列表</p>
<pre><code>Uri uri = Uri.parse(&quot;market://details?id=app_id&quot;);
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);
</code></pre></li>
<li><p>寻找应用</p>
<blockquote>
<p>刚才找app id未果，结果发现用package name也可以</p>
</blockquote>
<pre><code>Uri uri = Uri.parse(&quot;market://details?id=&quot;);
</code></pre><blockquote>
<p>这个简单多了</p>
</blockquote>
<pre><code>Uri uri = Uri.parse(&quot;market://search?q=pname:pkg_name&quot;);
Intent it = new Intent(Intent.ACTION_VIEW, uri);
startActivity(it);
</code></pre></li>
<li><p>打开联系人列表</p>
<pre><code>Intent i = new Intent();
i.setAction(Intent.ACTION_GET_CONTENT);
i.setType(&quot;vnd.android.cursor.item/phone&quot;);
startActivityForResult(i, REQUEST_TEXT);

 Uri uri = Uri.parse(&quot;content://contacts/people&quot;);
 Intent it = new Intent(Intent.ACTION_PICK, uri);
 startActivityForResult(it, REQUEST_TEXT);
</code></pre></li>
<li><p>调用系统编辑添加联系人（高版本SDK有效）：</p>
<pre><code>Intent it = new Intent(Intent.ACTION_INSERT_OR_EDIT);
      it.setType(&quot;vnd.android.cursor.item/contact&quot;);
      // it.setType(Contacts.CONTENT_ITEM_TYPE);
      it.putExtra(&quot;name&quot;, &quot;myName&quot;);
      it.putExtra(android.provider.Contacts.Intents.Insert.COMPANY,  &quot;organization&quot;);
      it.putExtra(android.provider.Contacts.Intents.Insert.EMAIL, &quot;email&quot;);
      it.putExtra(android.provider.Contacts.Intents.Insert.PHONE,&quot;homePhone&quot;);
      it.putExtra( android.provider.Contacts.Intents.Insert.SECONDARY_PHONE,
                      &quot;mobilePhone&quot;);
      it.putExtra(  android.provider.Contacts.Intents.Insert.TERTIARY_PHONE,
                      &quot;workPhone&quot;);
      it.putExtra(android.provider.Contacts.Intents.Insert.JOB_TITLE,&quot;title&quot;);
      startActivity(it);
</code></pre></li>
<li><p>调用系统编辑添加联系人（全有效）：</p>
<p> Intent intent = new Intent(Intent.ACTION_INSERT_OR_EDIT);</p>
<pre><code>intent.setType(People.CONTENT_ITEM_TYPE);
intent.putExtra(Contacts.Intents.Insert.NAME, &quot;My Name&quot;);
intent.putExtra(Contacts.Intents.Insert.PHONE, &quot;+1234567890&quot;);
intent.putExtra(Contacts.Intents.Insert.PHONE_TYPE, Contacts.PhonesColumns.TYPE_MOBILE);
intent.putExtra(Contacts.Intents.Insert.EMAIL, &quot;com@com.com&quot;);
intent.putExtra(Contacts.Intents.Insert.EMAIL_TYPE, Contacts.ContactMethodsColumns.TYPE_WORK);
startActivity(intent);
</code></pre></li>
</ol>
<ol>
<li><p>最基本的share 信息的intent，可以传一段text信息到各个手机上已安装程序：如SMS，Email，sina微波，米聊，facebook，twitter等等</p>
<pre><code>Intent it = new Intent(Intent.ACTION_SEND);
it.putExtra(Intent.EXTRA_TEXT, &quot;The email subject text&quot;);
it.setType(&quot;text/plain&quot;);
startActivity(Intent.createChooser(it, &quot;Choose Email Client&quot;));
</code></pre></li>
</ol>
<p>####★intent action大全：</p>
<blockquote>
<p>ACTION_MAIN                         作为一个主要的进入口，而并不期望去接受数据</p>
<p>ACTION_VIEW                         向用户去显示数据</p>
<p>ACTION_ATTACH_DATA                  用于指定一些数据应该附属于一些其他的地方，例如，图片数据应该附属于联系人</p>
<p>ACTION_EDIT                         访问已给的数据，提供明确的可编辑</p>
<p>ACTION_PICK                         从数据中选择一个子项目，并返回你所选中的项目</p>
<p>ACTION_CHOOSER                      显示一个activity选择器，允许用户在进程之前选择他们想要的</p>
<p>ACTION_GET_CONTENT                  允许用户选择特殊种类的数据，并返回（特殊种类的数据：照一张相片或录一段音）</p>
<p>ACTION_DIAL                         拨打一个指定的号码，显示一个带有号码的用户界面，允许用户去启动呼叫</p>
<p>ACTION_CALL                         根据指定的数据执行一次呼叫（ACTION_CALL在应用中启动一次呼叫有缺陷，多数应用ACTION_DIAL，ACTION_CALL不能用在紧急呼叫上，紧急呼叫可以用ACTION_DIAL来实现）</p>
<p>ACTION_SEND                         传递数据，被传送的数据没有指定，接收的action请求用户发数据</p>
<p>ACTION_SENDTO                       发送一跳信息到指定的某人</p>
<p>ACTION_ANSWER                       处理一个打进电话呼叫</p>
<p>ACTION_INSERT                       插入一条空项目到已给的容器</p>
<p>ACTION_DELETE                       从容器中删除已给的数据</p>
<p>ACTION_RUN                          运行数据，无论怎么</p>
<p>ACTION_SYNC                         同步执行一个数据</p>
<p>ACTION_PICK_ACTIVITY                为已知的Intent选择一个Activity，返回选中的类</p>
<p>ACTION_SEARCH                       执行一次搜索</p>
<p>ACTION_WEB_SEARCH                   执行一次web搜索</p>
<p>ACTION_FACTORY_TEST                 工场测试的主要进入点，</p>
</blockquote>
<h2 id="标准的广播Actions"><a href="#标准的广播Actions" class="headerlink" title="标准的广播Actions"></a>标准的广播Actions</h2><blockquote>
<p>ACTION_TIME_TICK                   当前时间改变，每分钟都发送，不能通过组件声明来接收，只有通过Context.registerReceiver()方法来注册</p>
<p>ACTION_TIME_CHANGED                时间被设置</p>
<p>ACTION_TIMEZONE_CHANGED            时间区改变</p>
<p>ACTION_BOOT_COMPLETED              系统完成启动后，一次广播</p>
<p>ACTION_PACKAGE_ADDED               一个新应用包已经安装在设备上，数据包括包名（最新安装的包程序不能接收到这个广播）</p>
<p>ACTION_PACKAGE_CHANGED             一个已存在的应用程序包已经改变，包括包名</p>
<p>ACTION_PACKAGE_REMOVED             一个已存在的应用程序包已经从设备上移除，包括包名（正在被安装的包程序不能接收到这个广播）</p>
<p>ACTION_PACKAGE_RESTARTED           用户重新开始一个包，包的所有进程将被杀死，所有与其联系的运行时间状态应该被移除，包括包名（重新开始包程序不能接收到这个广播）</p>
<p>ACTION_PACKAGE_DATA_CLEARED        用户已经清除一个包的数据，包括包名（清除包程序不能接收到这个广播）</p>
<p>ACTION_BATTERY_CHANGED             电池的充电状态、电荷级别改变，不能通过组建声明接收这个广播，只有通过Context.registerReceiver()注册</p>
<p>ACTION_UID_REMOVED      一个用户ID已经从系统中移除</p>
</blockquote>
<ul>
<li><p>SETTING:</p>
<pre><code>android.settings.AIRPLANE_MODE_SETTINGS
android.settings.APN_SETTINGS
android.settings.APPLICATION_DEVELOPMENT_SETTINGS
android.settings.APPLICATION_SETTINGS
android.settings.BLUETOOTH_SETTINGS
android.settings.DATA_ROAMING_SETTINGS
android.settings.DATE_SETTINGS
android.settings.DISPLAY_SETTINGS
android.settings.INPUT_METHOD_SETTINGS
android.settings.INTERNAL_STORAGE_SETTINGS
android.settings.LOCALE_SETTINGS
android.settings.LOCATION_SOURCE_SETTINGS
android.settings.MANAGE_APPLICATIONS_SETTINGS
android.settings.MEMORY_CARD_SETTINGS
android.settings.NETWORK_OPERATOR_SETTINGS
android.settings.QUICK_LAUNCH_SETTINGS
android.settings.SECURITY_SETTINGS
android.settings.SETTINGS
android.settings.SOUND_SETTINGS
android.settings.SYNC_SETTINGS
android.settings.USER_DICTIONARY_SETTINGS
android.settings.WIFI_IP_SETTINGS
android.settings.WIFI_SETTINGS
android.settings.WIRELESS_SETTINGS
</code></pre></li>
</ul>
<p>&gt;</p>
<blockquote>
<p>在android SDK文档中有这样一个类，android.provider.Settings类提供android系统各个页面的跳转常量：</p>
<p>使用实例例：startActivity(new Intent(Settings.ACTION_WIRELESS_SETTINGS))，即可跳到android手机网络设置页面。</p>
<p>如果要launch Mobile Networks Setting页面按如下方法：</p>
</blockquote>
<pre><code>Intent intent=new Intent(Settings.ACTION_DATA_ROAMING_SETTINGS);
ComponentName cName = new ComponentName(“com.android.phone”,”com.android.phone.Settings”);
intent.setComponent(cName);
startActivity(intent);
</code></pre><blockquote>
<p>如果要进入Networks Operators页面按如下方法：</p>
</blockquote>
<pre><code>Intent intent = new Intent(Intent.ACTION_MAIN);
intent.setClassName(“com.android.phone”, “com.android.phone.NetworkSetting”);
startActivity(intent);
</code></pre><ul>
<li><p>String 环境变量</p>
<pre><code>String ACTION_ACCESSIBILITY_SETTINGS
辅助功能模块的显示设置。 Activity Action: Show settings for accessibility modules.
String ACTION_ADD_ACCOUNT
显示屏幕上创建一个新帐户添加帐户。 Activity Action: Show add account screen for creating a new account.
String ACTION_AIRPLANE_MODE_SETTINGS
显示设置，以允许进入/退出飞行模式。 Activity Action: Show settings to allow entering/exiting airplane mode.
String ACTION_APN_SETTINGS
显示设置，以允许配置的APN。 Activity Action: Show settings to allow configuration of APNs.
String ACTION_APPLICATION_DETAILS_SETTINGS
有关特定应用程序的详细信息的显示屏幕。 Activity Action: Show screen of details about a particular application.
String ACTION_APPLICATION_DEVELOPMENT_SETTINGS
显示设置，以允许应用程序开发相关的设置配置 Activity Action: Show settings to allow configuration of application development-related settings.
String ACTION_APPLICATION_SETTINGS
显示设置，以允许应用程序相关的设置配置 Activity Action: Show settings to allow configuration of application-related settings.
String ACTION_BLUETOOTH_SETTINGS
显示设置，以允许蓝牙配置 Activity Action: Show settings to allow configuration of Bluetooth.
String ACTION_DATA_ROAMING_SETTINGS
选择of2G/3G显示设置 Activity Action: Show settings for selection of2G/3G.
String ACTION_DATE_SETTINGS
显示日期和时间设置，以允许配置 Activity Action: Show settings to allow configuration of date and time.
String ACTION_DEVICE_INFO_SETTINGS
显示一般的设备信息设置（序列号，软件版本，电话号码，等） Activity Action: Show general device information settings (serial number, software version, phone number, etc.).
String ACTION_DISPLAY_SETTINGS
显示设置，以允许配置显示 Activity Action: Show settings to allow configuration of display.
String ACTION_INPUT_METHOD_SETTINGS
特别配置的输入方法，允许用户启用输入法的显示设置 Activity Action: Show settings to configure input methods, in particular allowing the user to enable input methods.
String ACTION_INPUT_METHOD_SUBTYPE_SETTINGS
显示设置来启用/禁用输入法亚型 Activity Action: Show settings to enable/disable input method subtypes.
String ACTION_INTERNAL_STORAGE_SETTINGS
内部存储的显示设置 Activity Action: Show settings for internal storage.
String ACTION_LOCALE_SETTINGS
显示设置，以允许配置的语言环境 Activity Action: Show settings to allow configuration of locale.
String ACTION_LOCATION_SOURCE_SETTINGS
显示设置，以允许当前位置源的配置 Activity Action: Show settings to allow configuration of current location sources.
String ACTION_MANAGE_ALL_APPLICATIONS_SETTINGS
显示设置来管理所有的应用程序 Activity Action: Show settings to manage all applications.
String ACTION_MANAGE_APPLICATIONS_SETTINGS
显示设置来管理安装的应用程序 Activity Action: Show settings to manage installed applications.
String ACTION_MEMORY_CARD_SETTINGS
显示设置为存储卡存储 Activity Action: Show settings for memory card storage.
String ACTION_NETWORK_OPERATOR_SETTINGS
选择网络运营商的显示设置 Activity Action: Show settings for selecting the network operator.
String ACTION_PRIVACY_SETTINGS
显示设置，以允许配置隐私选项 Activity Action: Show settings to allow configuration of privacy options.
String ACTION_QUICK_LAUNCH_SETTINGS
显示设置，以允许快速启动快捷键的配置 Activity Action: Show settings to allow configuration of quick launch shortcuts.
String ACTION_SEARCH_SETTINGS
全局搜索显示设置 Activity Action: Show settings for global search.
String ACTION_SECURITY_SETTINGS
显示设置，以允许配置的安全性和位置隐私 Activity Action: Show settings to allow configuration of security and location privacy.
String ACTION_SETTINGS
显示系统设置 Activity Action: Show system settings.
String ACTION_SOUND_SETTINGS
显示设置，以允许配置声音和音量 Activity Action: Show settings to allow configuration of sound and volume.
String ACTION_SYNC_SETTINGS
显示设置，以允许配置同步设置 Activity Action: Show settings to allow configuration of sync settings.
String ACTION_USER_DICTIONARY_SETTINGS
显示设置来管理用户输入字典 Activity Action: Show settings to manage the user input dictionary.
String ACTION_WIFI_IP_SETTINGS
显示设置，以允许配置一个静态IP地址的Wi – Fi Activity Action: Show settings to allow configuration of a static IP address for Wi-Fi.
String ACTION_WIFI_SETTINGS
显示设置，以允许Wi – Fi配置 Activity Action: Show settings to allow configuration of Wi-Fi.
String ACTION_WIRELESS_SETTINGS
显示设置，以允许配置，如Wi – Fi，蓝牙和移动网络的无线控制 Activity Action: Show settings to allow configuration of wireless controls such as Wi-Fi, Bluetooth and Mobile networks.
String AUTHORITY
String EXTRA_AUTHORITIES
在推出活动的基础上给予的权力限制可选项。 Activity Extra: Limit available options in launched activity based on the given authority.
String EXTRA_INPUT_METHOD_ID
</code></pre></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[省电模式部分代码]]></title>
      <url>http://percychen.com/2014/08/07/2014-08-07-powersavecode/</url>
      <content type="html"><![CDATA[<p>####这是我写的一个电量管理的一些代码</p>
<p>以下皆在android 4.3 平台上测试通过<br></p>
<ol>
<li><p>将 休眠时间调制 15秒：</p>
<pre><code>Settings.System.putInt(getContentResolver(),android.provider.Settings.System.SCREEN_OFF_TIMEOUT,-1);
</code></pre></li>
<li><p>蓝牙：</p>
<pre><code>关闭：
BluetoothAdapter bluetoothadapter = BluetoothAdapter.getDefaultAdapter();
bluetoothadapter.disable();
打开：
BluetoothAdapter bluetoothadapter = BluetoothAdapter.getDefaultAdapter();
bluetoothadapter.disable();
是否已经打开:
if(!bluetoothadapter.isEnabled()){}
权限:
&lt;uses-permission android:name=&quot;android.permission.BLUETOOTH_ADMIN&quot;/&gt;
&lt;uses-permission android:name=&quot;android.permission.BLUETOOTH&quot;/&gt;
</code></pre></li>
</ol>
<ol>
<li><p>wifi</p>
<pre><code>关闭：
WifiManager manager =null;
manager = (WifiManager)this.getSystemService(Context.WIFI_SERVICE);
manager.setWifiEnabled(false);

打开：
WifiManager manager =null;
manager = (WifiManager)this.getSystemService(Context.WIFI_SERVICE);
manager.setWifiEnabled(true);

判断是否打开：
public String checkWifi(Activity activitiy,String string) {
WifiManager mWifiManager = (WifiManager) activitiy
        .getSystemService(Context.WIFI_SERVICE);
WifiInfo wifiInfo = mWifiManager.getConnectionInfo();
int ipAddress = wifiInfo == null ? 0 : wifiInfo.getIpAddress();
if (mWifiManager.isWifiEnabled() &amp;&amp; ipAddress != 0) {return string;}
else {return string;}
}

权限：
&lt;uses-permission android:name=&quot;android.permission.ACCESS_WIFI_STATE&quot;/&gt;
&lt;uses-permission android:name=&quot;android.permission.CHANGE_WIFI_STATE&quot;/&gt;
</code></pre></li>
<li><p>数据流量：</p>
<pre><code>打开：
ConnectivityManager connectivityManager = (ConnectivityManager)getSystemService(
        Context.CONNECTIVITY_SERVICE);
try {
        Class ownerClass = connectivityManager.getClass();
        Class[] argsClass = new Class[1];
        argsClass[0] = boolean.class;
        Method method = ownerClass.getMethod(&quot;setMobileDataEnabled&quot;, argsClass);
        method.invoke(connectivityManager, false);
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println(&quot;移动数据设置错误: &quot; + e.toString());
    }

关闭：
ConnectivityManager connectivityManager = (ConnectivityManager)getSystemService(
        Context.CONNECTIVITY_SERVICE);
try {
    Class ownerClass = connectivityManager.getClass();
    Class[] argsClass = new Class[1];
    argsClass[0] = boolean.class;
    Method method = ownerClass.getMethod(&quot;setMobileDataEnabled&quot;, argsClass);
    method.invoke(connectivityManager, true);

} catch (Exception e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
    System.out.println(&quot;移动数据设置错误: &quot; + e.toString());
}

判断是否开启：
public String checkdata(String string) {
ConnectivityManager connectivityManager = (ConnectivityManager)getSystemService(
        Context.CONNECTIVITY_SERVICE);
NetworkInfo networkInfo = connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);
if (false == networkInfo.isConnectedOrConnecting()) {
    string=&quot;close&quot;;
    return string;
} else {
    string=&quot;open&quot;;
    return string;
}
}

权限：
&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot;/&gt;
&lt;uses-permission android:name=&quot;android.permission.CHANGE_NETWORK_STATE&quot;/&gt;
</code></pre></li>
<li><p>屏幕旋转</p>
<pre><code>如果开启就关闭，关闭就开启：
int flag = Settings.System.getInt(getContentResolver(),
        Settings.System.ACCELEROMETER_ROTATION, 0);
Settings.System.putInt(this.getContentResolver(),Settings.System.ACCELEROMETER_ROTATION,flag==1?0:1);

检查是否开启：
public String checkrotate(String string){
int flag = Settings.System.getInt(getContentResolver(),
        Settings.System.ACCELEROMETER_ROTATION, 0);
 if (0 == flag) {
     string=&quot;close&quot;;
        return string;
}
 else {
     string=&quot;open&quot;;
        return string;
 }
}
</code></pre></li>
<li><p>降低屏幕亮度<br>这个比较复杂,在主函数里添加：</p>
<pre><code>try {
screenMode = Settings.System.getInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS_MODE);
Log.i(TAG, &quot;screenMode = &quot; + screenMode);

// 获得当前屏幕亮度值 0--255
screenBrightness = Settings.System.getInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS);
Log.i(TAG, &quot;screenBrightness = &quot; + screenBrightness);

// 如果当前的屏幕亮度调节调节模式为自动调节，则改为手动调节屏幕亮度
if (screenMode == Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC) {
    setScreenMode(Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);
}

// 设置屏幕亮度值为最大值0
setScreenBrightness(0.0F);
} catch (SettingNotFoundException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
然后添加两个执行函数

 private void setScreenMode(int value) {
 Settings.System.putInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS_MODE, value);
 }
 private void setScreenBrightness(float value) {
 Window mWindow = getWindow();
 WindowManager.LayoutParams mParams = mWindow.getAttributes();
 float f = value / 255.0F;
 mParams.screenBrightness = f;
 mWindow.setAttributes(mParams);

 // 保存设置的屏幕亮度值
 Settings.System.putInt(getContentResolver(), Settings.System.SCREEN_BRIGHTNESS, (int) value);
 }

还有private 几个变量

private int screenMode;
private static final String TAG = &quot;ScreenLuminance&quot;;
private int screenBrightness;

亮度部分需要权限：

&lt;uses-permission android:name=&quot;android.permission.WRITE_SETTINGS&quot;/&gt;
</code></pre></li>
</ol>
<p>####最后更新时间：2014-09-24</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下JDK的下载和使用]]></title>
      <url>http://percychen.com/2014/05/05/2014-05-05-linuxjdkinstall/</url>
      <content type="html"><![CDATA[<p>Linux下有mint/ubuntu/deepin/debian/opensuse/redhat等众多平台.<br><br>而Orcle只为Linux发布一个JDK（当然包含64bit和32bit），这个JDK是tar.gz格式的<br>初用ubuntu或者基于ubuntu衍生版的人就懵了，怎么安装呢？<br>其实很简单，下面我就来讲解下如何安装<br>&gt;</p>
<h2 id="安装方法："><a href="#安装方法：" class="headerlink" title="安装方法："></a>安装方法：</h2><p>其实不用安装，只需要用命令解压开：</p>
<pre><code>tar zvxf jdk1.7.0_67.tar.gz,
</code></pre><ul>
<li>参数的配置。</li>
</ul>
<blockquote>
<p>将解压出来的jdk复制一份到 主系统里去（安全着想）</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cp -r jdk1.7.0_67 /usr/<span class="built_in">local</span></div></pre></td></tr></table></figure>
<blockquote>
<p>在你的/etc/profile文件中增加一条这样子的配置</p>
</blockquote>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/<span class="built_in">local</span>/jdk1.7.0_67</div><div class="line">PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p>然后用</p>
<pre><code>source /etc/profile
</code></pre><p>命令使其生效。<br>然后在终端输入</p>
<pre><code>java
javac
java -version
</code></pre><p> 这几条命令检验是否已经安装好</p>
<h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><p><em>2014年9月12更新</em></p>
<p>####切换编译时默认使用的jdk</p>
<p>如果你之前已经安装了openjdk,或者jdk8，那么请先将jdk7添加进去：</p>
<pre><code>sudo update-alternatives --install /usr/bin/java java /usr/local/jdk1.7.0_67/bin/java 300
sudo update-alternatives --install /usr/bin/javac javac /usr/local/jdk1.7.0_67/bin/javac 300
</code></pre><p>然后进入选择就ok：</p>
<pre><code>sudo update-alternatives --config java
sudo update-alternatives --config javac
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[解决相机移植后像素无法识别完全的bug]]></title>
      <url>http://percychen.com/2014/05/02/2014-05-02-fixandroidcamera/</url>
      <content type="html"><![CDATA[<p>问题来源很简单，自己编译了一个CM自带的相机，丢进去没发现BUG，全景相机，后期优化什么的都没有问题。<br>于是放进ROM包里，发出去。<br>细心机友发现最高只识别500W，于是拆开源码分析。<br>源码位于:</p>
<pre><code>code/cm10.1/packages/apps/camera
</code></pre><p>发现字符串没有丢失，链接到java代码里面一看，明白了：<br>CM的相机（AOSP和AOKP也是如此）识别相机的方式并不是读取某个文件，而是获取相机成像尺寸，源码里写死在array里面，也就是说，相机获取成像尺寸后与values下面的数组文件array.xml对比，有的话就显示。<br>而官方的相机组件接口里面的成像尺寸并不和array.xml对应，这就造成了，像素识别不准确。<br>解决办法：</p>
<blockquote>
<p>修改array.xml中的pref_camera_picturesize_entryvalues数组值</p>
</blockquote>
<p>使它的尺寸与官方相机拍出来的尺寸一致就可以了。<br>改完之后如图：<br><br><br><img src="/img/camera.jpg" alt="github"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[crontab:让你的shell脚本定时运行]]></title>
      <url>http://percychen.com/2014/04/08/2014-04-08-autorunbash/</url>
      <content type="html"><![CDATA[<p>bash是linux下经常用到的脚本，由于工作需要，我经常需要同步CM10.1，乐蛙和MIUI的patchrom。每次都要手动cd进去，然后repo sync。我比较会偷懒，所以写了一个脚本，自动同步这三个脚本，不过这样的话，每个星期也要运行一次，还是太麻烦了。<br>于是我找到了这篇文章，介绍如何使用cron来定期执行脚本，这样以来，我就能保证我的源码实时更新了。<br>这篇文章写得很简单，程序员可以看一下。</p>
<ol>
<li><p>使用cron来定期执行任务</p>
<p> 使用crond (cron监控程序)来定期运行一些任务，比如备份日志、数据库、把日志发送到自己邮箱等等操作都可以又定期运行程序来完成。<br><br>crond是个脚本，每次Linux启动的时候都自动起到该脚本，该脚本是 /etc/rc.d/init.d 下面的，每次系统启动的时候就自动会启动该目录下<br>的脚本。<br><br>cron有两个配置文件，一个/etc/crontab，是一个全局配置文件，一组是crontab命令生成生成的配置文件，是属于用户级的。<br><br>一般对管理员来说，只要使用全局配置的/etc/crontab就配置文件就可以了，我们去打开配置文件看看：</p>
<pre><code>SHELL=/bin/bash
PATH=/sbin:/bin:/usr/sbin:/usr/bin
MAILTO=root
HOME=/

# run-parts
01 * * * * root run-parts /etc/cron.hourly
02 4 * * * root run-parts /etc/cron.daily
22 4 * * 0 root run-parts /etc/cron.weekly
42 4 1 * * root run-parts /etc/cron.monthly
</code></pre><p> 我们稍微来分析一下这个文件：<br><br>大家看到里面的“*”一定觉得很奇怪，下面我们句稍微来了解一下cron的语法：<br><br>上面脚本中的时间是从左到右的，分别列出了五个字段，我们看下面的表：</p>
<pre><code>------------------------------------------------
字段            取值范围
------------------------------------------------
Minute          0 ~ 59
Hour            0 ~ 23，其中0是午夜，20是晚上8点
Day             1 ~ 31
Month           1 ~ 12
Day of week     0 ~ 7，其中0和7是表示星期天
------------------------------------------------
</code></pre><p> 任何字段中的星号是通配符，例如，如果第一个字段包括星号，则特定若无其事在可能的每一分钟运行。如果要指定时间范围，比如上午8点到<br>下午4点，则可以见第二个字段设置为8~16。如果要隔一天运行任务，则可以将第三个字段设置为*/2。可以看出，如果五个字段(minute、hour<br>、day、month、day of week) 之后，cron中的每个字段就没什么神秘之处了。<br></p>
</li>
<li><p>用户自己的cron</p>
<p> 用户也可以计划用户自己的cron任务，比如他想要在半夜整理他的文件，然后发送邮件给自己，只要这个用户他没有在/etc/cron.deny表中，<br>就可以使用crontab -e命令来启动自己的cron文件。</p>
</li>
<li><p>对cron的访问控制</p>
<p> 默认情况下，所有用户都能访问cron工具，要对cron进行访问控制，则可以生成/etc/cron.allow与/etc/cron.deny文件。<br><br>(1)这两个文件都不存在时，每个用户都可以访问cron工具<br><br>(2)存在/etc/cron.allow文件时，则只有cron.allow文件中允许的用户才能访问cron工具，如果也有/etc/cron.deny文件，则忽略cron.deny文件</p>
</li>
</ol>
<p>列出crontab文件:<br>使用-l参数列出crontab文件:</p>
<pre><code>$ crontab -l
0,15,30,45,18-06 * * * /bin/echo `date` &gt; dev/tty1
</code></pre><p>可以使用这种方法在$HOME目录中对crontab文件做一备份:</p>
<pre><code>$ crontab -l &gt; $HOME/mycron
</code></pre><p>这样，一旦不小心误删了crontab文件，可以用上一节所讲述的方法迅速恢复。</p>
<p>编辑crontab文件<br>如果希望添加、删除或编辑crontab文件中的条目，而EDITOR环境变量又设置为vi，那么就可以用vi来编辑crontab文件:</p>
<pre><code>$ crontab -e
</code></pre><p>可以像使用vi编辑其他任何文件那样修改crontab文件并退出。如果修改了某些条目或添加了新的条目，那么在保存该文件时， cron会对其进行必要的完整性检查。如果其中的某个域出现了超出允许范围的值，它会提示你。 我们在编辑crontab文件时，没准会加入新的条目。例如，加入下面的一条：</p>
<pre><code># DT:delete core files,at 3.30am on 1,7,14,21,26,26 days of each month
30 3 1,7,14,21,26 * * /bin/find -name &apos;core&apos; -exec rm {} \;
</code></pre><p>保存并退出。</p>
<p>注解</p>
<p>最好在crontab文件的每一个条目之上加入一条注释，这样就可以知道它的功能、运行时间，更为重要的是，知道这是哪位用户的定时作业。<br>删除crontab文件</p>
<pre><code>$crontab -r
</code></pre><p>###使用实例</p>
<p>实例1：每1分钟执行一次myCommand</p>
<pre><code>* * * * * myCommand
</code></pre><p>实例2：每小时的第3和第15分钟执行</p>
<pre><code>3,15 * * * * myCommand
</code></pre><p>实例3：在上午8点到11点的第3和第15分钟执行</p>
<pre><code>3,15 8-11 * * * myCommand
</code></pre><p>实例4：每隔两天的上午8点到11点的第3和第15分钟执行</p>
<pre><code>3,15 8-11 */2  *  * myCommand
</code></pre><p>实例5：每周一上午8点到11点的第3和第15分钟执行</p>
<pre><code>3,15 8-11 * * 1 myCommand
</code></pre><p>实例6：每晚的21:30重启smb</p>
<pre><code>30 21 * * * /etc/init.d/smb restart
</code></pre><p>实例7：每月1、10、22日的4 : 45重启smb</p>
<pre><code>45 4 1,10,22 * * /etc/init.d/smb restart
</code></pre><p>实例8：每周六、周日的1 : 10重启smb</p>
<pre><code>10 1 * * 6,0 /etc/init.d/smb restart
</code></pre><p>实例9：每天18 : 00至23 : 00之间每隔30分钟重启smb</p>
<pre><code>0,30 18-23 * * * /etc/init.d/smb restart
</code></pre><p>实例10：每星期六的晚上11 : 00 pm重启smb</p>
<pre><code>0 23 * * 6 /etc/init.d/smb restart
</code></pre><p>实例11：每一小时重启smb</p>
<pre><code>* */1 * * * /etc/init.d/smb restart
</code></pre><p>实例12：晚上11点到早上7点之间，每隔一小时重启smb</p>
<pre><code>* 23-7/1 * * * /etc/init.d/smb restart
</code></pre><h2 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项:"></a>其他注意事项:</h2><ul>
<li><p>新创建的cron job，不会马上执行，至少要过2分钟才执行。如果重启cron则马上执行。</p>
</li>
<li><p>当crontab失效时，可以尝试/etc/init.d/crond restart解决问题。或者查看日志看某个job有没有执行/报错tail -f /var/log/cron。</p>
</li>
<li><p>千万别乱运行crontab -r。它从Crontab目录（/var/spool/cron）中删除用户的Crontab文件。删除了该用户的所有crontab都没了。</p>
</li>
<li><p>在crontab中%是有特殊含义的，表示换行的意思。如果要用的话必须进行转义%，如经常用的date ‘+%Y%m%d’在crontab里是不会执行的，应该换成date ‘+%Y%m%d’。</p>
</li>
<li><p>更新系统时间时区后需要重启cron,在ubuntu中服务名为cron:</p>
<pre><code>$service cron restart
</code></pre></li>
</ul>
<p>ubuntu下启动、停止与重启cron:</p>
<pre><code>$sudo /etc/init.d/cron start
$sudo /etc/init.d/cron stop
$sudo /etc/init.d/cron restart
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[linux下解包 Android system.img方法]]></title>
      <url>http://percychen.com/2014/03/31/2014-03-31-unpackandroidimginlinux/</url>
      <content type="html"><![CDATA[<p>android4.0之后，system.img文件格式为ext4，如果需要修改system.img文件，该如何做：<br></p>
<ol>
<li><p>ubuntu系统(其它衍生版和debian的衍生版也可以)，准备工具make_ext4fs、simg2img、mkusering.sh。<br><br>make_ext4fs、simg2img、mkusering.sh这三个工具可以在源码编译之后的 out/host/linux_x86/bin目录下获取，并将这三个命令复制到ubuntu系统/usr/bin目录。</p>
</li>
<li><p>解压system.img为system.img.ext4<br><br>命令：</p>
<pre><code>simg2img  system.img  system.img.ext4
</code></pre></li>
<li><p>创建system.img.ext4挂载目录tmp<br><br>命令：</p>
<pre><code>mkdir tmp
</code></pre></li>
<li><p>挂载system.img.ext4到tmp目录<br><br>命令：</p>
<pre><code>mount -t ext4 -o loop  system.img.ext4 tmp
</code></pre></li>
<li><p>进入tmp目录，根据需求修改tmp中的目录<br></p>
</li>
<li><p>将tmp目录打包为新的system.img<br><br>命令：</p>
<pre><code>make_ext4fs -s -l 239M -a system system.img tmp
</code></pre></li>
</ol>
<p>关于make_ext4fs、simg2img、mkusering.sh的参数含义可以在终端中直接输入命令，并回车查看。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 4.1以上实现归属地JAVA代码]]></title>
      <url>http://percychen.com/2014/03/16/2014-03-16-androidphonenumbercode/</url>
      <content type="html"><![CDATA[<h2 id="java代码"><a href="#java代码" class="headerlink" title="java代码:"></a>java代码:</h2><pre><code>    private void setGeoDescription(CallerInfo info, String label) {

    if(TextUtils.isEmpty(info.geoDescription))
        info.updateGeoDescription(mContext, info.phoneNumber);
        if(label != null &amp;&amp; !TextUtils.isEmpty(info.geoDescription))
        {
            mLabel.setText(label + &quot;\n&quot; +info.geoDescription);
            mLabel.setVisibility(View.VISIBLE);
        }
        else if(!TextUtils.isEmpty(info.geoDescription))
        {
        mPhoneNumber.setText(info.geoDescription);
        mPhoneNumber.setVisibility(View.VISIBLE);
        }
}
</code></pre><p>##调用方式:<br>&gt;<br>在com/android/phone/callcard.java内:<br>在updateDisplayForPerson函数里的最后一句下面调用</p>
<pre><code>setGeoDescription(info, label);
</code></pre><p>&gt;<br>即可</p>
<p>##如果上面那个函数不行，这边还有一个归属地的函数，原理是一样的</p>
<p>###java代码</p>
<pre><code>    private void setGeoDescription(CallerInfo info, String label) {


    if(TextUtils.isEmpty(info.geoDescription))
        info.updateGeoDescription(mContext, info.phoneNumber);
        if(label != null &amp;amp;&amp;amp; !TextUtils.isEmpty(info.geoDescription))
        {
            mCallTypeLabel.setText(info.geoDescription);
            mCallTypeLabel.setGravity(Gravity.CENTER);
            mCallTypeLabel.setVisibility(View.VISIBLE);
        }
        else if(!TextUtils.isEmpty(info.geoDescription))
        {
        mPhoneNumber.setText(info.geoDescription);
        mPhoneNumber.setVisibility(View.VISIBLE);
        }
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于patch ROM最后签名的问题]]></title>
      <url>http://percychen.com/2014/01/18/2014-01-18-patchromsigh/</url>
      <content type="html"><![CDATA[<p>#####不知道最近怎么的，总有人问我一些patch ROM的问题，近期问得特别多的就是 下面这个错误信息：</p>
<pre><code>ERROR: no key specified for:
BaiduVoiceAssistant.apk
OupengBrowser.apk
BaiduMap.apk
Calendar365.apk
iReader.apk
BaiduSearch.apk
Stats.apk
LewaGameCenter.apk
LewaLockScreen.apk
LewaAppStore.apk
LewaLabiSync.apk
LewaVirusDefense.apk
LewaSearch.apk
LewaPower+.apk
LewaFlashlight.apk
LewaSecurity2.apk
NetworkLocation.apk
LewaQrcodeScanner.apk

Use &apos;-e =&apos; to specify a key (which may be an
empty string to not sign this apk).
Build full ota package: /home/lixin/code/lewa/finder/out/fullota.zip
unzipping target target-files...
warning [/home/lixin/code/lewa/finder/out/target_files.zip]:  zipfile is empty

ERROR: failed to unzip input target-files &quot;/home/lixin/code/lewa/finder/out/target_files.zip&quot;

cp: 无法获取&quot;/home/lixin/code/lewa/finder/out/fullota.zip&quot; 的文件状态(stat): 没有那个文件或目录
make: *** [fullota] 错误 1
</code></pre><p>解决办法很简单，就是往tools/target_files_template/META/apkcerts.txt 里面加上面无法签名的APK，语句仿造上面的写就可以了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[android 在编译时去掉/增加多国语言]]></title>
      <url>http://percychen.com/2013/12/06/2013-12-06-android4.4removeaddlanguage/</url>
      <content type="html"><![CDATA[<ol>
<li><p>进入build/target/product目录，在languages_full.mk或languages_small.mk文件中，修改 PRODUCT_LOCALES的值，来定制语言,比如</p>
<pre><code>PRODUCT_LOCALES := en_US zh_CN zh_TW en_GB fr_FR it_IT de_DE es_ES；
</code></pre></li>
<li><p>相同目录下，修改locales_full.mk文件的</p>
<pre><code>$(call inherit-product, build/target/product/languages_full.mk)
</code></pre><p> 语句来切换所使用的文件;</p>
</li>
<li><p>重新编译即可。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android 4.0-4.3 状态栏全透明教程（源码）]]></title>
      <url>http://percychen.com/2013/11/26/2013-11-26-statusbartranparent/</url>
      <content type="html"><![CDATA[<h2 id="关于Android-4-4和Android-L"><a href="#关于Android-4-4和Android-L" class="headerlink" title="关于Android 4.4和Android L"></a>关于Android 4.4和Android L</h2><h4 id="因为4-4和android-L-已经是透明的了，需要全透明可以直接去systemui中将图片蒙版用PS做成全透明就ok。"><a href="#因为4-4和android-L-已经是透明的了，需要全透明可以直接去systemui中将图片蒙版用PS做成全透明就ok。" class="headerlink" title="因为4.4和android L 已经是透明的了，需要全透明可以直接去systemui中将图片蒙版用PS做成全透明就ok。"></a>因为4.4和android L 已经是透明的了，需要全透明可以直接去systemui中将图片蒙版用PS做成全透明就ok。</h4><h2 id="android4-0到4-3"><a href="#android4-0到4-3" class="headerlink" title="android4.0到4.3"></a>android4.0到4.3</h2><h4 id="4-0-4-3的方法是有BUG的，再三方应用写了windowsbackground的情况下会导致看不清。比如豌豆荚和QQ会将windowsbackground设置为纯白，如果状态栏是的图标和时间是白色，那就会导致看不清。解决办法是在systemui里写一个广播，在桌面的是设置全透明，在其它界面时设置黑色（MIUI-V5和乐蛙的做法，MIUI-V6之后使用了沉浸式状态栏，弄清原理后再写教程）"><a href="#4-0-4-3的方法是有BUG的，再三方应用写了windowsbackground的情况下会导致看不清。比如豌豆荚和QQ会将windowsbackground设置为纯白，如果状态栏是的图标和时间是白色，那就会导致看不清。解决办法是在systemui里写一个广播，在桌面的是设置全透明，在其它界面时设置黑色（MIUI-V5和乐蛙的做法，MIUI-V6之后使用了沉浸式状态栏，弄清原理后再写教程）" class="headerlink" title="4.0-4.3的方法是有BUG的，再三方应用写了windowsbackground的情况下会导致看不清。比如豌豆荚和QQ会将windowsbackground设置为纯白，如果状态栏是的图标和时间是白色，那就会导致看不清。解决办法是在systemui里写一个广播，在桌面的是设置全透明，在其它界面时设置黑色（MIUI V5和乐蛙的做法，MIUI V6之后使用了沉浸式状态栏，弄清原理后再写教程）"></a>4.0-4.3的方法是有BUG的，再三方应用写了windowsbackground的情况下会导致看不清。比如豌豆荚和QQ会将windowsbackground设置为纯白，如果状态栏是的图标和时间是白色，那就会导致看不清。解决办法是在systemui里写一个广播，在桌面的是设置全透明，在其它界面时设置黑色（MIUI V5和乐蛙的做法，MIUI V6之后使用了沉浸式状态栏，弄清原理后再写教程）</h4><h3 id="本文至介绍如何实现简单的透明"><a href="#本文至介绍如何实现简单的透明" class="headerlink" title="本文至介绍如何实现简单的透明"></a>本文至介绍如何实现简单的透明</h3><p>&gt;<br>首先找到android/frameworks/base/policy/src/com/android/internal/policy/impl中的PhoneWindowManager.java类<br>然后找到 public int getSystemDecorRectLw(Rect systemRect) 的方法</p>
<blockquote>
<p>原来的方法内容是：</p>
</blockquote>
<pre><code>public int getSystemDecorRectLw(Rect systemRect) {
        systemRect.left = mSystemLeft;
        systemRect.top = mSystemTop;
        systemRect.right = mSystemRight;
        systemRect.bottom = mSystemBottom;
        if (mStatusBar != null) return mStatusBar.getSurfaceLayer();
        if (mNavigationBar != null) return mNavigationBar.getSurfaceLayer();
        return 0;
    }
</code></pre><p>&gt;<br>在这里修改该方法为</p>
<pre><code>public int getSystemDecorRectLw(Rect systemRect) {
        systemRect.left = mSystemLeft;
        systemRect.top = mSystemTop;
        systemRect.right = mSystemRight;
        systemRect.bottom = mSystemBottom;
        if (mStatusBar != null) return 0;
        if (mNavigationBar != null) return 0;
        return 0;
    }
</code></pre><p>&gt;<br>这里修改完毕以后，进入: android/frameworks/base/packages/SystemUI/res/layout目录下<br>找到navigation_bar.xml和status_bar.xml文件<br>然后把这个两个布局文件的background属性都修改为#00000000，</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一些Android的零碎语法]]></title>
      <url>http://percychen.com/2013/06/03/2013-06-03-someandroidcode/</url>
      <content type="html"><![CDATA[<h2 id="XML篇"><a href="#XML篇" class="headerlink" title="XML篇"></a>XML篇</h2><p>####AndroidManifest篇</p>
<ul>
<li><p>在 Androidmannifest.xml相应 的activity中添加条属性:</p>
<pre><code>android:windowSoftInputMode=&quot;adjustPan&quot;
</code></pre></li>
<li><p>禁止横屏代码:</p>
<pre><code>android:screenOrientation=&quot;portrait&quot;
</code></pre></li>
<li><p>允许外部启动service：</p>
<pre><code>android:exported=&quot;true&quot;
</code></pre></li>
</ul>
<p>####控件篇</p>
<ul>
<li><p>Edittext只允许输入数字</p>
<pre><code>android:numeric=&quot;integer&quot;
</code></pre></li>
</ul>
<p>####主题篇</p>
<ul>
<li><p>去掉actionbar上面的阴影</p>
<pre><code>&lt;style name=&quot;MyAppTheme&quot; parent=&quot;android:Theme.Holo.Light&quot;&gt;
    &lt;item name=&quot;android:windowContentOverlay&quot;&gt;@null&lt;/item&gt;
&lt;/style&gt;
</code></pre></li>
</ul>
<h2 id="JAVA篇"><a href="#JAVA篇" class="headerlink" title="JAVA篇"></a>JAVA篇</h2><p>####根据屏幕分辨率来设置字体等其它资源</p>
<pre><code>getWindowManager().getDefaultDisplay().getMetrics(dm);
if(dm.widthPixels == 480){
    lyricView.setLrcTextSize(22);
}
if(dm.widthPixels == 720){
    lyricView.setLrcTextSize(30);
}
if(dm.widthPixels == 1080){
    lyricView.setLrcTextSize(40);
}
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[介绍制作android rom 的方法]]></title>
      <url>http://percychen.com/2012/08/01/2012-08-01-android%E9%95%9C%E5%83%8F%E5%88%B6%E4%BD%9C%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="update-zip包的制作"><a href="#update-zip包的制作" class="headerlink" title="update.zip包的制作"></a>update.zip包的制作</h3><ul>
<li><p>新建一个目标，在此目录下准备好需要的文件,如system目录文件、boot.img、recoveryimg等</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir testupdate</div><div class="line">cp system/ testupdate/ -tf</div><div class="line"><span class="comment">#如果文件是system.img镜像可以用unyaffs解压出来得到system</span></div></pre></td></tr></table></figure>
</li>
<li><p>用make-update-script工具生成update-script脚本,如下</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cp make-update-script testupdate/</div><div class="line">cp android-info.txt testupdate/</div><div class="line"><span class="built_in">cd</span> testupdate</div><div class="line">./make-update-script system android-info.txt &gt; update-script</div><div class="line">rm make-update-script android-info.txt</div><div class="line">vi update-script //根据需要适当修改些脚本</div><div class="line"><span class="comment">#system是要更新的目录，android-info.txt是板的版本信息,update-script是输出文件名</span></div></pre></td></tr></table></figure>
</li>
<li><p>建立一个目录名称为META-INF/com/google/android,把上面生成的脚本放进去</p>
<pre><code>mkdir -p META-INF/com/google/android
mv update-script META-INF/com/google/android/
</code></pre></li>
</ul>
<p>1.zip压缩</p>
<pre><code>zip -r update.zip system META-INF
</code></pre><p>1.给压缩文件添加sign</p>
<pre><code>mv update.zip ../signapk/
cd ../signapk/
java -jar signapk.jar testkey.x509.pem testkey.pk8 update.zip signed-update.zip
</code></pre><p>1.删除多余的文件，并把生成的包rename</p>
<pre><code>rm update.zip
mv signed-update.zip ../update.zip
cd ../
</code></pre><p>1.大功告成，把更新包update.zip拷到sdcard根目录下去验证吧!</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><pre><code>1）如果文件里有连接，应该在获取update-script之后在原文件里删除链接文件，再打包，否则symlink将出错；
2）如果原文件里有空目录，所获的签名将失去此记录，所以如果空目录必须存在，更新之后的文件将与原文件不同（少了空目录）
</code></pre><h1 id="ramdisk-img-制作"><a href="#ramdisk-img-制作" class="headerlink" title="ramdisk.img 制作"></a>ramdisk.img 制作</h1><ul>
<li><p>方法1:</p>
<ol>
<li><p>解压a:</p>
<pre><code>mv ramdisk.img ramdisk.img.gz
gunzip ramdisk,img.gz
mkdir ramdisk;cd ramdisk
cpio -i -F ../ramdisk.img
</code></pre></li>
<li><p>压缩:</p>
<p> #产生要pack的目录list,也可以自己列<br> cpio -i -t -F ../ramdisk.img &gt; list<br> #利用刚生成的list文件列表，cpio归档<br> cpio -o -H newc -O new.img &lt; list<br> #压缩<br> gzip new.img</p>
</li>
</ol>
</li>
<li><p>方法2：</p>
</li>
</ul>
<hr>
<pre><code>1. 解压:

    gunzip -c ../your-ramdisk-file | cpio -i

2. 压缩:

    find . | cpio -o -H newc | gzip &gt; ../newramdisk.cpio.gz

_注意：_

    在android里的做法是
        1)先得到ramdisk所需要的文件，比如root目录
        2)用mkbootfs制作ramdisk.img,用法如下
        mkbootfs root | gzip &gt; ramdisk.img
</code></pre><h1 id="boot-img的制作"><a href="#boot-img的制作" class="headerlink" title="boot.img的制作"></a>boot.img的制作</h1><p>1:android正常做法</p>
<pre><code>1):连接

    mkbootimg –kernel your-kernel-file –ramdisk newramdisk.cpio.gz –cmdline “mem=128 console=ttymxc0,115200n8 init=/init rw” –output mynewimage.img
    或
    mkbootimg –kernel your-kernel-file –ramdisk newramdisk.cpio.gz –cmdline –output mynewimage.img

2):提取img中的kernel和ramdisk

    ./split_bootimg.pl mynewimage.img
</code></pre><p>2:uboot</p>
<pre><code>直接把uImage重命名为boot.img即可
</code></pre><p>3:system.img的制作(只为 yaffs2格式)</p>
<pre><code>1)压制:

    ./mkyaffs2image system/ system.img

2)解压:

    ./unyaffs system.img
</code></pre><p>4:system.img的制作(只为yaffs2格式)</p>
<pre><code>1)压制:

    ./mkyaffs2image system/ system.img

2)解压:

    ./unyaffs system.img
</code></pre><p>5:recovery.img的制作<br>    1:如果recovery的镜像是只有文件系统部分时候可以如第四所示范<br>    2:如果recovery为ramdisk形式</p>
<h1 id="制-作ramdisk的过程。"><a href="#制-作ramdisk的过程。" class="headerlink" title="制 作ramdisk的过程。"></a>制 作ramdisk的过程。</h1><p>1.在/mnt下创建rdmnt 和 rdimg 目录</p>
<pre><code>mkdir rdmnt
mkdir rdimg
</code></pre><p>2.创建一个ramdisk文件，大小32768 X 1k。</p>
<pre><code>dd if=/dev/zero of=rdimg/ramdisk bs=1k count=32768
</code></pre><p>3.使用ext2方式格式该文件</p>
<pre><code>mke2fs -F -v -m0 rdimg/ramdisk
</code></pre><p>4.将该ramdisk文件和rdmnt挂载</p>
<pre><code>mount -o loop rdimg/ramdisk rdmnt/
</code></pre><p>5.拷贝文件到挂载目录中。</p>
<pre><code>文件系统目录在：/home/xrqun/workdir/filesys/
cp –av /home/xrqun/workdir/filesys/* rdmnt
</code></pre><p>6.卸载ramdisk</p>
<pre><code>umount rdmnt
</code></pre><p>7压缩 ramdisk文件</p>
<pre><code>gzip –c -9 rdimg/ramdisk.gz
</code></pre><p>8.拷贝该ramdisk.gz映像到tftpboot目录下</p>
<pre><code>cp rdimg/ramdisk.gz /tftpboot/
</code></pre><ol>
<li><p>使用mkimage工具</p>
<pre><code>mkimage -n “uboot.ramdisk.filesys” -A arm -O linux -T ramdisk -C gzip -d ramdisk.gz uboot.ramdisk.gz
</code></pre></li>
</ol>
]]></content>
    </entry>
    
  
  
</search>
